{
  "version": 3,
  "sources": ["../qr-code-styling/lib/webpack:/QRCodeStyling/webpack/universalModuleDefinition", "../qr-code-styling/lib/webpack:/QRCodeStyling/node_modules/qrcode-generator/qrcode.js", "../qr-code-styling/lib/webpack:/QRCodeStyling/src/tools/merge.ts", "../qr-code-styling/lib/webpack:/QRCodeStyling/src/tools/downloadURI.ts", "../qr-code-styling/lib/webpack:/QRCodeStyling/src/tools/toDataUrl.ts", "../qr-code-styling/lib/webpack:/QRCodeStyling/src/constants/errorCorrectionPercents.ts", "../qr-code-styling/lib/webpack:/QRCodeStyling/src/figures/dot/QRDot.ts", "../qr-code-styling/lib/webpack:/QRCodeStyling/src/constants/dotTypes.ts", "../qr-code-styling/lib/webpack:/QRCodeStyling/src/figures/cornerSquare/QRCornerSquare.ts", "../qr-code-styling/lib/webpack:/QRCodeStyling/src/constants/cornerSquareTypes.ts", "../qr-code-styling/lib/webpack:/QRCodeStyling/src/figures/cornerDot/QRCornerDot.ts", "../qr-code-styling/lib/webpack:/QRCodeStyling/src/constants/cornerDotTypes.ts", "../qr-code-styling/lib/webpack:/QRCodeStyling/src/constants/shapeTypes.ts", "../qr-code-styling/lib/webpack:/QRCodeStyling/src/core/QRSVG.ts", "../qr-code-styling/lib/webpack:/QRCodeStyling/src/tools/calculateImageSize.ts", "../qr-code-styling/lib/webpack:/QRCodeStyling/src/constants/gradientTypes.ts", "../qr-code-styling/lib/webpack:/QRCodeStyling/src/constants/drawTypes.ts", "../qr-code-styling/lib/webpack:/QRCodeStyling/src/constants/qrTypes.ts", "../qr-code-styling/lib/webpack:/QRCodeStyling/src/core/QROptions.ts", "../qr-code-styling/lib/webpack:/QRCodeStyling/src/constants/errorCorrectionLevels.ts", "../qr-code-styling/lib/webpack:/QRCodeStyling/src/tools/sanitizeOptions.ts", "../qr-code-styling/lib/webpack:/QRCodeStyling/src/index.ts", "../qr-code-styling/lib/webpack:/QRCodeStyling/src/core/QRCodeStyling.ts", "../qr-code-styling/lib/webpack:/QRCodeStyling/src/tools/getMode.ts", "../qr-code-styling/lib/webpack:/QRCodeStyling/src/constants/modes.ts", "../qr-code-styling/lib/webpack:/QRCodeStyling/webpack/bootstrap", "../qr-code-styling/lib/webpack:/QRCodeStyling/webpack/startup", "../qr-code-styling/lib/webpack:/QRCodeStyling/webpack/runtime/compat get default export", "../qr-code-styling/lib/webpack:/QRCodeStyling/webpack/runtime/define property getters", "../qr-code-styling/lib/webpack:/QRCodeStyling/webpack/runtime/hasOwnProperty shorthand", "dep:qr-code-styling_lib_qr-code-styling"],
  "sourcesContent": ["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"QRCodeStyling\"] = factory();\n\telse\n\t\troot[\"QRCodeStyling\"] = factory();\n})(self, function() {\nreturn ", "//---------------------------------------------------------------------\n//\n// QR Code Generator for JavaScript\n//\n// Copyright (c) 2009 Kazuhiko Arase\n//\n// URL: http://www.d-project.com/\n//\n// Licensed under the MIT license:\n//  http://www.opensource.org/licenses/mit-license.php\n//\n// The word 'QR Code' is registered trademark of\n// DENSO WAVE INCORPORATED\n//  http://www.denso-wave.com/qrcode/faqpatent-e.html\n//\n//---------------------------------------------------------------------\n\nvar qrcode = function() {\n\n  //---------------------------------------------------------------------\n  // qrcode\n  //---------------------------------------------------------------------\n\n  /**\n   * qrcode\n   * @param typeNumber 1 to 40\n   * @param errorCorrectionLevel 'L','M','Q','H'\n   */\n  var qrcode = function(typeNumber, errorCorrectionLevel) {\n\n    var PAD0 = 0xEC;\n    var PAD1 = 0x11;\n\n    var _typeNumber = typeNumber;\n    var _errorCorrectionLevel = QRErrorCorrectionLevel[errorCorrectionLevel];\n    var _modules = null;\n    var _moduleCount = 0;\n    var _dataCache = null;\n    var _dataList = [];\n\n    var _this = {};\n\n    var makeImpl = function(test, maskPattern) {\n\n      _moduleCount = _typeNumber * 4 + 17;\n      _modules = function(moduleCount) {\n        var modules = new Array(moduleCount);\n        for (var row = 0; row < moduleCount; row += 1) {\n          modules[row] = new Array(moduleCount);\n          for (var col = 0; col < moduleCount; col += 1) {\n            modules[row][col] = null;\n          }\n        }\n        return modules;\n      }(_moduleCount);\n\n      setupPositionProbePattern(0, 0);\n      setupPositionProbePattern(_moduleCount - 7, 0);\n      setupPositionProbePattern(0, _moduleCount - 7);\n      setupPositionAdjustPattern();\n      setupTimingPattern();\n      setupTypeInfo(test, maskPattern);\n\n      if (_typeNumber >= 7) {\n        setupTypeNumber(test);\n      }\n\n      if (_dataCache == null) {\n        _dataCache = createData(_typeNumber, _errorCorrectionLevel, _dataList);\n      }\n\n      mapData(_dataCache, maskPattern);\n    };\n\n    var setupPositionProbePattern = function(row, col) {\n\n      for (var r = -1; r <= 7; r += 1) {\n\n        if (row + r <= -1 || _moduleCount <= row + r) continue;\n\n        for (var c = -1; c <= 7; c += 1) {\n\n          if (col + c <= -1 || _moduleCount <= col + c) continue;\n\n          if ( (0 <= r && r <= 6 && (c == 0 || c == 6) )\n              || (0 <= c && c <= 6 && (r == 0 || r == 6) )\n              || (2 <= r && r <= 4 && 2 <= c && c <= 4) ) {\n            _modules[row + r][col + c] = true;\n          } else {\n            _modules[row + r][col + c] = false;\n          }\n        }\n      }\n    };\n\n    var getBestMaskPattern = function() {\n\n      var minLostPoint = 0;\n      var pattern = 0;\n\n      for (var i = 0; i < 8; i += 1) {\n\n        makeImpl(true, i);\n\n        var lostPoint = QRUtil.getLostPoint(_this);\n\n        if (i == 0 || minLostPoint > lostPoint) {\n          minLostPoint = lostPoint;\n          pattern = i;\n        }\n      }\n\n      return pattern;\n    };\n\n    var setupTimingPattern = function() {\n\n      for (var r = 8; r < _moduleCount - 8; r += 1) {\n        if (_modules[r][6] != null) {\n          continue;\n        }\n        _modules[r][6] = (r % 2 == 0);\n      }\n\n      for (var c = 8; c < _moduleCount - 8; c += 1) {\n        if (_modules[6][c] != null) {\n          continue;\n        }\n        _modules[6][c] = (c % 2 == 0);\n      }\n    };\n\n    var setupPositionAdjustPattern = function() {\n\n      var pos = QRUtil.getPatternPosition(_typeNumber);\n\n      for (var i = 0; i < pos.length; i += 1) {\n\n        for (var j = 0; j < pos.length; j += 1) {\n\n          var row = pos[i];\n          var col = pos[j];\n\n          if (_modules[row][col] != null) {\n            continue;\n          }\n\n          for (var r = -2; r <= 2; r += 1) {\n\n            for (var c = -2; c <= 2; c += 1) {\n\n              if (r == -2 || r == 2 || c == -2 || c == 2\n                  || (r == 0 && c == 0) ) {\n                _modules[row + r][col + c] = true;\n              } else {\n                _modules[row + r][col + c] = false;\n              }\n            }\n          }\n        }\n      }\n    };\n\n    var setupTypeNumber = function(test) {\n\n      var bits = QRUtil.getBCHTypeNumber(_typeNumber);\n\n      for (var i = 0; i < 18; i += 1) {\n        var mod = (!test && ( (bits >> i) & 1) == 1);\n        _modules[Math.floor(i / 3)][i % 3 + _moduleCount - 8 - 3] = mod;\n      }\n\n      for (var i = 0; i < 18; i += 1) {\n        var mod = (!test && ( (bits >> i) & 1) == 1);\n        _modules[i % 3 + _moduleCount - 8 - 3][Math.floor(i / 3)] = mod;\n      }\n    };\n\n    var setupTypeInfo = function(test, maskPattern) {\n\n      var data = (_errorCorrectionLevel << 3) | maskPattern;\n      var bits = QRUtil.getBCHTypeInfo(data);\n\n      // vertical\n      for (var i = 0; i < 15; i += 1) {\n\n        var mod = (!test && ( (bits >> i) & 1) == 1);\n\n        if (i < 6) {\n          _modules[i][8] = mod;\n        } else if (i < 8) {\n          _modules[i + 1][8] = mod;\n        } else {\n          _modules[_moduleCount - 15 + i][8] = mod;\n        }\n      }\n\n      // horizontal\n      for (var i = 0; i < 15; i += 1) {\n\n        var mod = (!test && ( (bits >> i) & 1) == 1);\n\n        if (i < 8) {\n          _modules[8][_moduleCount - i - 1] = mod;\n        } else if (i < 9) {\n          _modules[8][15 - i - 1 + 1] = mod;\n        } else {\n          _modules[8][15 - i - 1] = mod;\n        }\n      }\n\n      // fixed module\n      _modules[_moduleCount - 8][8] = (!test);\n    };\n\n    var mapData = function(data, maskPattern) {\n\n      var inc = -1;\n      var row = _moduleCount - 1;\n      var bitIndex = 7;\n      var byteIndex = 0;\n      var maskFunc = QRUtil.getMaskFunction(maskPattern);\n\n      for (var col = _moduleCount - 1; col > 0; col -= 2) {\n\n        if (col == 6) col -= 1;\n\n        while (true) {\n\n          for (var c = 0; c < 2; c += 1) {\n\n            if (_modules[row][col - c] == null) {\n\n              var dark = false;\n\n              if (byteIndex < data.length) {\n                dark = ( ( (data[byteIndex] >>> bitIndex) & 1) == 1);\n              }\n\n              var mask = maskFunc(row, col - c);\n\n              if (mask) {\n                dark = !dark;\n              }\n\n              _modules[row][col - c] = dark;\n              bitIndex -= 1;\n\n              if (bitIndex == -1) {\n                byteIndex += 1;\n                bitIndex = 7;\n              }\n            }\n          }\n\n          row += inc;\n\n          if (row < 0 || _moduleCount <= row) {\n            row -= inc;\n            inc = -inc;\n            break;\n          }\n        }\n      }\n    };\n\n    var createBytes = function(buffer, rsBlocks) {\n\n      var offset = 0;\n\n      var maxDcCount = 0;\n      var maxEcCount = 0;\n\n      var dcdata = new Array(rsBlocks.length);\n      var ecdata = new Array(rsBlocks.length);\n\n      for (var r = 0; r < rsBlocks.length; r += 1) {\n\n        var dcCount = rsBlocks[r].dataCount;\n        var ecCount = rsBlocks[r].totalCount - dcCount;\n\n        maxDcCount = Math.max(maxDcCount, dcCount);\n        maxEcCount = Math.max(maxEcCount, ecCount);\n\n        dcdata[r] = new Array(dcCount);\n\n        for (var i = 0; i < dcdata[r].length; i += 1) {\n          dcdata[r][i] = 0xff & buffer.getBuffer()[i + offset];\n        }\n        offset += dcCount;\n\n        var rsPoly = QRUtil.getErrorCorrectPolynomial(ecCount);\n        var rawPoly = qrPolynomial(dcdata[r], rsPoly.getLength() - 1);\n\n        var modPoly = rawPoly.mod(rsPoly);\n        ecdata[r] = new Array(rsPoly.getLength() - 1);\n        for (var i = 0; i < ecdata[r].length; i += 1) {\n          var modIndex = i + modPoly.getLength() - ecdata[r].length;\n          ecdata[r][i] = (modIndex >= 0)? modPoly.getAt(modIndex) : 0;\n        }\n      }\n\n      var totalCodeCount = 0;\n      for (var i = 0; i < rsBlocks.length; i += 1) {\n        totalCodeCount += rsBlocks[i].totalCount;\n      }\n\n      var data = new Array(totalCodeCount);\n      var index = 0;\n\n      for (var i = 0; i < maxDcCount; i += 1) {\n        for (var r = 0; r < rsBlocks.length; r += 1) {\n          if (i < dcdata[r].length) {\n            data[index] = dcdata[r][i];\n            index += 1;\n          }\n        }\n      }\n\n      for (var i = 0; i < maxEcCount; i += 1) {\n        for (var r = 0; r < rsBlocks.length; r += 1) {\n          if (i < ecdata[r].length) {\n            data[index] = ecdata[r][i];\n            index += 1;\n          }\n        }\n      }\n\n      return data;\n    };\n\n    var createData = function(typeNumber, errorCorrectionLevel, dataList) {\n\n      var rsBlocks = QRRSBlock.getRSBlocks(typeNumber, errorCorrectionLevel);\n\n      var buffer = qrBitBuffer();\n\n      for (var i = 0; i < dataList.length; i += 1) {\n        var data = dataList[i];\n        buffer.put(data.getMode(), 4);\n        buffer.put(data.getLength(), QRUtil.getLengthInBits(data.getMode(), typeNumber) );\n        data.write(buffer);\n      }\n\n      // calc num max data.\n      var totalDataCount = 0;\n      for (var i = 0; i < rsBlocks.length; i += 1) {\n        totalDataCount += rsBlocks[i].dataCount;\n      }\n\n      if (buffer.getLengthInBits() > totalDataCount * 8) {\n        throw 'code length overflow. ('\n          + buffer.getLengthInBits()\n          + '>'\n          + totalDataCount * 8\n          + ')';\n      }\n\n      // end code\n      if (buffer.getLengthInBits() + 4 <= totalDataCount * 8) {\n        buffer.put(0, 4);\n      }\n\n      // padding\n      while (buffer.getLengthInBits() % 8 != 0) {\n        buffer.putBit(false);\n      }\n\n      // padding\n      while (true) {\n\n        if (buffer.getLengthInBits() >= totalDataCount * 8) {\n          break;\n        }\n        buffer.put(PAD0, 8);\n\n        if (buffer.getLengthInBits() >= totalDataCount * 8) {\n          break;\n        }\n        buffer.put(PAD1, 8);\n      }\n\n      return createBytes(buffer, rsBlocks);\n    };\n\n    _this.addData = function(data, mode) {\n\n      mode = mode || 'Byte';\n\n      var newData = null;\n\n      switch(mode) {\n      case 'Numeric' :\n        newData = qrNumber(data);\n        break;\n      case 'Alphanumeric' :\n        newData = qrAlphaNum(data);\n        break;\n      case 'Byte' :\n        newData = qr8BitByte(data);\n        break;\n      case 'Kanji' :\n        newData = qrKanji(data);\n        break;\n      default :\n        throw 'mode:' + mode;\n      }\n\n      _dataList.push(newData);\n      _dataCache = null;\n    };\n\n    _this.isDark = function(row, col) {\n      if (row < 0 || _moduleCount <= row || col < 0 || _moduleCount <= col) {\n        throw row + ',' + col;\n      }\n      return _modules[row][col];\n    };\n\n    _this.getModuleCount = function() {\n      return _moduleCount;\n    };\n\n    _this.make = function() {\n      if (_typeNumber < 1) {\n        var typeNumber = 1;\n\n        for (; typeNumber < 40; typeNumber++) {\n          var rsBlocks = QRRSBlock.getRSBlocks(typeNumber, _errorCorrectionLevel);\n          var buffer = qrBitBuffer();\n\n          for (var i = 0; i < _dataList.length; i++) {\n            var data = _dataList[i];\n            buffer.put(data.getMode(), 4);\n            buffer.put(data.getLength(), QRUtil.getLengthInBits(data.getMode(), typeNumber) );\n            data.write(buffer);\n          }\n\n          var totalDataCount = 0;\n          for (var i = 0; i < rsBlocks.length; i++) {\n            totalDataCount += rsBlocks[i].dataCount;\n          }\n\n          if (buffer.getLengthInBits() <= totalDataCount * 8) {\n            break;\n          }\n        }\n\n        _typeNumber = typeNumber;\n      }\n\n      makeImpl(false, getBestMaskPattern() );\n    };\n\n    _this.createTableTag = function(cellSize, margin) {\n\n      cellSize = cellSize || 2;\n      margin = (typeof margin == 'undefined')? cellSize * 4 : margin;\n\n      var qrHtml = '';\n\n      qrHtml += '<table style=\"';\n      qrHtml += ' border-width: 0px; border-style: none;';\n      qrHtml += ' border-collapse: collapse;';\n      qrHtml += ' padding: 0px; margin: ' + margin + 'px;';\n      qrHtml += '\">';\n      qrHtml += '<tbody>';\n\n      for (var r = 0; r < _this.getModuleCount(); r += 1) {\n\n        qrHtml += '<tr>';\n\n        for (var c = 0; c < _this.getModuleCount(); c += 1) {\n          qrHtml += '<td style=\"';\n          qrHtml += ' border-width: 0px; border-style: none;';\n          qrHtml += ' border-collapse: collapse;';\n          qrHtml += ' padding: 0px; margin: 0px;';\n          qrHtml += ' width: ' + cellSize + 'px;';\n          qrHtml += ' height: ' + cellSize + 'px;';\n          qrHtml += ' background-color: ';\n          qrHtml += _this.isDark(r, c)? '#000000' : '#ffffff';\n          qrHtml += ';';\n          qrHtml += '\"/>';\n        }\n\n        qrHtml += '</tr>';\n      }\n\n      qrHtml += '</tbody>';\n      qrHtml += '</table>';\n\n      return qrHtml;\n    };\n\n    _this.createSvgTag = function(cellSize, margin, alt, title) {\n\n      var opts = {};\n      if (typeof arguments[0] == 'object') {\n        // Called by options.\n        opts = arguments[0];\n        // overwrite cellSize and margin.\n        cellSize = opts.cellSize;\n        margin = opts.margin;\n        alt = opts.alt;\n        title = opts.title;\n      }\n\n      cellSize = cellSize || 2;\n      margin = (typeof margin == 'undefined')? cellSize * 4 : margin;\n\n      // Compose alt property surrogate\n      alt = (typeof alt === 'string') ? {text: alt} : alt || {};\n      alt.text = alt.text || null;\n      alt.id = (alt.text) ? alt.id || 'qrcode-description' : null;\n\n      // Compose title property surrogate\n      title = (typeof title === 'string') ? {text: title} : title || {};\n      title.text = title.text || null;\n      title.id = (title.text) ? title.id || 'qrcode-title' : null;\n\n      var size = _this.getModuleCount() * cellSize + margin * 2;\n      var c, mc, r, mr, qrSvg='', rect;\n\n      rect = 'l' + cellSize + ',0 0,' + cellSize +\n        ' -' + cellSize + ',0 0,-' + cellSize + 'z ';\n\n      qrSvg += '<svg version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\"';\n      qrSvg += !opts.scalable ? ' width=\"' + size + 'px\" height=\"' + size + 'px\"' : '';\n      qrSvg += ' viewBox=\"0 0 ' + size + ' ' + size + '\" ';\n      qrSvg += ' preserveAspectRatio=\"xMinYMin meet\"';\n      qrSvg += (title.text || alt.text) ? ' role=\"img\" aria-labelledby=\"' +\n          escapeXml([title.id, alt.id].join(' ').trim() ) + '\"' : '';\n      qrSvg += '>';\n      qrSvg += (title.text) ? '<title id=\"' + escapeXml(title.id) + '\">' +\n          escapeXml(title.text) + '</title>' : '';\n      qrSvg += (alt.text) ? '<description id=\"' + escapeXml(alt.id) + '\">' +\n          escapeXml(alt.text) + '</description>' : '';\n      qrSvg += '<rect width=\"100%\" height=\"100%\" fill=\"white\" cx=\"0\" cy=\"0\"/>';\n      qrSvg += '<path d=\"';\n\n      for (r = 0; r < _this.getModuleCount(); r += 1) {\n        mr = r * cellSize + margin;\n        for (c = 0; c < _this.getModuleCount(); c += 1) {\n          if (_this.isDark(r, c) ) {\n            mc = c*cellSize+margin;\n            qrSvg += 'M' + mc + ',' + mr + rect;\n          }\n        }\n      }\n\n      qrSvg += '\" stroke=\"transparent\" fill=\"black\"/>';\n      qrSvg += '</svg>';\n\n      return qrSvg;\n    };\n\n    _this.createDataURL = function(cellSize, margin) {\n\n      cellSize = cellSize || 2;\n      margin = (typeof margin == 'undefined')? cellSize * 4 : margin;\n\n      var size = _this.getModuleCount() * cellSize + margin * 2;\n      var min = margin;\n      var max = size - margin;\n\n      return createDataURL(size, size, function(x, y) {\n        if (min <= x && x < max && min <= y && y < max) {\n          var c = Math.floor( (x - min) / cellSize);\n          var r = Math.floor( (y - min) / cellSize);\n          return _this.isDark(r, c)? 0 : 1;\n        } else {\n          return 1;\n        }\n      } );\n    };\n\n    _this.createImgTag = function(cellSize, margin, alt) {\n\n      cellSize = cellSize || 2;\n      margin = (typeof margin == 'undefined')? cellSize * 4 : margin;\n\n      var size = _this.getModuleCount() * cellSize + margin * 2;\n\n      var img = '';\n      img += '<img';\n      img += '\\u0020src=\"';\n      img += _this.createDataURL(cellSize, margin);\n      img += '\"';\n      img += '\\u0020width=\"';\n      img += size;\n      img += '\"';\n      img += '\\u0020height=\"';\n      img += size;\n      img += '\"';\n      if (alt) {\n        img += '\\u0020alt=\"';\n        img += escapeXml(alt);\n        img += '\"';\n      }\n      img += '/>';\n\n      return img;\n    };\n\n    var escapeXml = function(s) {\n      var escaped = '';\n      for (var i = 0; i < s.length; i += 1) {\n        var c = s.charAt(i);\n        switch(c) {\n        case '<': escaped += '&lt;'; break;\n        case '>': escaped += '&gt;'; break;\n        case '&': escaped += '&amp;'; break;\n        case '\"': escaped += '&quot;'; break;\n        default : escaped += c; break;\n        }\n      }\n      return escaped;\n    };\n\n    var _createHalfASCII = function(margin) {\n      var cellSize = 1;\n      margin = (typeof margin == 'undefined')? cellSize * 2 : margin;\n\n      var size = _this.getModuleCount() * cellSize + margin * 2;\n      var min = margin;\n      var max = size - margin;\n\n      var y, x, r1, r2, p;\n\n      var blocks = {\n        '\u2588\u2588': '\u2588',\n        '\u2588 ': '\u2580',\n        ' \u2588': '\u2584',\n        '  ': ' '\n      };\n\n      var blocksLastLineNoMargin = {\n        '\u2588\u2588': '\u2580',\n        '\u2588 ': '\u2580',\n        ' \u2588': ' ',\n        '  ': ' '\n      };\n\n      var ascii = '';\n      for (y = 0; y < size; y += 2) {\n        r1 = Math.floor((y - min) / cellSize);\n        r2 = Math.floor((y + 1 - min) / cellSize);\n        for (x = 0; x < size; x += 1) {\n          p = '\u2588';\n\n          if (min <= x && x < max && min <= y && y < max && _this.isDark(r1, Math.floor((x - min) / cellSize))) {\n            p = ' ';\n          }\n\n          if (min <= x && x < max && min <= y+1 && y+1 < max && _this.isDark(r2, Math.floor((x - min) / cellSize))) {\n            p += ' ';\n          }\n          else {\n            p += '\u2588';\n          }\n\n          // Output 2 characters per pixel, to create full square. 1 character per pixels gives only half width of square.\n          ascii += (margin < 1 && y+1 >= max) ? blocksLastLineNoMargin[p] : blocks[p];\n        }\n\n        ascii += '\\n';\n      }\n\n      if (size % 2 && margin > 0) {\n        return ascii.substring(0, ascii.length - size - 1) + Array(size+1).join('\u2580');\n      }\n\n      return ascii.substring(0, ascii.length-1);\n    };\n\n    _this.createASCII = function(cellSize, margin) {\n      cellSize = cellSize || 1;\n\n      if (cellSize < 2) {\n        return _createHalfASCII(margin);\n      }\n\n      cellSize -= 1;\n      margin = (typeof margin == 'undefined')? cellSize * 2 : margin;\n\n      var size = _this.getModuleCount() * cellSize + margin * 2;\n      var min = margin;\n      var max = size - margin;\n\n      var y, x, r, p;\n\n      var white = Array(cellSize+1).join('\u2588\u2588');\n      var black = Array(cellSize+1).join('  ');\n\n      var ascii = '';\n      var line = '';\n      for (y = 0; y < size; y += 1) {\n        r = Math.floor( (y - min) / cellSize);\n        line = '';\n        for (x = 0; x < size; x += 1) {\n          p = 1;\n\n          if (min <= x && x < max && min <= y && y < max && _this.isDark(r, Math.floor((x - min) / cellSize))) {\n            p = 0;\n          }\n\n          // Output 2 characters per pixel, to create full square. 1 character per pixels gives only half width of square.\n          line += p ? white : black;\n        }\n\n        for (r = 0; r < cellSize; r += 1) {\n          ascii += line + '\\n';\n        }\n      }\n\n      return ascii.substring(0, ascii.length-1);\n    };\n\n    _this.renderTo2dContext = function(context, cellSize) {\n      cellSize = cellSize || 2;\n      var length = _this.getModuleCount();\n      for (var row = 0; row < length; row++) {\n        for (var col = 0; col < length; col++) {\n          context.fillStyle = _this.isDark(row, col) ? 'black' : 'white';\n          context.fillRect(row * cellSize, col * cellSize, cellSize, cellSize);\n        }\n      }\n    }\n\n    return _this;\n  };\n\n  //---------------------------------------------------------------------\n  // qrcode.stringToBytes\n  //---------------------------------------------------------------------\n\n  qrcode.stringToBytesFuncs = {\n    'default' : function(s) {\n      var bytes = [];\n      for (var i = 0; i < s.length; i += 1) {\n        var c = s.charCodeAt(i);\n        bytes.push(c & 0xff);\n      }\n      return bytes;\n    }\n  };\n\n  qrcode.stringToBytes = qrcode.stringToBytesFuncs['default'];\n\n  //---------------------------------------------------------------------\n  // qrcode.createStringToBytes\n  //---------------------------------------------------------------------\n\n  /**\n   * @param unicodeData base64 string of byte array.\n   * [16bit Unicode],[16bit Bytes], ...\n   * @param numChars\n   */\n  qrcode.createStringToBytes = function(unicodeData, numChars) {\n\n    // create conversion map.\n\n    var unicodeMap = function() {\n\n      var bin = base64DecodeInputStream(unicodeData);\n      var read = function() {\n        var b = bin.read();\n        if (b == -1) throw 'eof';\n        return b;\n      };\n\n      var count = 0;\n      var unicodeMap = {};\n      while (true) {\n        var b0 = bin.read();\n        if (b0 == -1) break;\n        var b1 = read();\n        var b2 = read();\n        var b3 = read();\n        var k = String.fromCharCode( (b0 << 8) | b1);\n        var v = (b2 << 8) | b3;\n        unicodeMap[k] = v;\n        count += 1;\n      }\n      if (count != numChars) {\n        throw count + ' != ' + numChars;\n      }\n\n      return unicodeMap;\n    }();\n\n    var unknownChar = '?'.charCodeAt(0);\n\n    return function(s) {\n      var bytes = [];\n      for (var i = 0; i < s.length; i += 1) {\n        var c = s.charCodeAt(i);\n        if (c < 128) {\n          bytes.push(c);\n        } else {\n          var b = unicodeMap[s.charAt(i)];\n          if (typeof b == 'number') {\n            if ( (b & 0xff) == b) {\n              // 1byte\n              bytes.push(b);\n            } else {\n              // 2bytes\n              bytes.push(b >>> 8);\n              bytes.push(b & 0xff);\n            }\n          } else {\n            bytes.push(unknownChar);\n          }\n        }\n      }\n      return bytes;\n    };\n  };\n\n  //---------------------------------------------------------------------\n  // QRMode\n  //---------------------------------------------------------------------\n\n  var QRMode = {\n    MODE_NUMBER :    1 << 0,\n    MODE_ALPHA_NUM : 1 << 1,\n    MODE_8BIT_BYTE : 1 << 2,\n    MODE_KANJI :     1 << 3\n  };\n\n  //---------------------------------------------------------------------\n  // QRErrorCorrectionLevel\n  //---------------------------------------------------------------------\n\n  var QRErrorCorrectionLevel = {\n    L : 1,\n    M : 0,\n    Q : 3,\n    H : 2\n  };\n\n  //---------------------------------------------------------------------\n  // QRMaskPattern\n  //---------------------------------------------------------------------\n\n  var QRMaskPattern = {\n    PATTERN000 : 0,\n    PATTERN001 : 1,\n    PATTERN010 : 2,\n    PATTERN011 : 3,\n    PATTERN100 : 4,\n    PATTERN101 : 5,\n    PATTERN110 : 6,\n    PATTERN111 : 7\n  };\n\n  //---------------------------------------------------------------------\n  // QRUtil\n  //---------------------------------------------------------------------\n\n  var QRUtil = function() {\n\n    var PATTERN_POSITION_TABLE = [\n      [],\n      [6, 18],\n      [6, 22],\n      [6, 26],\n      [6, 30],\n      [6, 34],\n      [6, 22, 38],\n      [6, 24, 42],\n      [6, 26, 46],\n      [6, 28, 50],\n      [6, 30, 54],\n      [6, 32, 58],\n      [6, 34, 62],\n      [6, 26, 46, 66],\n      [6, 26, 48, 70],\n      [6, 26, 50, 74],\n      [6, 30, 54, 78],\n      [6, 30, 56, 82],\n      [6, 30, 58, 86],\n      [6, 34, 62, 90],\n      [6, 28, 50, 72, 94],\n      [6, 26, 50, 74, 98],\n      [6, 30, 54, 78, 102],\n      [6, 28, 54, 80, 106],\n      [6, 32, 58, 84, 110],\n      [6, 30, 58, 86, 114],\n      [6, 34, 62, 90, 118],\n      [6, 26, 50, 74, 98, 122],\n      [6, 30, 54, 78, 102, 126],\n      [6, 26, 52, 78, 104, 130],\n      [6, 30, 56, 82, 108, 134],\n      [6, 34, 60, 86, 112, 138],\n      [6, 30, 58, 86, 114, 142],\n      [6, 34, 62, 90, 118, 146],\n      [6, 30, 54, 78, 102, 126, 150],\n      [6, 24, 50, 76, 102, 128, 154],\n      [6, 28, 54, 80, 106, 132, 158],\n      [6, 32, 58, 84, 110, 136, 162],\n      [6, 26, 54, 82, 110, 138, 166],\n      [6, 30, 58, 86, 114, 142, 170]\n    ];\n    var G15 = (1 << 10) | (1 << 8) | (1 << 5) | (1 << 4) | (1 << 2) | (1 << 1) | (1 << 0);\n    var G18 = (1 << 12) | (1 << 11) | (1 << 10) | (1 << 9) | (1 << 8) | (1 << 5) | (1 << 2) | (1 << 0);\n    var G15_MASK = (1 << 14) | (1 << 12) | (1 << 10) | (1 << 4) | (1 << 1);\n\n    var _this = {};\n\n    var getBCHDigit = function(data) {\n      var digit = 0;\n      while (data != 0) {\n        digit += 1;\n        data >>>= 1;\n      }\n      return digit;\n    };\n\n    _this.getBCHTypeInfo = function(data) {\n      var d = data << 10;\n      while (getBCHDigit(d) - getBCHDigit(G15) >= 0) {\n        d ^= (G15 << (getBCHDigit(d) - getBCHDigit(G15) ) );\n      }\n      return ( (data << 10) | d) ^ G15_MASK;\n    };\n\n    _this.getBCHTypeNumber = function(data) {\n      var d = data << 12;\n      while (getBCHDigit(d) - getBCHDigit(G18) >= 0) {\n        d ^= (G18 << (getBCHDigit(d) - getBCHDigit(G18) ) );\n      }\n      return (data << 12) | d;\n    };\n\n    _this.getPatternPosition = function(typeNumber) {\n      return PATTERN_POSITION_TABLE[typeNumber - 1];\n    };\n\n    _this.getMaskFunction = function(maskPattern) {\n\n      switch (maskPattern) {\n\n      case QRMaskPattern.PATTERN000 :\n        return function(i, j) { return (i + j) % 2 == 0; };\n      case QRMaskPattern.PATTERN001 :\n        return function(i, j) { return i % 2 == 0; };\n      case QRMaskPattern.PATTERN010 :\n        return function(i, j) { return j % 3 == 0; };\n      case QRMaskPattern.PATTERN011 :\n        return function(i, j) { return (i + j) % 3 == 0; };\n      case QRMaskPattern.PATTERN100 :\n        return function(i, j) { return (Math.floor(i / 2) + Math.floor(j / 3) ) % 2 == 0; };\n      case QRMaskPattern.PATTERN101 :\n        return function(i, j) { return (i * j) % 2 + (i * j) % 3 == 0; };\n      case QRMaskPattern.PATTERN110 :\n        return function(i, j) { return ( (i * j) % 2 + (i * j) % 3) % 2 == 0; };\n      case QRMaskPattern.PATTERN111 :\n        return function(i, j) { return ( (i * j) % 3 + (i + j) % 2) % 2 == 0; };\n\n      default :\n        throw 'bad maskPattern:' + maskPattern;\n      }\n    };\n\n    _this.getErrorCorrectPolynomial = function(errorCorrectLength) {\n      var a = qrPolynomial([1], 0);\n      for (var i = 0; i < errorCorrectLength; i += 1) {\n        a = a.multiply(qrPolynomial([1, QRMath.gexp(i)], 0) );\n      }\n      return a;\n    };\n\n    _this.getLengthInBits = function(mode, type) {\n\n      if (1 <= type && type < 10) {\n\n        // 1 - 9\n\n        switch(mode) {\n        case QRMode.MODE_NUMBER    : return 10;\n        case QRMode.MODE_ALPHA_NUM : return 9;\n        case QRMode.MODE_8BIT_BYTE : return 8;\n        case QRMode.MODE_KANJI     : return 8;\n        default :\n          throw 'mode:' + mode;\n        }\n\n      } else if (type < 27) {\n\n        // 10 - 26\n\n        switch(mode) {\n        case QRMode.MODE_NUMBER    : return 12;\n        case QRMode.MODE_ALPHA_NUM : return 11;\n        case QRMode.MODE_8BIT_BYTE : return 16;\n        case QRMode.MODE_KANJI     : return 10;\n        default :\n          throw 'mode:' + mode;\n        }\n\n      } else if (type < 41) {\n\n        // 27 - 40\n\n        switch(mode) {\n        case QRMode.MODE_NUMBER    : return 14;\n        case QRMode.MODE_ALPHA_NUM : return 13;\n        case QRMode.MODE_8BIT_BYTE : return 16;\n        case QRMode.MODE_KANJI     : return 12;\n        default :\n          throw 'mode:' + mode;\n        }\n\n      } else {\n        throw 'type:' + type;\n      }\n    };\n\n    _this.getLostPoint = function(qrcode) {\n\n      var moduleCount = qrcode.getModuleCount();\n\n      var lostPoint = 0;\n\n      // LEVEL1\n\n      for (var row = 0; row < moduleCount; row += 1) {\n        for (var col = 0; col < moduleCount; col += 1) {\n\n          var sameCount = 0;\n          var dark = qrcode.isDark(row, col);\n\n          for (var r = -1; r <= 1; r += 1) {\n\n            if (row + r < 0 || moduleCount <= row + r) {\n              continue;\n            }\n\n            for (var c = -1; c <= 1; c += 1) {\n\n              if (col + c < 0 || moduleCount <= col + c) {\n                continue;\n              }\n\n              if (r == 0 && c == 0) {\n                continue;\n              }\n\n              if (dark == qrcode.isDark(row + r, col + c) ) {\n                sameCount += 1;\n              }\n            }\n          }\n\n          if (sameCount > 5) {\n            lostPoint += (3 + sameCount - 5);\n          }\n        }\n      };\n\n      // LEVEL2\n\n      for (var row = 0; row < moduleCount - 1; row += 1) {\n        for (var col = 0; col < moduleCount - 1; col += 1) {\n          var count = 0;\n          if (qrcode.isDark(row, col) ) count += 1;\n          if (qrcode.isDark(row + 1, col) ) count += 1;\n          if (qrcode.isDark(row, col + 1) ) count += 1;\n          if (qrcode.isDark(row + 1, col + 1) ) count += 1;\n          if (count == 0 || count == 4) {\n            lostPoint += 3;\n          }\n        }\n      }\n\n      // LEVEL3\n\n      for (var row = 0; row < moduleCount; row += 1) {\n        for (var col = 0; col < moduleCount - 6; col += 1) {\n          if (qrcode.isDark(row, col)\n              && !qrcode.isDark(row, col + 1)\n              &&  qrcode.isDark(row, col + 2)\n              &&  qrcode.isDark(row, col + 3)\n              &&  qrcode.isDark(row, col + 4)\n              && !qrcode.isDark(row, col + 5)\n              &&  qrcode.isDark(row, col + 6) ) {\n            lostPoint += 40;\n          }\n        }\n      }\n\n      for (var col = 0; col < moduleCount; col += 1) {\n        for (var row = 0; row < moduleCount - 6; row += 1) {\n          if (qrcode.isDark(row, col)\n              && !qrcode.isDark(row + 1, col)\n              &&  qrcode.isDark(row + 2, col)\n              &&  qrcode.isDark(row + 3, col)\n              &&  qrcode.isDark(row + 4, col)\n              && !qrcode.isDark(row + 5, col)\n              &&  qrcode.isDark(row + 6, col) ) {\n            lostPoint += 40;\n          }\n        }\n      }\n\n      // LEVEL4\n\n      var darkCount = 0;\n\n      for (var col = 0; col < moduleCount; col += 1) {\n        for (var row = 0; row < moduleCount; row += 1) {\n          if (qrcode.isDark(row, col) ) {\n            darkCount += 1;\n          }\n        }\n      }\n\n      var ratio = Math.abs(100 * darkCount / moduleCount / moduleCount - 50) / 5;\n      lostPoint += ratio * 10;\n\n      return lostPoint;\n    };\n\n    return _this;\n  }();\n\n  //---------------------------------------------------------------------\n  // QRMath\n  //---------------------------------------------------------------------\n\n  var QRMath = function() {\n\n    var EXP_TABLE = new Array(256);\n    var LOG_TABLE = new Array(256);\n\n    // initialize tables\n    for (var i = 0; i < 8; i += 1) {\n      EXP_TABLE[i] = 1 << i;\n    }\n    for (var i = 8; i < 256; i += 1) {\n      EXP_TABLE[i] = EXP_TABLE[i - 4]\n        ^ EXP_TABLE[i - 5]\n        ^ EXP_TABLE[i - 6]\n        ^ EXP_TABLE[i - 8];\n    }\n    for (var i = 0; i < 255; i += 1) {\n      LOG_TABLE[EXP_TABLE[i] ] = i;\n    }\n\n    var _this = {};\n\n    _this.glog = function(n) {\n\n      if (n < 1) {\n        throw 'glog(' + n + ')';\n      }\n\n      return LOG_TABLE[n];\n    };\n\n    _this.gexp = function(n) {\n\n      while (n < 0) {\n        n += 255;\n      }\n\n      while (n >= 256) {\n        n -= 255;\n      }\n\n      return EXP_TABLE[n];\n    };\n\n    return _this;\n  }();\n\n  //---------------------------------------------------------------------\n  // qrPolynomial\n  //---------------------------------------------------------------------\n\n  function qrPolynomial(num, shift) {\n\n    if (typeof num.length == 'undefined') {\n      throw num.length + '/' + shift;\n    }\n\n    var _num = function() {\n      var offset = 0;\n      while (offset < num.length && num[offset] == 0) {\n        offset += 1;\n      }\n      var _num = new Array(num.length - offset + shift);\n      for (var i = 0; i < num.length - offset; i += 1) {\n        _num[i] = num[i + offset];\n      }\n      return _num;\n    }();\n\n    var _this = {};\n\n    _this.getAt = function(index) {\n      return _num[index];\n    };\n\n    _this.getLength = function() {\n      return _num.length;\n    };\n\n    _this.multiply = function(e) {\n\n      var num = new Array(_this.getLength() + e.getLength() - 1);\n\n      for (var i = 0; i < _this.getLength(); i += 1) {\n        for (var j = 0; j < e.getLength(); j += 1) {\n          num[i + j] ^= QRMath.gexp(QRMath.glog(_this.getAt(i) ) + QRMath.glog(e.getAt(j) ) );\n        }\n      }\n\n      return qrPolynomial(num, 0);\n    };\n\n    _this.mod = function(e) {\n\n      if (_this.getLength() - e.getLength() < 0) {\n        return _this;\n      }\n\n      var ratio = QRMath.glog(_this.getAt(0) ) - QRMath.glog(e.getAt(0) );\n\n      var num = new Array(_this.getLength() );\n      for (var i = 0; i < _this.getLength(); i += 1) {\n        num[i] = _this.getAt(i);\n      }\n\n      for (var i = 0; i < e.getLength(); i += 1) {\n        num[i] ^= QRMath.gexp(QRMath.glog(e.getAt(i) ) + ratio);\n      }\n\n      // recursive call\n      return qrPolynomial(num, 0).mod(e);\n    };\n\n    return _this;\n  };\n\n  //---------------------------------------------------------------------\n  // QRRSBlock\n  //---------------------------------------------------------------------\n\n  var QRRSBlock = function() {\n\n    var RS_BLOCK_TABLE = [\n\n      // L\n      // M\n      // Q\n      // H\n\n      // 1\n      [1, 26, 19],\n      [1, 26, 16],\n      [1, 26, 13],\n      [1, 26, 9],\n\n      // 2\n      [1, 44, 34],\n      [1, 44, 28],\n      [1, 44, 22],\n      [1, 44, 16],\n\n      // 3\n      [1, 70, 55],\n      [1, 70, 44],\n      [2, 35, 17],\n      [2, 35, 13],\n\n      // 4\n      [1, 100, 80],\n      [2, 50, 32],\n      [2, 50, 24],\n      [4, 25, 9],\n\n      // 5\n      [1, 134, 108],\n      [2, 67, 43],\n      [2, 33, 15, 2, 34, 16],\n      [2, 33, 11, 2, 34, 12],\n\n      // 6\n      [2, 86, 68],\n      [4, 43, 27],\n      [4, 43, 19],\n      [4, 43, 15],\n\n      // 7\n      [2, 98, 78],\n      [4, 49, 31],\n      [2, 32, 14, 4, 33, 15],\n      [4, 39, 13, 1, 40, 14],\n\n      // 8\n      [2, 121, 97],\n      [2, 60, 38, 2, 61, 39],\n      [4, 40, 18, 2, 41, 19],\n      [4, 40, 14, 2, 41, 15],\n\n      // 9\n      [2, 146, 116],\n      [3, 58, 36, 2, 59, 37],\n      [4, 36, 16, 4, 37, 17],\n      [4, 36, 12, 4, 37, 13],\n\n      // 10\n      [2, 86, 68, 2, 87, 69],\n      [4, 69, 43, 1, 70, 44],\n      [6, 43, 19, 2, 44, 20],\n      [6, 43, 15, 2, 44, 16],\n\n      // 11\n      [4, 101, 81],\n      [1, 80, 50, 4, 81, 51],\n      [4, 50, 22, 4, 51, 23],\n      [3, 36, 12, 8, 37, 13],\n\n      // 12\n      [2, 116, 92, 2, 117, 93],\n      [6, 58, 36, 2, 59, 37],\n      [4, 46, 20, 6, 47, 21],\n      [7, 42, 14, 4, 43, 15],\n\n      // 13\n      [4, 133, 107],\n      [8, 59, 37, 1, 60, 38],\n      [8, 44, 20, 4, 45, 21],\n      [12, 33, 11, 4, 34, 12],\n\n      // 14\n      [3, 145, 115, 1, 146, 116],\n      [4, 64, 40, 5, 65, 41],\n      [11, 36, 16, 5, 37, 17],\n      [11, 36, 12, 5, 37, 13],\n\n      // 15\n      [5, 109, 87, 1, 110, 88],\n      [5, 65, 41, 5, 66, 42],\n      [5, 54, 24, 7, 55, 25],\n      [11, 36, 12, 7, 37, 13],\n\n      // 16\n      [5, 122, 98, 1, 123, 99],\n      [7, 73, 45, 3, 74, 46],\n      [15, 43, 19, 2, 44, 20],\n      [3, 45, 15, 13, 46, 16],\n\n      // 17\n      [1, 135, 107, 5, 136, 108],\n      [10, 74, 46, 1, 75, 47],\n      [1, 50, 22, 15, 51, 23],\n      [2, 42, 14, 17, 43, 15],\n\n      // 18\n      [5, 150, 120, 1, 151, 121],\n      [9, 69, 43, 4, 70, 44],\n      [17, 50, 22, 1, 51, 23],\n      [2, 42, 14, 19, 43, 15],\n\n      // 19\n      [3, 141, 113, 4, 142, 114],\n      [3, 70, 44, 11, 71, 45],\n      [17, 47, 21, 4, 48, 22],\n      [9, 39, 13, 16, 40, 14],\n\n      // 20\n      [3, 135, 107, 5, 136, 108],\n      [3, 67, 41, 13, 68, 42],\n      [15, 54, 24, 5, 55, 25],\n      [15, 43, 15, 10, 44, 16],\n\n      // 21\n      [4, 144, 116, 4, 145, 117],\n      [17, 68, 42],\n      [17, 50, 22, 6, 51, 23],\n      [19, 46, 16, 6, 47, 17],\n\n      // 22\n      [2, 139, 111, 7, 140, 112],\n      [17, 74, 46],\n      [7, 54, 24, 16, 55, 25],\n      [34, 37, 13],\n\n      // 23\n      [4, 151, 121, 5, 152, 122],\n      [4, 75, 47, 14, 76, 48],\n      [11, 54, 24, 14, 55, 25],\n      [16, 45, 15, 14, 46, 16],\n\n      // 24\n      [6, 147, 117, 4, 148, 118],\n      [6, 73, 45, 14, 74, 46],\n      [11, 54, 24, 16, 55, 25],\n      [30, 46, 16, 2, 47, 17],\n\n      // 25\n      [8, 132, 106, 4, 133, 107],\n      [8, 75, 47, 13, 76, 48],\n      [7, 54, 24, 22, 55, 25],\n      [22, 45, 15, 13, 46, 16],\n\n      // 26\n      [10, 142, 114, 2, 143, 115],\n      [19, 74, 46, 4, 75, 47],\n      [28, 50, 22, 6, 51, 23],\n      [33, 46, 16, 4, 47, 17],\n\n      // 27\n      [8, 152, 122, 4, 153, 123],\n      [22, 73, 45, 3, 74, 46],\n      [8, 53, 23, 26, 54, 24],\n      [12, 45, 15, 28, 46, 16],\n\n      // 28\n      [3, 147, 117, 10, 148, 118],\n      [3, 73, 45, 23, 74, 46],\n      [4, 54, 24, 31, 55, 25],\n      [11, 45, 15, 31, 46, 16],\n\n      // 29\n      [7, 146, 116, 7, 147, 117],\n      [21, 73, 45, 7, 74, 46],\n      [1, 53, 23, 37, 54, 24],\n      [19, 45, 15, 26, 46, 16],\n\n      // 30\n      [5, 145, 115, 10, 146, 116],\n      [19, 75, 47, 10, 76, 48],\n      [15, 54, 24, 25, 55, 25],\n      [23, 45, 15, 25, 46, 16],\n\n      // 31\n      [13, 145, 115, 3, 146, 116],\n      [2, 74, 46, 29, 75, 47],\n      [42, 54, 24, 1, 55, 25],\n      [23, 45, 15, 28, 46, 16],\n\n      // 32\n      [17, 145, 115],\n      [10, 74, 46, 23, 75, 47],\n      [10, 54, 24, 35, 55, 25],\n      [19, 45, 15, 35, 46, 16],\n\n      // 33\n      [17, 145, 115, 1, 146, 116],\n      [14, 74, 46, 21, 75, 47],\n      [29, 54, 24, 19, 55, 25],\n      [11, 45, 15, 46, 46, 16],\n\n      // 34\n      [13, 145, 115, 6, 146, 116],\n      [14, 74, 46, 23, 75, 47],\n      [44, 54, 24, 7, 55, 25],\n      [59, 46, 16, 1, 47, 17],\n\n      // 35\n      [12, 151, 121, 7, 152, 122],\n      [12, 75, 47, 26, 76, 48],\n      [39, 54, 24, 14, 55, 25],\n      [22, 45, 15, 41, 46, 16],\n\n      // 36\n      [6, 151, 121, 14, 152, 122],\n      [6, 75, 47, 34, 76, 48],\n      [46, 54, 24, 10, 55, 25],\n      [2, 45, 15, 64, 46, 16],\n\n      // 37\n      [17, 152, 122, 4, 153, 123],\n      [29, 74, 46, 14, 75, 47],\n      [49, 54, 24, 10, 55, 25],\n      [24, 45, 15, 46, 46, 16],\n\n      // 38\n      [4, 152, 122, 18, 153, 123],\n      [13, 74, 46, 32, 75, 47],\n      [48, 54, 24, 14, 55, 25],\n      [42, 45, 15, 32, 46, 16],\n\n      // 39\n      [20, 147, 117, 4, 148, 118],\n      [40, 75, 47, 7, 76, 48],\n      [43, 54, 24, 22, 55, 25],\n      [10, 45, 15, 67, 46, 16],\n\n      // 40\n      [19, 148, 118, 6, 149, 119],\n      [18, 75, 47, 31, 76, 48],\n      [34, 54, 24, 34, 55, 25],\n      [20, 45, 15, 61, 46, 16]\n    ];\n\n    var qrRSBlock = function(totalCount, dataCount) {\n      var _this = {};\n      _this.totalCount = totalCount;\n      _this.dataCount = dataCount;\n      return _this;\n    };\n\n    var _this = {};\n\n    var getRsBlockTable = function(typeNumber, errorCorrectionLevel) {\n\n      switch(errorCorrectionLevel) {\n      case QRErrorCorrectionLevel.L :\n        return RS_BLOCK_TABLE[(typeNumber - 1) * 4 + 0];\n      case QRErrorCorrectionLevel.M :\n        return RS_BLOCK_TABLE[(typeNumber - 1) * 4 + 1];\n      case QRErrorCorrectionLevel.Q :\n        return RS_BLOCK_TABLE[(typeNumber - 1) * 4 + 2];\n      case QRErrorCorrectionLevel.H :\n        return RS_BLOCK_TABLE[(typeNumber - 1) * 4 + 3];\n      default :\n        return undefined;\n      }\n    };\n\n    _this.getRSBlocks = function(typeNumber, errorCorrectionLevel) {\n\n      var rsBlock = getRsBlockTable(typeNumber, errorCorrectionLevel);\n\n      if (typeof rsBlock == 'undefined') {\n        throw 'bad rs block @ typeNumber:' + typeNumber +\n            '/errorCorrectionLevel:' + errorCorrectionLevel;\n      }\n\n      var length = rsBlock.length / 3;\n\n      var list = [];\n\n      for (var i = 0; i < length; i += 1) {\n\n        var count = rsBlock[i * 3 + 0];\n        var totalCount = rsBlock[i * 3 + 1];\n        var dataCount = rsBlock[i * 3 + 2];\n\n        for (var j = 0; j < count; j += 1) {\n          list.push(qrRSBlock(totalCount, dataCount) );\n        }\n      }\n\n      return list;\n    };\n\n    return _this;\n  }();\n\n  //---------------------------------------------------------------------\n  // qrBitBuffer\n  //---------------------------------------------------------------------\n\n  var qrBitBuffer = function() {\n\n    var _buffer = [];\n    var _length = 0;\n\n    var _this = {};\n\n    _this.getBuffer = function() {\n      return _buffer;\n    };\n\n    _this.getAt = function(index) {\n      var bufIndex = Math.floor(index / 8);\n      return ( (_buffer[bufIndex] >>> (7 - index % 8) ) & 1) == 1;\n    };\n\n    _this.put = function(num, length) {\n      for (var i = 0; i < length; i += 1) {\n        _this.putBit( ( (num >>> (length - i - 1) ) & 1) == 1);\n      }\n    };\n\n    _this.getLengthInBits = function() {\n      return _length;\n    };\n\n    _this.putBit = function(bit) {\n\n      var bufIndex = Math.floor(_length / 8);\n      if (_buffer.length <= bufIndex) {\n        _buffer.push(0);\n      }\n\n      if (bit) {\n        _buffer[bufIndex] |= (0x80 >>> (_length % 8) );\n      }\n\n      _length += 1;\n    };\n\n    return _this;\n  };\n\n  //---------------------------------------------------------------------\n  // qrNumber\n  //---------------------------------------------------------------------\n\n  var qrNumber = function(data) {\n\n    var _mode = QRMode.MODE_NUMBER;\n    var _data = data;\n\n    var _this = {};\n\n    _this.getMode = function() {\n      return _mode;\n    };\n\n    _this.getLength = function(buffer) {\n      return _data.length;\n    };\n\n    _this.write = function(buffer) {\n\n      var data = _data;\n\n      var i = 0;\n\n      while (i + 2 < data.length) {\n        buffer.put(strToNum(data.substring(i, i + 3) ), 10);\n        i += 3;\n      }\n\n      if (i < data.length) {\n        if (data.length - i == 1) {\n          buffer.put(strToNum(data.substring(i, i + 1) ), 4);\n        } else if (data.length - i == 2) {\n          buffer.put(strToNum(data.substring(i, i + 2) ), 7);\n        }\n      }\n    };\n\n    var strToNum = function(s) {\n      var num = 0;\n      for (var i = 0; i < s.length; i += 1) {\n        num = num * 10 + chatToNum(s.charAt(i) );\n      }\n      return num;\n    };\n\n    var chatToNum = function(c) {\n      if ('0' <= c && c <= '9') {\n        return c.charCodeAt(0) - '0'.charCodeAt(0);\n      }\n      throw 'illegal char :' + c;\n    };\n\n    return _this;\n  };\n\n  //---------------------------------------------------------------------\n  // qrAlphaNum\n  //---------------------------------------------------------------------\n\n  var qrAlphaNum = function(data) {\n\n    var _mode = QRMode.MODE_ALPHA_NUM;\n    var _data = data;\n\n    var _this = {};\n\n    _this.getMode = function() {\n      return _mode;\n    };\n\n    _this.getLength = function(buffer) {\n      return _data.length;\n    };\n\n    _this.write = function(buffer) {\n\n      var s = _data;\n\n      var i = 0;\n\n      while (i + 1 < s.length) {\n        buffer.put(\n          getCode(s.charAt(i) ) * 45 +\n          getCode(s.charAt(i + 1) ), 11);\n        i += 2;\n      }\n\n      if (i < s.length) {\n        buffer.put(getCode(s.charAt(i) ), 6);\n      }\n    };\n\n    var getCode = function(c) {\n\n      if ('0' <= c && c <= '9') {\n        return c.charCodeAt(0) - '0'.charCodeAt(0);\n      } else if ('A' <= c && c <= 'Z') {\n        return c.charCodeAt(0) - 'A'.charCodeAt(0) + 10;\n      } else {\n        switch (c) {\n        case ' ' : return 36;\n        case '$' : return 37;\n        case '%' : return 38;\n        case '*' : return 39;\n        case '+' : return 40;\n        case '-' : return 41;\n        case '.' : return 42;\n        case '/' : return 43;\n        case ':' : return 44;\n        default :\n          throw 'illegal char :' + c;\n        }\n      }\n    };\n\n    return _this;\n  };\n\n  //---------------------------------------------------------------------\n  // qr8BitByte\n  //---------------------------------------------------------------------\n\n  var qr8BitByte = function(data) {\n\n    var _mode = QRMode.MODE_8BIT_BYTE;\n    var _data = data;\n    var _bytes = qrcode.stringToBytes(data);\n\n    var _this = {};\n\n    _this.getMode = function() {\n      return _mode;\n    };\n\n    _this.getLength = function(buffer) {\n      return _bytes.length;\n    };\n\n    _this.write = function(buffer) {\n      for (var i = 0; i < _bytes.length; i += 1) {\n        buffer.put(_bytes[i], 8);\n      }\n    };\n\n    return _this;\n  };\n\n  //---------------------------------------------------------------------\n  // qrKanji\n  //---------------------------------------------------------------------\n\n  var qrKanji = function(data) {\n\n    var _mode = QRMode.MODE_KANJI;\n    var _data = data;\n\n    var stringToBytes = qrcode.stringToBytesFuncs['SJIS'];\n    if (!stringToBytes) {\n      throw 'sjis not supported.';\n    }\n    !function(c, code) {\n      // self test for sjis support.\n      var test = stringToBytes(c);\n      if (test.length != 2 || ( (test[0] << 8) | test[1]) != code) {\n        throw 'sjis not supported.';\n      }\n    }('\\u53cb', 0x9746);\n\n    var _bytes = stringToBytes(data);\n\n    var _this = {};\n\n    _this.getMode = function() {\n      return _mode;\n    };\n\n    _this.getLength = function(buffer) {\n      return ~~(_bytes.length / 2);\n    };\n\n    _this.write = function(buffer) {\n\n      var data = _bytes;\n\n      var i = 0;\n\n      while (i + 1 < data.length) {\n\n        var c = ( (0xff & data[i]) << 8) | (0xff & data[i + 1]);\n\n        if (0x8140 <= c && c <= 0x9FFC) {\n          c -= 0x8140;\n        } else if (0xE040 <= c && c <= 0xEBBF) {\n          c -= 0xC140;\n        } else {\n          throw 'illegal char at ' + (i + 1) + '/' + c;\n        }\n\n        c = ( (c >>> 8) & 0xff) * 0xC0 + (c & 0xff);\n\n        buffer.put(c, 13);\n\n        i += 2;\n      }\n\n      if (i < data.length) {\n        throw 'illegal char at ' + (i + 1);\n      }\n    };\n\n    return _this;\n  };\n\n  //=====================================================================\n  // GIF Support etc.\n  //\n\n  //---------------------------------------------------------------------\n  // byteArrayOutputStream\n  //---------------------------------------------------------------------\n\n  var byteArrayOutputStream = function() {\n\n    var _bytes = [];\n\n    var _this = {};\n\n    _this.writeByte = function(b) {\n      _bytes.push(b & 0xff);\n    };\n\n    _this.writeShort = function(i) {\n      _this.writeByte(i);\n      _this.writeByte(i >>> 8);\n    };\n\n    _this.writeBytes = function(b, off, len) {\n      off = off || 0;\n      len = len || b.length;\n      for (var i = 0; i < len; i += 1) {\n        _this.writeByte(b[i + off]);\n      }\n    };\n\n    _this.writeString = function(s) {\n      for (var i = 0; i < s.length; i += 1) {\n        _this.writeByte(s.charCodeAt(i) );\n      }\n    };\n\n    _this.toByteArray = function() {\n      return _bytes;\n    };\n\n    _this.toString = function() {\n      var s = '';\n      s += '[';\n      for (var i = 0; i < _bytes.length; i += 1) {\n        if (i > 0) {\n          s += ',';\n        }\n        s += _bytes[i];\n      }\n      s += ']';\n      return s;\n    };\n\n    return _this;\n  };\n\n  //---------------------------------------------------------------------\n  // base64EncodeOutputStream\n  //---------------------------------------------------------------------\n\n  var base64EncodeOutputStream = function() {\n\n    var _buffer = 0;\n    var _buflen = 0;\n    var _length = 0;\n    var _base64 = '';\n\n    var _this = {};\n\n    var writeEncoded = function(b) {\n      _base64 += String.fromCharCode(encode(b & 0x3f) );\n    };\n\n    var encode = function(n) {\n      if (n < 0) {\n        // error.\n      } else if (n < 26) {\n        return 0x41 + n;\n      } else if (n < 52) {\n        return 0x61 + (n - 26);\n      } else if (n < 62) {\n        return 0x30 + (n - 52);\n      } else if (n == 62) {\n        return 0x2b;\n      } else if (n == 63) {\n        return 0x2f;\n      }\n      throw 'n:' + n;\n    };\n\n    _this.writeByte = function(n) {\n\n      _buffer = (_buffer << 8) | (n & 0xff);\n      _buflen += 8;\n      _length += 1;\n\n      while (_buflen >= 6) {\n        writeEncoded(_buffer >>> (_buflen - 6) );\n        _buflen -= 6;\n      }\n    };\n\n    _this.flush = function() {\n\n      if (_buflen > 0) {\n        writeEncoded(_buffer << (6 - _buflen) );\n        _buffer = 0;\n        _buflen = 0;\n      }\n\n      if (_length % 3 != 0) {\n        // padding\n        var padlen = 3 - _length % 3;\n        for (var i = 0; i < padlen; i += 1) {\n          _base64 += '=';\n        }\n      }\n    };\n\n    _this.toString = function() {\n      return _base64;\n    };\n\n    return _this;\n  };\n\n  //---------------------------------------------------------------------\n  // base64DecodeInputStream\n  //---------------------------------------------------------------------\n\n  var base64DecodeInputStream = function(str) {\n\n    var _str = str;\n    var _pos = 0;\n    var _buffer = 0;\n    var _buflen = 0;\n\n    var _this = {};\n\n    _this.read = function() {\n\n      while (_buflen < 8) {\n\n        if (_pos >= _str.length) {\n          if (_buflen == 0) {\n            return -1;\n          }\n          throw 'unexpected end of file./' + _buflen;\n        }\n\n        var c = _str.charAt(_pos);\n        _pos += 1;\n\n        if (c == '=') {\n          _buflen = 0;\n          return -1;\n        } else if (c.match(/^\\s$/) ) {\n          // ignore if whitespace.\n          continue;\n        }\n\n        _buffer = (_buffer << 6) | decode(c.charCodeAt(0) );\n        _buflen += 6;\n      }\n\n      var n = (_buffer >>> (_buflen - 8) ) & 0xff;\n      _buflen -= 8;\n      return n;\n    };\n\n    var decode = function(c) {\n      if (0x41 <= c && c <= 0x5a) {\n        return c - 0x41;\n      } else if (0x61 <= c && c <= 0x7a) {\n        return c - 0x61 + 26;\n      } else if (0x30 <= c && c <= 0x39) {\n        return c - 0x30 + 52;\n      } else if (c == 0x2b) {\n        return 62;\n      } else if (c == 0x2f) {\n        return 63;\n      } else {\n        throw 'c:' + c;\n      }\n    };\n\n    return _this;\n  };\n\n  //---------------------------------------------------------------------\n  // gifImage (B/W)\n  //---------------------------------------------------------------------\n\n  var gifImage = function(width, height) {\n\n    var _width = width;\n    var _height = height;\n    var _data = new Array(width * height);\n\n    var _this = {};\n\n    _this.setPixel = function(x, y, pixel) {\n      _data[y * _width + x] = pixel;\n    };\n\n    _this.write = function(out) {\n\n      //---------------------------------\n      // GIF Signature\n\n      out.writeString('GIF87a');\n\n      //---------------------------------\n      // Screen Descriptor\n\n      out.writeShort(_width);\n      out.writeShort(_height);\n\n      out.writeByte(0x80); // 2bit\n      out.writeByte(0);\n      out.writeByte(0);\n\n      //---------------------------------\n      // Global Color Map\n\n      // black\n      out.writeByte(0x00);\n      out.writeByte(0x00);\n      out.writeByte(0x00);\n\n      // white\n      out.writeByte(0xff);\n      out.writeByte(0xff);\n      out.writeByte(0xff);\n\n      //---------------------------------\n      // Image Descriptor\n\n      out.writeString(',');\n      out.writeShort(0);\n      out.writeShort(0);\n      out.writeShort(_width);\n      out.writeShort(_height);\n      out.writeByte(0);\n\n      //---------------------------------\n      // Local Color Map\n\n      //---------------------------------\n      // Raster Data\n\n      var lzwMinCodeSize = 2;\n      var raster = getLZWRaster(lzwMinCodeSize);\n\n      out.writeByte(lzwMinCodeSize);\n\n      var offset = 0;\n\n      while (raster.length - offset > 255) {\n        out.writeByte(255);\n        out.writeBytes(raster, offset, 255);\n        offset += 255;\n      }\n\n      out.writeByte(raster.length - offset);\n      out.writeBytes(raster, offset, raster.length - offset);\n      out.writeByte(0x00);\n\n      //---------------------------------\n      // GIF Terminator\n      out.writeString(';');\n    };\n\n    var bitOutputStream = function(out) {\n\n      var _out = out;\n      var _bitLength = 0;\n      var _bitBuffer = 0;\n\n      var _this = {};\n\n      _this.write = function(data, length) {\n\n        if ( (data >>> length) != 0) {\n          throw 'length over';\n        }\n\n        while (_bitLength + length >= 8) {\n          _out.writeByte(0xff & ( (data << _bitLength) | _bitBuffer) );\n          length -= (8 - _bitLength);\n          data >>>= (8 - _bitLength);\n          _bitBuffer = 0;\n          _bitLength = 0;\n        }\n\n        _bitBuffer = (data << _bitLength) | _bitBuffer;\n        _bitLength = _bitLength + length;\n      };\n\n      _this.flush = function() {\n        if (_bitLength > 0) {\n          _out.writeByte(_bitBuffer);\n        }\n      };\n\n      return _this;\n    };\n\n    var getLZWRaster = function(lzwMinCodeSize) {\n\n      var clearCode = 1 << lzwMinCodeSize;\n      var endCode = (1 << lzwMinCodeSize) + 1;\n      var bitLength = lzwMinCodeSize + 1;\n\n      // Setup LZWTable\n      var table = lzwTable();\n\n      for (var i = 0; i < clearCode; i += 1) {\n        table.add(String.fromCharCode(i) );\n      }\n      table.add(String.fromCharCode(clearCode) );\n      table.add(String.fromCharCode(endCode) );\n\n      var byteOut = byteArrayOutputStream();\n      var bitOut = bitOutputStream(byteOut);\n\n      // clear code\n      bitOut.write(clearCode, bitLength);\n\n      var dataIndex = 0;\n\n      var s = String.fromCharCode(_data[dataIndex]);\n      dataIndex += 1;\n\n      while (dataIndex < _data.length) {\n\n        var c = String.fromCharCode(_data[dataIndex]);\n        dataIndex += 1;\n\n        if (table.contains(s + c) ) {\n\n          s = s + c;\n\n        } else {\n\n          bitOut.write(table.indexOf(s), bitLength);\n\n          if (table.size() < 0xfff) {\n\n            if (table.size() == (1 << bitLength) ) {\n              bitLength += 1;\n            }\n\n            table.add(s + c);\n          }\n\n          s = c;\n        }\n      }\n\n      bitOut.write(table.indexOf(s), bitLength);\n\n      // end code\n      bitOut.write(endCode, bitLength);\n\n      bitOut.flush();\n\n      return byteOut.toByteArray();\n    };\n\n    var lzwTable = function() {\n\n      var _map = {};\n      var _size = 0;\n\n      var _this = {};\n\n      _this.add = function(key) {\n        if (_this.contains(key) ) {\n          throw 'dup key:' + key;\n        }\n        _map[key] = _size;\n        _size += 1;\n      };\n\n      _this.size = function() {\n        return _size;\n      };\n\n      _this.indexOf = function(key) {\n        return _map[key];\n      };\n\n      _this.contains = function(key) {\n        return typeof _map[key] != 'undefined';\n      };\n\n      return _this;\n    };\n\n    return _this;\n  };\n\n  var createDataURL = function(width, height, getPixel) {\n    var gif = gifImage(width, height);\n    for (var y = 0; y < height; y += 1) {\n      for (var x = 0; x < width; x += 1) {\n        gif.setPixel(x, y, getPixel(x, y) );\n      }\n    }\n\n    var b = byteArrayOutputStream();\n    gif.write(b);\n\n    var base64 = base64EncodeOutputStream();\n    var bytes = b.toByteArray();\n    for (var i = 0; i < bytes.length; i += 1) {\n      base64.writeByte(bytes[i]);\n    }\n    base64.flush();\n\n    return 'data:image/gif;base64,' + base64;\n  };\n\n  //---------------------------------------------------------------------\n  // returns qrcode function.\n\n  return qrcode;\n}();\n\n// multibyte support\n!function() {\n\n  qrcode.stringToBytesFuncs['UTF-8'] = function(s) {\n    // http://stackoverflow.com/questions/18729405/how-to-convert-utf8-string-to-byte-array\n    function toUTF8Array(str) {\n      var utf8 = [];\n      for (var i=0; i < str.length; i++) {\n        var charcode = str.charCodeAt(i);\n        if (charcode < 0x80) utf8.push(charcode);\n        else if (charcode < 0x800) {\n          utf8.push(0xc0 | (charcode >> 6),\n              0x80 | (charcode & 0x3f));\n        }\n        else if (charcode < 0xd800 || charcode >= 0xe000) {\n          utf8.push(0xe0 | (charcode >> 12),\n              0x80 | ((charcode>>6) & 0x3f),\n              0x80 | (charcode & 0x3f));\n        }\n        // surrogate pair\n        else {\n          i++;\n          // UTF-16 encodes 0x10000-0x10FFFF by\n          // subtracting 0x10000 and splitting the\n          // 20 bits of 0x0-0xFFFFF into two halves\n          charcode = 0x10000 + (((charcode & 0x3ff)<<10)\n            | (str.charCodeAt(i) & 0x3ff));\n          utf8.push(0xf0 | (charcode >>18),\n              0x80 | ((charcode>>12) & 0x3f),\n              0x80 | ((charcode>>6) & 0x3f),\n              0x80 | (charcode & 0x3f));\n        }\n      }\n      return utf8;\n    }\n    return toUTF8Array(s);\n  };\n\n}();\n\n(function (factory) {\n  if (typeof define === 'function' && define.amd) {\n      define([], factory);\n  } else if (typeof exports === 'object') {\n      module.exports = factory();\n  }\n}(function () {\n    return qrcode;\n}));\n", "import { UnknownObject } from \"../types\";\n\nconst isObject = (obj: Record<string, unknown>): boolean => !!obj && typeof obj === \"object\" && !Array.isArray(obj);\n\nexport default function mergeDeep(target: UnknownObject, ...sources: UnknownObject[]): UnknownObject {\n  if (!sources.length) return target;\n  const source = sources.shift();\n  if (source === undefined || !isObject(target) || !isObject(source)) return target;\n  target = { ...target };\n  Object.keys(source).forEach((key: string): void => {\n    const targetValue = target[key];\n    const sourceValue = source[key];\n\n    if (Array.isArray(targetValue) && Array.isArray(sourceValue)) {\n      target[key] = sourceValue;\n    } else if (isObject(targetValue) && isObject(sourceValue)) {\n      target[key] = mergeDeep(Object.assign({}, targetValue), sourceValue);\n    } else {\n      target[key] = sourceValue;\n    }\n  });\n\n  return mergeDeep(target, ...sources);\n}\n", "export default function downloadURI(uri: string, name: string): void {\n  const link = document.createElement(\"a\");\n  link.download = name;\n  link.href = uri;\n  document.body.appendChild(link);\n  link.click();\n  document.body.removeChild(link);\n}\n", "export default async function toDataURL(url: string): Promise<string> {\n  return new Promise((resolve) => {\n    const xhr = new XMLHttpRequest();\n    xhr.onload = function () {\n      const reader = new FileReader();\n      reader.onloadend = function () {\n        resolve(reader.result as string);\n      };\n      reader.readAsDataURL(xhr.response);\n    };\n    xhr.open(\"GET\", url);\n    xhr.responseType = \"blob\";\n    xhr.send();\n  });\n}\n", "interface ErrorCorrectionPercents {\n  [key: string]: number;\n}\n\nexport default {\n  L: 0.07,\n  M: 0.15,\n  Q: 0.25,\n  H: 0.3\n} as ErrorCorrectionPercents;\n", "import dotTypes from \"../../constants/dotTypes\";\nimport { DotType, GetNeighbor, DrawArgs, BasicFigureDrawArgs, RotateFigureArgs } from \"../../types\";\n\nexport default class QRDot {\n  _element?: SVGElement;\n  _svg: SVGElement;\n  _type: DotType;\n\n  constructor({ svg, type }: { svg: SVGElement; type: DotType }) {\n    this._svg = svg;\n    this._type = type;\n  }\n\n  draw(x: number, y: number, size: number, getNeighbor: GetNeighbor): void {\n    const type = this._type;\n    let drawFunction;\n\n    switch (type) {\n      case dotTypes.dots:\n        drawFunction = this._drawDot;\n        break;\n      case dotTypes.classy:\n        drawFunction = this._drawClassy;\n        break;\n      case dotTypes.classyRounded:\n        drawFunction = this._drawClassyRounded;\n        break;\n      case dotTypes.rounded:\n        drawFunction = this._drawRounded;\n        break;\n      case dotTypes.extraRounded:\n        drawFunction = this._drawExtraRounded;\n        break;\n      case dotTypes.square:\n      default:\n        drawFunction = this._drawSquare;\n    }\n\n    drawFunction.call(this, { x, y, size, getNeighbor });\n  }\n\n  _rotateFigure({ x, y, size, rotation = 0, draw }: RotateFigureArgs): void {\n    const cx = x + size / 2;\n    const cy = y + size / 2;\n\n    draw();\n    this._element?.setAttribute(\"transform\", `rotate(${(180 * rotation) / Math.PI},${cx},${cy})`);\n  }\n\n  _basicDot(args: BasicFigureDrawArgs): void {\n    const { size, x, y } = args;\n\n    this._rotateFigure({\n      ...args,\n      draw: () => {\n        this._element = document.createElementNS(\"http://www.w3.org/2000/svg\", \"circle\");\n        this._element.setAttribute(\"cx\", String(x + size / 2));\n        this._element.setAttribute(\"cy\", String(y + size / 2));\n        this._element.setAttribute(\"r\", String(size / 2));\n      }\n    });\n  }\n\n  _basicSquare(args: BasicFigureDrawArgs): void {\n    const { size, x, y } = args;\n\n    this._rotateFigure({\n      ...args,\n      draw: () => {\n        this._element = document.createElementNS(\"http://www.w3.org/2000/svg\", \"rect\");\n        this._element.setAttribute(\"x\", String(x));\n        this._element.setAttribute(\"y\", String(y));\n        this._element.setAttribute(\"width\", String(size));\n        this._element.setAttribute(\"height\", String(size));\n      }\n    });\n  }\n\n  //if rotation === 0 - right side is rounded\n  _basicSideRounded(args: BasicFigureDrawArgs): void {\n    const { size, x, y } = args;\n\n    this._rotateFigure({\n      ...args,\n      draw: () => {\n        this._element = document.createElementNS(\"http://www.w3.org/2000/svg\", \"path\");\n        this._element.setAttribute(\n          \"d\",\n          `M ${x} ${y}` + //go to top left position\n            `v ${size}` + //draw line to left bottom corner\n            `h ${size / 2}` + //draw line to left bottom corner + half of size right\n            `a ${size / 2} ${size / 2}, 0, 0, 0, 0 ${-size}` // draw rounded corner\n        );\n      }\n    });\n  }\n\n  //if rotation === 0 - top right corner is rounded\n  _basicCornerRounded(args: BasicFigureDrawArgs): void {\n    const { size, x, y } = args;\n\n    this._rotateFigure({\n      ...args,\n      draw: () => {\n        this._element = document.createElementNS(\"http://www.w3.org/2000/svg\", \"path\");\n        this._element.setAttribute(\n          \"d\",\n          `M ${x} ${y}` + //go to top left position\n            `v ${size}` + //draw line to left bottom corner\n            `h ${size}` + //draw line to right bottom corner\n            `v ${-size / 2}` + //draw line to right bottom corner + half of size top\n            `a ${size / 2} ${size / 2}, 0, 0, 0, ${-size / 2} ${-size / 2}` // draw rounded corner\n        );\n      }\n    });\n  }\n\n  //if rotation === 0 - top right corner is rounded\n  _basicCornerExtraRounded(args: BasicFigureDrawArgs): void {\n    const { size, x, y } = args;\n\n    this._rotateFigure({\n      ...args,\n      draw: () => {\n        this._element = document.createElementNS(\"http://www.w3.org/2000/svg\", \"path\");\n        this._element.setAttribute(\n          \"d\",\n          `M ${x} ${y}` + //go to top left position\n            `v ${size}` + //draw line to left bottom corner\n            `h ${size}` + //draw line to right bottom corner\n            `a ${size} ${size}, 0, 0, 0, ${-size} ${-size}` // draw rounded top right corner\n        );\n      }\n    });\n  }\n\n  //if rotation === 0 - left bottom and right top corners are rounded\n  _basicCornersRounded(args: BasicFigureDrawArgs): void {\n    const { size, x, y } = args;\n\n    this._rotateFigure({\n      ...args,\n      draw: () => {\n        this._element = document.createElementNS(\"http://www.w3.org/2000/svg\", \"path\");\n        this._element.setAttribute(\n          \"d\",\n          `M ${x} ${y}` + //go to left top position\n            `v ${size / 2}` + //draw line to left top corner + half of size bottom\n            `a ${size / 2} ${size / 2}, 0, 0, 0, ${size / 2} ${size / 2}` + // draw rounded left bottom corner\n            `h ${size / 2}` + //draw line to right bottom corner\n            `v ${-size / 2}` + //draw line to right bottom corner + half of size top\n            `a ${size / 2} ${size / 2}, 0, 0, 0, ${-size / 2} ${-size / 2}` // draw rounded right top corner\n        );\n      }\n    });\n  }\n\n  _drawDot({ x, y, size }: DrawArgs): void {\n    this._basicDot({ x, y, size, rotation: 0 });\n  }\n\n  _drawSquare({ x, y, size }: DrawArgs): void {\n    this._basicSquare({ x, y, size, rotation: 0 });\n  }\n\n  _drawRounded({ x, y, size, getNeighbor }: DrawArgs): void {\n    const leftNeighbor = getNeighbor ? +getNeighbor(-1, 0) : 0;\n    const rightNeighbor = getNeighbor ? +getNeighbor(1, 0) : 0;\n    const topNeighbor = getNeighbor ? +getNeighbor(0, -1) : 0;\n    const bottomNeighbor = getNeighbor ? +getNeighbor(0, 1) : 0;\n\n    const neighborsCount = leftNeighbor + rightNeighbor + topNeighbor + bottomNeighbor;\n\n    if (neighborsCount === 0) {\n      this._basicDot({ x, y, size, rotation: 0 });\n      return;\n    }\n\n    if (neighborsCount > 2 || (leftNeighbor && rightNeighbor) || (topNeighbor && bottomNeighbor)) {\n      this._basicSquare({ x, y, size, rotation: 0 });\n      return;\n    }\n\n    if (neighborsCount === 2) {\n      let rotation = 0;\n\n      if (leftNeighbor && topNeighbor) {\n        rotation = Math.PI / 2;\n      } else if (topNeighbor && rightNeighbor) {\n        rotation = Math.PI;\n      } else if (rightNeighbor && bottomNeighbor) {\n        rotation = -Math.PI / 2;\n      }\n\n      this._basicCornerRounded({ x, y, size, rotation });\n      return;\n    }\n\n    if (neighborsCount === 1) {\n      let rotation = 0;\n\n      if (topNeighbor) {\n        rotation = Math.PI / 2;\n      } else if (rightNeighbor) {\n        rotation = Math.PI;\n      } else if (bottomNeighbor) {\n        rotation = -Math.PI / 2;\n      }\n\n      this._basicSideRounded({ x, y, size, rotation });\n      return;\n    }\n  }\n\n  _drawExtraRounded({ x, y, size, getNeighbor }: DrawArgs): void {\n    const leftNeighbor = getNeighbor ? +getNeighbor(-1, 0) : 0;\n    const rightNeighbor = getNeighbor ? +getNeighbor(1, 0) : 0;\n    const topNeighbor = getNeighbor ? +getNeighbor(0, -1) : 0;\n    const bottomNeighbor = getNeighbor ? +getNeighbor(0, 1) : 0;\n\n    const neighborsCount = leftNeighbor + rightNeighbor + topNeighbor + bottomNeighbor;\n\n    if (neighborsCount === 0) {\n      this._basicDot({ x, y, size, rotation: 0 });\n      return;\n    }\n\n    if (neighborsCount > 2 || (leftNeighbor && rightNeighbor) || (topNeighbor && bottomNeighbor)) {\n      this._basicSquare({ x, y, size, rotation: 0 });\n      return;\n    }\n\n    if (neighborsCount === 2) {\n      let rotation = 0;\n\n      if (leftNeighbor && topNeighbor) {\n        rotation = Math.PI / 2;\n      } else if (topNeighbor && rightNeighbor) {\n        rotation = Math.PI;\n      } else if (rightNeighbor && bottomNeighbor) {\n        rotation = -Math.PI / 2;\n      }\n\n      this._basicCornerExtraRounded({ x, y, size, rotation });\n      return;\n    }\n\n    if (neighborsCount === 1) {\n      let rotation = 0;\n\n      if (topNeighbor) {\n        rotation = Math.PI / 2;\n      } else if (rightNeighbor) {\n        rotation = Math.PI;\n      } else if (bottomNeighbor) {\n        rotation = -Math.PI / 2;\n      }\n\n      this._basicSideRounded({ x, y, size, rotation });\n      return;\n    }\n  }\n\n  _drawClassy({ x, y, size, getNeighbor }: DrawArgs): void {\n    const leftNeighbor = getNeighbor ? +getNeighbor(-1, 0) : 0;\n    const rightNeighbor = getNeighbor ? +getNeighbor(1, 0) : 0;\n    const topNeighbor = getNeighbor ? +getNeighbor(0, -1) : 0;\n    const bottomNeighbor = getNeighbor ? +getNeighbor(0, 1) : 0;\n\n    const neighborsCount = leftNeighbor + rightNeighbor + topNeighbor + bottomNeighbor;\n\n    if (neighborsCount === 0) {\n      this._basicCornersRounded({ x, y, size, rotation: Math.PI / 2 });\n      return;\n    }\n\n    if (!leftNeighbor && !topNeighbor) {\n      this._basicCornerRounded({ x, y, size, rotation: -Math.PI / 2 });\n      return;\n    }\n\n    if (!rightNeighbor && !bottomNeighbor) {\n      this._basicCornerRounded({ x, y, size, rotation: Math.PI / 2 });\n      return;\n    }\n\n    this._basicSquare({ x, y, size, rotation: 0 });\n  }\n\n  _drawClassyRounded({ x, y, size, getNeighbor }: DrawArgs): void {\n    const leftNeighbor = getNeighbor ? +getNeighbor(-1, 0) : 0;\n    const rightNeighbor = getNeighbor ? +getNeighbor(1, 0) : 0;\n    const topNeighbor = getNeighbor ? +getNeighbor(0, -1) : 0;\n    const bottomNeighbor = getNeighbor ? +getNeighbor(0, 1) : 0;\n\n    const neighborsCount = leftNeighbor + rightNeighbor + topNeighbor + bottomNeighbor;\n\n    if (neighborsCount === 0) {\n      this._basicCornersRounded({ x, y, size, rotation: Math.PI / 2 });\n      return;\n    }\n\n    if (!leftNeighbor && !topNeighbor) {\n      this._basicCornerExtraRounded({ x, y, size, rotation: -Math.PI / 2 });\n      return;\n    }\n\n    if (!rightNeighbor && !bottomNeighbor) {\n      this._basicCornerExtraRounded({ x, y, size, rotation: Math.PI / 2 });\n      return;\n    }\n\n    this._basicSquare({ x, y, size, rotation: 0 });\n  }\n}\n", "import { DotTypes } from \"../types\";\n\nexport default {\n  dots: \"dots\",\n  rounded: \"rounded\",\n  classy: \"classy\",\n  classyRounded: \"classy-rounded\",\n  square: \"square\",\n  extraRounded: \"extra-rounded\"\n} as DotTypes;\n", "import cornerSquareTypes from \"../../constants/cornerSquareTypes\";\nimport { CornerSquareType, DrawArgs, BasicFigureDrawArgs, RotateFigureArgs } from \"../../types\";\n\nexport default class QRCornerSquare {\n  _element?: SVGElement;\n  _svg: SVGElement;\n  _type: CornerSquareType;\n\n  constructor({ svg, type }: { svg: SVGElement; type: CornerSquareType }) {\n    this._svg = svg;\n    this._type = type;\n  }\n\n  draw(x: number, y: number, size: number, rotation: number): void {\n    const type = this._type;\n    let drawFunction;\n\n    switch (type) {\n      case cornerSquareTypes.square:\n        drawFunction = this._drawSquare;\n        break;\n      case cornerSquareTypes.extraRounded:\n        drawFunction = this._drawExtraRounded;\n        break;\n      case cornerSquareTypes.dot:\n      default:\n        drawFunction = this._drawDot;\n    }\n\n    drawFunction.call(this, { x, y, size, rotation });\n  }\n\n  _rotateFigure({ x, y, size, rotation = 0, draw }: RotateFigureArgs): void {\n    const cx = x + size / 2;\n    const cy = y + size / 2;\n\n    draw();\n    this._element?.setAttribute(\"transform\", `rotate(${(180 * rotation) / Math.PI},${cx},${cy})`);\n  }\n\n  _basicDot(args: BasicFigureDrawArgs): void {\n    const { size, x, y } = args;\n    const dotSize = size / 7;\n\n    this._rotateFigure({\n      ...args,\n      draw: () => {\n        this._element = document.createElementNS(\"http://www.w3.org/2000/svg\", \"path\");\n        this._element.setAttribute(\"clip-rule\", \"evenodd\");\n        this._element.setAttribute(\n          \"d\",\n          `M ${x + size / 2} ${y}` + // M cx, y //  Move to top of ring\n            `a ${size / 2} ${size / 2} 0 1 0 0.1 0` + // a outerRadius, outerRadius, 0, 1, 0, 1, 0 // Draw outer arc, but don't close it\n            `z` + // Z // Close the outer shape\n            `m 0 ${dotSize}` + // m -1 outerRadius-innerRadius // Move to top point of inner radius\n            `a ${size / 2 - dotSize} ${size / 2 - dotSize} 0 1 1 -0.1 0` + // a innerRadius, innerRadius, 0, 1, 1, -1, 0 // Draw inner arc, but don't close it\n            `Z` // Z // Close the inner ring. Actually will still work without, but inner ring will have one unit missing in stroke\n        );\n      }\n    });\n  }\n\n  _basicSquare(args: BasicFigureDrawArgs): void {\n    const { size, x, y } = args;\n    const dotSize = size / 7;\n\n    this._rotateFigure({\n      ...args,\n      draw: () => {\n        this._element = document.createElementNS(\"http://www.w3.org/2000/svg\", \"path\");\n        this._element.setAttribute(\"clip-rule\", \"evenodd\");\n        this._element.setAttribute(\n          \"d\",\n          `M ${x} ${y}` +\n            `v ${size}` +\n            `h ${size}` +\n            `v ${-size}` +\n            `z` +\n            `M ${x + dotSize} ${y + dotSize}` +\n            `h ${size - 2 * dotSize}` +\n            `v ${size - 2 * dotSize}` +\n            `h ${-size + 2 * dotSize}` +\n            `z`\n        );\n      }\n    });\n  }\n\n  _basicExtraRounded(args: BasicFigureDrawArgs): void {\n    const { size, x, y } = args;\n    const dotSize = size / 7;\n\n    this._rotateFigure({\n      ...args,\n      draw: () => {\n        this._element = document.createElementNS(\"http://www.w3.org/2000/svg\", \"path\");\n        this._element.setAttribute(\"clip-rule\", \"evenodd\");\n        this._element.setAttribute(\n          \"d\",\n          `M ${x} ${y + 2.5 * dotSize}` +\n            `v ${2 * dotSize}` +\n            `a ${2.5 * dotSize} ${2.5 * dotSize}, 0, 0, 0, ${dotSize * 2.5} ${dotSize * 2.5}` +\n            `h ${2 * dotSize}` +\n            `a ${2.5 * dotSize} ${2.5 * dotSize}, 0, 0, 0, ${dotSize * 2.5} ${-dotSize * 2.5}` +\n            `v ${-2 * dotSize}` +\n            `a ${2.5 * dotSize} ${2.5 * dotSize}, 0, 0, 0, ${-dotSize * 2.5} ${-dotSize * 2.5}` +\n            `h ${-2 * dotSize}` +\n            `a ${2.5 * dotSize} ${2.5 * dotSize}, 0, 0, 0, ${-dotSize * 2.5} ${dotSize * 2.5}` +\n            `M ${x + 2.5 * dotSize} ${y + dotSize}` +\n            `h ${2 * dotSize}` +\n            `a ${1.5 * dotSize} ${1.5 * dotSize}, 0, 0, 1, ${dotSize * 1.5} ${dotSize * 1.5}` +\n            `v ${2 * dotSize}` +\n            `a ${1.5 * dotSize} ${1.5 * dotSize}, 0, 0, 1, ${-dotSize * 1.5} ${dotSize * 1.5}` +\n            `h ${-2 * dotSize}` +\n            `a ${1.5 * dotSize} ${1.5 * dotSize}, 0, 0, 1, ${-dotSize * 1.5} ${-dotSize * 1.5}` +\n            `v ${-2 * dotSize}` +\n            `a ${1.5 * dotSize} ${1.5 * dotSize}, 0, 0, 1, ${dotSize * 1.5} ${-dotSize * 1.5}`\n        );\n      }\n    });\n  }\n\n  _drawDot({ x, y, size, rotation }: DrawArgs): void {\n    this._basicDot({ x, y, size, rotation });\n  }\n\n  _drawSquare({ x, y, size, rotation }: DrawArgs): void {\n    this._basicSquare({ x, y, size, rotation });\n  }\n\n  _drawExtraRounded({ x, y, size, rotation }: DrawArgs): void {\n    this._basicExtraRounded({ x, y, size, rotation });\n  }\n}\n", "import { CornerSquareTypes } from \"../types\";\n\nexport default {\n  dot: \"dot\",\n  square: \"square\",\n  extraRounded: \"extra-rounded\"\n} as CornerSquareTypes;\n", "import cornerDotTypes from \"../../constants/cornerDotTypes\";\nimport { CornerDotType, RotateFigureArgs, BasicFigureDrawArgs, DrawArgs } from \"../../types\";\n\nexport default class QRCornerDot {\n  _element?: SVGElement;\n  _svg: SVGElement;\n  _type: CornerDotType;\n\n  constructor({ svg, type }: { svg: SVGElement; type: CornerDotType }) {\n    this._svg = svg;\n    this._type = type;\n  }\n\n  draw(x: number, y: number, size: number, rotation: number): void {\n    const type = this._type;\n    let drawFunction;\n\n    switch (type) {\n      case cornerDotTypes.square:\n        drawFunction = this._drawSquare;\n        break;\n      case cornerDotTypes.dot:\n      default:\n        drawFunction = this._drawDot;\n    }\n\n    drawFunction.call(this, { x, y, size, rotation });\n  }\n\n  _rotateFigure({ x, y, size, rotation = 0, draw }: RotateFigureArgs): void {\n    const cx = x + size / 2;\n    const cy = y + size / 2;\n\n    draw();\n    this._element?.setAttribute(\"transform\", `rotate(${(180 * rotation) / Math.PI},${cx},${cy})`);\n  }\n\n  _basicDot(args: BasicFigureDrawArgs): void {\n    const { size, x, y } = args;\n\n    this._rotateFigure({\n      ...args,\n      draw: () => {\n        this._element = document.createElementNS(\"http://www.w3.org/2000/svg\", \"circle\");\n        this._element.setAttribute(\"cx\", String(x + size / 2));\n        this._element.setAttribute(\"cy\", String(y + size / 2));\n        this._element.setAttribute(\"r\", String(size / 2));\n      }\n    });\n  }\n\n  _basicSquare(args: BasicFigureDrawArgs): void {\n    const { size, x, y } = args;\n\n    this._rotateFigure({\n      ...args,\n      draw: () => {\n        this._element = document.createElementNS(\"http://www.w3.org/2000/svg\", \"rect\");\n        this._element.setAttribute(\"x\", String(x));\n        this._element.setAttribute(\"y\", String(y));\n        this._element.setAttribute(\"width\", String(size));\n        this._element.setAttribute(\"height\", String(size));\n      }\n    });\n  }\n\n  _drawDot({ x, y, size, rotation }: DrawArgs): void {\n    this._basicDot({ x, y, size, rotation });\n  }\n\n  _drawSquare({ x, y, size, rotation }: DrawArgs): void {\n    this._basicSquare({ x, y, size, rotation });\n  }\n}\n", "import { CornerDotTypes } from \"../types\";\n\nexport default {\n  dot: \"dot\",\n  square: \"square\"\n} as CornerDotTypes;\n", "import { ShapeTypes } from \"../types\";\n\nexport default {\n  square: \"square\",\n  circle: \"circle\"\n} as ShapeTypes;\n", "import calculateImageSize from \"../tools/calculateImageSize\";\nimport toDataUrl from \"../tools/toDataUrl\";\nimport errorCorrectionPercents from \"../constants/errorCorrectionPercents\";\nimport QRDot from \"../figures/dot/QRDot\";\nimport QRCornerSquare from \"../figures/cornerSquare/QRCornerSquare\";\nimport QRCornerDot from \"../figures/cornerDot/QRCornerDot\";\nimport { RequiredOptions } from \"./QROptions\";\nimport gradientTypes from \"../constants/gradientTypes\";\nimport shapeTypes from \"../constants/shapeTypes\";\nimport { QRCode, FilterFunction, Gradient } from \"../types\";\n\nconst squareMask = [\n  [1, 1, 1, 1, 1, 1, 1],\n  [1, 0, 0, 0, 0, 0, 1],\n  [1, 0, 0, 0, 0, 0, 1],\n  [1, 0, 0, 0, 0, 0, 1],\n  [1, 0, 0, 0, 0, 0, 1],\n  [1, 0, 0, 0, 0, 0, 1],\n  [1, 1, 1, 1, 1, 1, 1]\n];\n\nconst dotMask = [\n  [0, 0, 0, 0, 0, 0, 0],\n  [0, 0, 0, 0, 0, 0, 0],\n  [0, 0, 1, 1, 1, 0, 0],\n  [0, 0, 1, 1, 1, 0, 0],\n  [0, 0, 1, 1, 1, 0, 0],\n  [0, 0, 0, 0, 0, 0, 0],\n  [0, 0, 0, 0, 0, 0, 0]\n];\n\nexport default class QRSVG {\n  _element: SVGElement;\n  _defs: SVGElement;\n  _backgroundClipPath?: SVGElement;\n  _dotsClipPath?: SVGElement;\n  _cornersSquareClipPath?: SVGElement;\n  _cornersDotClipPath?: SVGElement;\n  _options: RequiredOptions;\n  _qr?: QRCode;\n  _image?: HTMLImageElement;\n\n  //TODO don't pass all options to this class\n  constructor(options: RequiredOptions) {\n    this._element = document.createElementNS(\"http://www.w3.org/2000/svg\", \"svg\");\n    this._element.setAttribute(\"width\", String(options.width));\n    this._element.setAttribute(\"height\", String(options.height));\n    this._defs = document.createElementNS(\"http://www.w3.org/2000/svg\", \"defs\");\n    this._element.appendChild(this._defs);\n\n    this._options = options;\n  }\n\n  get width(): number {\n    return this._options.width;\n  }\n\n  get height(): number {\n    return this._options.height;\n  }\n\n  getElement(): SVGElement {\n    return this._element;\n  }\n\n  async drawQR(qr: QRCode): Promise<void> {\n    const count = qr.getModuleCount();\n    const minSize = Math.min(this._options.width, this._options.height) - this._options.margin * 2;\n    const realQRSize = this._options.shape === shapeTypes.circle ? minSize / Math.sqrt(2) : minSize;\n    const dotSize = Math.floor(realQRSize / count);\n    let drawImageSize = {\n      hideXDots: 0,\n      hideYDots: 0,\n      width: 0,\n      height: 0\n    };\n\n    this._qr = qr;\n\n    if (this._options.image) {\n      //We need it to get image size\n      await this.loadImage();\n      if (!this._image) return;\n      const { imageOptions, qrOptions } = this._options;\n      const coverLevel = imageOptions.imageSize * errorCorrectionPercents[qrOptions.errorCorrectionLevel];\n      const maxHiddenDots = Math.floor(coverLevel * count * count);\n\n      drawImageSize = calculateImageSize({\n        originalWidth: this._image.width,\n        originalHeight: this._image.height,\n        maxHiddenDots,\n        maxHiddenAxisDots: count - 14,\n        dotSize\n      });\n    }\n\n    this.drawBackground();\n    this.drawDots((i: number, j: number): boolean => {\n      if (this._options.imageOptions.hideBackgroundDots) {\n        if (\n          i >= (count - drawImageSize.hideXDots) / 2 &&\n          i < (count + drawImageSize.hideXDots) / 2 &&\n          j >= (count - drawImageSize.hideYDots) / 2 &&\n          j < (count + drawImageSize.hideYDots) / 2\n        ) {\n          return false;\n        }\n      }\n\n      if (squareMask[i]?.[j] || squareMask[i - count + 7]?.[j] || squareMask[i]?.[j - count + 7]) {\n        return false;\n      }\n\n      if (dotMask[i]?.[j] || dotMask[i - count + 7]?.[j] || dotMask[i]?.[j - count + 7]) {\n        return false;\n      }\n\n      return true;\n    });\n    this.drawCorners();\n\n    if (this._options.image) {\n      await this.drawImage({ width: drawImageSize.width, height: drawImageSize.height, count, dotSize });\n    }\n  }\n\n  drawBackground(): void {\n    const element = this._element;\n    const options = this._options;\n\n    if (element) {\n      const gradientOptions = options.backgroundOptions?.gradient;\n      const color = options.backgroundOptions?.color;\n\n      if (gradientOptions || color) {\n        this._createColor({\n          options: gradientOptions,\n          color: color,\n          additionalRotation: 0,\n          x: 0,\n          y: 0,\n          height: options.height,\n          width: options.width,\n          name: \"background-color\"\n        });\n      }\n\n      if (options.backgroundOptions?.round) {\n        const size = Math.min(options.width, options.height);\n        const element = document.createElementNS(\"http://www.w3.org/2000/svg\", \"rect\");\n        this._backgroundClipPath = document.createElementNS(\"http://www.w3.org/2000/svg\", \"clipPath\");\n        this._backgroundClipPath.setAttribute(\"id\", \"clip-path-background-color\");\n        this._defs.appendChild(this._backgroundClipPath);\n\n        element.setAttribute(\"x\", String((options.width - size) / 2));\n        element.setAttribute(\"y\", String((options.height - size) / 2));\n        element.setAttribute(\"width\", String(size));\n        element.setAttribute(\"height\", String(size));\n        element.setAttribute(\"rx\", String((size / 2) * options.backgroundOptions.round));\n\n        this._backgroundClipPath.appendChild(element);\n      }\n    }\n  }\n\n  drawDots(filter?: FilterFunction): void {\n    if (!this._qr) {\n      throw \"QR code is not defined\";\n    }\n\n    const options = this._options;\n    const count = this._qr.getModuleCount();\n\n    if (count > options.width || count > options.height) {\n      throw \"The canvas is too small.\";\n    }\n\n    const minSize = Math.min(options.width, options.height) - options.margin * 2;\n    const realQRSize = options.shape === shapeTypes.circle ? minSize / Math.sqrt(2) : minSize;\n    const dotSize = Math.floor(realQRSize / count);\n    const xBeginning = Math.floor((options.width - count * dotSize) / 2);\n    const yBeginning = Math.floor((options.height - count * dotSize) / 2);\n    const dot = new QRDot({ svg: this._element, type: options.dotsOptions.type });\n\n    this._dotsClipPath = document.createElementNS(\"http://www.w3.org/2000/svg\", \"clipPath\");\n    this._dotsClipPath.setAttribute(\"id\", \"clip-path-dot-color\");\n    this._defs.appendChild(this._dotsClipPath);\n\n    this._createColor({\n      options: options.dotsOptions?.gradient,\n      color: options.dotsOptions.color,\n      additionalRotation: 0,\n      x: 0,\n      y: 0,\n      height: options.height,\n      width: options.width,\n      name: \"dot-color\"\n    });\n\n    for (let i = 0; i < count; i++) {\n      for (let j = 0; j < count; j++) {\n        if (filter && !filter(i, j)) {\n          continue;\n        }\n        if (!this._qr?.isDark(i, j)) {\n          continue;\n        }\n\n        dot.draw(\n          xBeginning + i * dotSize,\n          yBeginning + j * dotSize,\n          dotSize,\n          (xOffset: number, yOffset: number): boolean => {\n            if (i + xOffset < 0 || j + yOffset < 0 || i + xOffset >= count || j + yOffset >= count) return false;\n            if (filter && !filter(i + xOffset, j + yOffset)) return false;\n            return !!this._qr && this._qr.isDark(i + xOffset, j + yOffset);\n          }\n        );\n\n        if (dot._element && this._dotsClipPath) {\n          this._dotsClipPath.appendChild(dot._element);\n        }\n      }\n    }\n\n    if (options.shape === shapeTypes.circle) {\n      const additionalDots = Math.floor((minSize / dotSize - count) / 2);\n      const fakeCount = count + additionalDots * 2;\n      const xFakeBeginning = xBeginning - additionalDots * dotSize;\n      const yFakeBeginning = yBeginning - additionalDots * dotSize;\n      const fakeMatrix: number[][] = [];\n      const center = Math.floor(fakeCount / 2);\n\n      for (let i = 0; i < fakeCount; i++) {\n        fakeMatrix[i] = [];\n        for (let j = 0; j < fakeCount; j++) {\n          if (\n            i >= additionalDots - 1 &&\n            i <= fakeCount - additionalDots &&\n            j >= additionalDots - 1 &&\n            j <= fakeCount - additionalDots\n          ) {\n            fakeMatrix[i][j] = 0;\n            continue;\n          }\n\n          if (Math.sqrt((i - center) * (i - center) + (j - center) * (j - center)) > center) {\n            fakeMatrix[i][j] = 0;\n            continue;\n          }\n\n          //Get random dots from QR code to show it outside of QR code\n          fakeMatrix[i][j] = this._qr.isDark(\n            j - 2 * additionalDots < 0 ? j : j >= count ? j - 2 * additionalDots : j - additionalDots,\n            i - 2 * additionalDots < 0 ? i : i >= count ? i - 2 * additionalDots : i - additionalDots\n          )\n            ? 1\n            : 0;\n        }\n      }\n\n      for (let i = 0; i < fakeCount; i++) {\n        for (let j = 0; j < fakeCount; j++) {\n          if (!fakeMatrix[i][j]) continue;\n\n          dot.draw(\n            xFakeBeginning + i * dotSize,\n            yFakeBeginning + j * dotSize,\n            dotSize,\n            (xOffset: number, yOffset: number): boolean => {\n              return !!fakeMatrix[i + xOffset]?.[j + yOffset];\n            }\n          );\n          if (dot._element && this._dotsClipPath) {\n            this._dotsClipPath.appendChild(dot._element);\n          }\n        }\n      }\n    }\n  }\n\n  drawCorners(): void {\n    if (!this._qr) {\n      throw \"QR code is not defined\";\n    }\n\n    const element = this._element;\n    const options = this._options;\n\n    if (!element) {\n      throw \"Element code is not defined\";\n    }\n\n    const count = this._qr.getModuleCount();\n    const minSize = Math.min(options.width, options.height) - options.margin * 2;\n    const realQRSize = options.shape === shapeTypes.circle ? minSize / Math.sqrt(2) : minSize;\n    const dotSize = Math.floor(realQRSize / count);\n    const cornersSquareSize = dotSize * 7;\n    const cornersDotSize = dotSize * 3;\n    const xBeginning = Math.floor((options.width - count * dotSize) / 2);\n    const yBeginning = Math.floor((options.height - count * dotSize) / 2);\n\n    [\n      [0, 0, 0],\n      [1, 0, Math.PI / 2],\n      [0, 1, -Math.PI / 2]\n    ].forEach(([column, row, rotation]) => {\n      const x = xBeginning + column * dotSize * (count - 7);\n      const y = yBeginning + row * dotSize * (count - 7);\n      let cornersSquareClipPath = this._dotsClipPath;\n      let cornersDotClipPath = this._dotsClipPath;\n\n      if (options.cornersSquareOptions?.gradient || options.cornersSquareOptions?.color) {\n        cornersSquareClipPath = document.createElementNS(\"http://www.w3.org/2000/svg\", \"clipPath\");\n        cornersSquareClipPath.setAttribute(\"id\", `clip-path-corners-square-color-${column}-${row}`);\n        this._defs.appendChild(cornersSquareClipPath);\n        this._cornersSquareClipPath = this._cornersDotClipPath = cornersDotClipPath = cornersSquareClipPath;\n\n        this._createColor({\n          options: options.cornersSquareOptions?.gradient,\n          color: options.cornersSquareOptions?.color,\n          additionalRotation: rotation,\n          x,\n          y,\n          height: cornersSquareSize,\n          width: cornersSquareSize,\n          name: `corners-square-color-${column}-${row}`\n        });\n      }\n\n      if (options.cornersSquareOptions?.type) {\n        const cornersSquare = new QRCornerSquare({ svg: this._element, type: options.cornersSquareOptions.type });\n\n        cornersSquare.draw(x, y, cornersSquareSize, rotation);\n\n        if (cornersSquare._element && cornersSquareClipPath) {\n          cornersSquareClipPath.appendChild(cornersSquare._element);\n        }\n      } else {\n        const dot = new QRDot({ svg: this._element, type: options.dotsOptions.type });\n\n        for (let i = 0; i < squareMask.length; i++) {\n          for (let j = 0; j < squareMask[i].length; j++) {\n            if (!squareMask[i]?.[j]) {\n              continue;\n            }\n\n            dot.draw(\n              x + i * dotSize,\n              y + j * dotSize,\n              dotSize,\n              (xOffset: number, yOffset: number): boolean => !!squareMask[i + xOffset]?.[j + yOffset]\n            );\n\n            if (dot._element && cornersSquareClipPath) {\n              cornersSquareClipPath.appendChild(dot._element);\n            }\n          }\n        }\n      }\n\n      if (options.cornersDotOptions?.gradient || options.cornersDotOptions?.color) {\n        cornersDotClipPath = document.createElementNS(\"http://www.w3.org/2000/svg\", \"clipPath\");\n        cornersDotClipPath.setAttribute(\"id\", `clip-path-corners-dot-color-${column}-${row}`);\n        this._defs.appendChild(cornersDotClipPath);\n        this._cornersDotClipPath = cornersDotClipPath;\n\n        this._createColor({\n          options: options.cornersDotOptions?.gradient,\n          color: options.cornersDotOptions?.color,\n          additionalRotation: rotation,\n          x: x + dotSize * 2,\n          y: y + dotSize * 2,\n          height: cornersDotSize,\n          width: cornersDotSize,\n          name: `corners-dot-color-${column}-${row}`\n        });\n      }\n\n      if (options.cornersDotOptions?.type) {\n        const cornersDot = new QRCornerDot({ svg: this._element, type: options.cornersDotOptions.type });\n\n        cornersDot.draw(x + dotSize * 2, y + dotSize * 2, cornersDotSize, rotation);\n\n        if (cornersDot._element && cornersDotClipPath) {\n          cornersDotClipPath.appendChild(cornersDot._element);\n        }\n      } else {\n        const dot = new QRDot({ svg: this._element, type: options.dotsOptions.type });\n\n        for (let i = 0; i < dotMask.length; i++) {\n          for (let j = 0; j < dotMask[i].length; j++) {\n            if (!dotMask[i]?.[j]) {\n              continue;\n            }\n\n            dot.draw(\n              x + i * dotSize,\n              y + j * dotSize,\n              dotSize,\n              (xOffset: number, yOffset: number): boolean => !!dotMask[i + xOffset]?.[j + yOffset]\n            );\n\n            if (dot._element && cornersDotClipPath) {\n              cornersDotClipPath.appendChild(dot._element);\n            }\n          }\n        }\n      }\n    });\n  }\n\n  loadImage(): Promise<void> {\n    return new Promise((resolve, reject) => {\n      const options = this._options;\n      const image = new Image();\n\n      if (!options.image) {\n        return reject(\"Image is not defined\");\n      }\n\n      if (typeof options.imageOptions.crossOrigin === \"string\") {\n        image.crossOrigin = options.imageOptions.crossOrigin;\n      }\n\n      this._image = image;\n      image.onload = (): void => {\n        resolve();\n      };\n      image.src = options.image;\n    });\n  }\n\n  async drawImage({\n    width,\n    height,\n    count,\n    dotSize\n  }: {\n    width: number;\n    height: number;\n    count: number;\n    dotSize: number;\n  }): Promise<void> {\n    const options = this._options;\n    const xBeginning = Math.floor((options.width - count * dotSize) / 2);\n    const yBeginning = Math.floor((options.height - count * dotSize) / 2);\n    const dx = xBeginning + options.imageOptions.margin + (count * dotSize - width) / 2;\n    const dy = yBeginning + options.imageOptions.margin + (count * dotSize - height) / 2;\n    const dw = width - options.imageOptions.margin * 2;\n    const dh = height - options.imageOptions.margin * 2;\n\n    const image = document.createElementNS(\"http://www.w3.org/2000/svg\", \"image\");\n    image.setAttribute(\"x\", String(dx));\n    image.setAttribute(\"y\", String(dy));\n    image.setAttribute(\"width\", `${dw}px`);\n    image.setAttribute(\"height\", `${dh}px`);\n\n    const imageUrl = await toDataUrl(options.image || \"\");\n\n    image.setAttribute(\"href\", imageUrl || \"\");\n\n    this._element.appendChild(image);\n  }\n\n  _createColor({\n    options,\n    color,\n    additionalRotation,\n    x,\n    y,\n    height,\n    width,\n    name\n  }: {\n    options?: Gradient;\n    color?: string;\n    additionalRotation: number;\n    x: number;\n    y: number;\n    height: number;\n    width: number;\n    name: string;\n  }): void {\n    const size = width > height ? width : height;\n    const rect = document.createElementNS(\"http://www.w3.org/2000/svg\", \"rect\");\n    rect.setAttribute(\"x\", String(x));\n    rect.setAttribute(\"y\", String(y));\n    rect.setAttribute(\"height\", String(height));\n    rect.setAttribute(\"width\", String(width));\n    rect.setAttribute(\"clip-path\", `url('#clip-path-${name}')`);\n\n    if (options) {\n      let gradient: SVGElement;\n      if (options.type === gradientTypes.radial) {\n        gradient = document.createElementNS(\"http://www.w3.org/2000/svg\", \"radialGradient\");\n        gradient.setAttribute(\"id\", name);\n        gradient.setAttribute(\"gradientUnits\", \"userSpaceOnUse\");\n        gradient.setAttribute(\"fx\", String(x + width / 2));\n        gradient.setAttribute(\"fy\", String(y + height / 2));\n        gradient.setAttribute(\"cx\", String(x + width / 2));\n        gradient.setAttribute(\"cy\", String(y + height / 2));\n        gradient.setAttribute(\"r\", String(size / 2));\n      } else {\n        const rotation = ((options.rotation || 0) + additionalRotation) % (2 * Math.PI);\n        const positiveRotation = (rotation + 2 * Math.PI) % (2 * Math.PI);\n        let x0 = x + width / 2;\n        let y0 = y + height / 2;\n        let x1 = x + width / 2;\n        let y1 = y + height / 2;\n\n        if (\n          (positiveRotation >= 0 && positiveRotation <= 0.25 * Math.PI) ||\n          (positiveRotation > 1.75 * Math.PI && positiveRotation <= 2 * Math.PI)\n        ) {\n          x0 = x0 - width / 2;\n          y0 = y0 - (height / 2) * Math.tan(rotation);\n          x1 = x1 + width / 2;\n          y1 = y1 + (height / 2) * Math.tan(rotation);\n        } else if (positiveRotation > 0.25 * Math.PI && positiveRotation <= 0.75 * Math.PI) {\n          y0 = y0 - height / 2;\n          x0 = x0 - width / 2 / Math.tan(rotation);\n          y1 = y1 + height / 2;\n          x1 = x1 + width / 2 / Math.tan(rotation);\n        } else if (positiveRotation > 0.75 * Math.PI && positiveRotation <= 1.25 * Math.PI) {\n          x0 = x0 + width / 2;\n          y0 = y0 + (height / 2) * Math.tan(rotation);\n          x1 = x1 - width / 2;\n          y1 = y1 - (height / 2) * Math.tan(rotation);\n        } else if (positiveRotation > 1.25 * Math.PI && positiveRotation <= 1.75 * Math.PI) {\n          y0 = y0 + height / 2;\n          x0 = x0 + width / 2 / Math.tan(rotation);\n          y1 = y1 - height / 2;\n          x1 = x1 - width / 2 / Math.tan(rotation);\n        }\n\n        gradient = document.createElementNS(\"http://www.w3.org/2000/svg\", \"linearGradient\");\n        gradient.setAttribute(\"id\", name);\n        gradient.setAttribute(\"gradientUnits\", \"userSpaceOnUse\");\n        gradient.setAttribute(\"x1\", String(Math.round(x0)));\n        gradient.setAttribute(\"y1\", String(Math.round(y0)));\n        gradient.setAttribute(\"x2\", String(Math.round(x1)));\n        gradient.setAttribute(\"y2\", String(Math.round(y1)));\n      }\n\n      options.colorStops.forEach(({ offset, color }: { offset: number; color: string }) => {\n        const stop = document.createElementNS(\"http://www.w3.org/2000/svg\", \"stop\");\n        stop.setAttribute(\"offset\", `${100 * offset}%`);\n        stop.setAttribute(\"stop-color\", color);\n        gradient.appendChild(stop);\n      });\n\n      rect.setAttribute(\"fill\", `url('#${name}')`);\n      this._defs.appendChild(gradient);\n    } else if (color) {\n      rect.setAttribute(\"fill\", color);\n    }\n\n    this._element.appendChild(rect);\n  }\n}\n", "interface ImageSizeOptions {\n  originalHeight: number;\n  originalWidth: number;\n  maxHiddenDots: number;\n  maxHiddenAxisDots?: number;\n  dotSize: number;\n}\n\ninterface ImageSizeResult {\n  height: number;\n  width: number;\n  hideYDots: number;\n  hideXDots: number;\n}\n\nexport default function calculateImageSize({\n  originalHeight,\n  originalWidth,\n  maxHiddenDots,\n  maxHiddenAxisDots,\n  dotSize\n}: ImageSizeOptions): ImageSizeResult {\n  const hideDots = { x: 0, y: 0 };\n  const imageSize = { x: 0, y: 0 };\n\n  if (originalHeight <= 0 || originalWidth <= 0 || maxHiddenDots <= 0 || dotSize <= 0) {\n    return {\n      height: 0,\n      width: 0,\n      hideYDots: 0,\n      hideXDots: 0\n    };\n  }\n\n  const k = originalHeight / originalWidth;\n\n  //Getting the maximum possible axis hidden dots\n  hideDots.x = Math.floor(Math.sqrt(maxHiddenDots / k));\n  //The count of hidden dot's can't be less than 1\n  if (hideDots.x <= 0) hideDots.x = 1;\n  //Check the limit of the maximum allowed axis hidden dots\n  if (maxHiddenAxisDots && maxHiddenAxisDots < hideDots.x) hideDots.x = maxHiddenAxisDots;\n  //The count of dots should be odd\n  if (hideDots.x % 2 === 0) hideDots.x--;\n  imageSize.x = hideDots.x * dotSize;\n  //Calculate opposite axis hidden dots based on axis value.\n  //The value will be odd.\n  //We use ceil to prevent dots covering by the image.\n  hideDots.y = 1 + 2 * Math.ceil((hideDots.x * k - 1) / 2);\n  imageSize.y = Math.round(imageSize.x * k);\n  //If the result dots count is bigger than max - then decrease size and calculate again\n  if (hideDots.y * hideDots.x > maxHiddenDots || (maxHiddenAxisDots && maxHiddenAxisDots < hideDots.y)) {\n    if (maxHiddenAxisDots && maxHiddenAxisDots < hideDots.y) {\n      hideDots.y = maxHiddenAxisDots;\n      if (hideDots.y % 2 === 0) hideDots.x--;\n    } else {\n      hideDots.y -= 2;\n    }\n    imageSize.y = hideDots.y * dotSize;\n    hideDots.x = 1 + 2 * Math.ceil((hideDots.y / k - 1) / 2);\n    imageSize.x = Math.round(imageSize.y / k);\n  }\n\n  return {\n    height: imageSize.y,\n    width: imageSize.x,\n    hideYDots: hideDots.y,\n    hideXDots: hideDots.x\n  };\n}\n", "import { GradientTypes } from \"../types\";\n\nexport default {\n  radial: \"radial\",\n  linear: \"linear\"\n} as GradientTypes;\n", "import { DrawTypes } from \"../types\";\n\nexport default {\n  canvas: \"canvas\",\n  svg: \"svg\"\n} as DrawTypes;\n", "import { TypeNumber } from \"../types\";\n\ninterface TypesMap {\n  [key: number]: TypeNumber;\n}\n\nconst qrTypes: TypesMap = {};\n\nfor (let type = 0; type <= 40; type++) {\n  qrTypes[type] = type as TypeNumber;\n}\n\n// 0 types is autodetect\n\n// types = {\n//     0: 0,\n//     1: 1,\n//     ...\n//     40: 40\n// }\n\nexport default qrTypes;\n", "import qrTypes from \"../constants/qrTypes\";\nimport drawTypes from \"../constants/drawTypes\";\nimport shapeTypes from \"../constants/shapeTypes\";\nimport errorCorrectionLevels from \"../constants/errorCorrectionLevels\";\nimport { ShapeType, DotType, Options, TypeNumber, ErrorCorrectionLevel, Mode, DrawType, Gradient } from \"../types\";\n\nexport interface RequiredOptions extends Options {\n  type: DrawType;\n  shape: ShapeType;\n  width: number;\n  height: number;\n  margin: number;\n  data: string;\n  qrOptions: {\n    typeNumber: TypeNumber;\n    mode?: Mode;\n    errorCorrectionLevel: ErrorCorrectionLevel;\n  };\n  imageOptions: {\n    hideBackgroundDots: boolean;\n    imageSize: number;\n    crossOrigin?: string;\n    margin: number;\n  };\n  dotsOptions: {\n    type: DotType;\n    color: string;\n    gradient?: Gradient;\n  };\n  backgroundOptions: {\n    round: number;\n    color: string;\n    gradient?: Gradient;\n  };\n}\n\nconst defaultOptions: RequiredOptions = {\n  type: drawTypes.canvas,\n  shape: shapeTypes.square,\n  width: 300,\n  height: 300,\n  data: \"\",\n  margin: 0,\n  qrOptions: {\n    typeNumber: qrTypes[0],\n    mode: undefined,\n    errorCorrectionLevel: errorCorrectionLevels.Q\n  },\n  imageOptions: {\n    hideBackgroundDots: true,\n    imageSize: 0.4,\n    crossOrigin: undefined,\n    margin: 0\n  },\n  dotsOptions: {\n    type: \"square\",\n    color: \"#000\"\n  },\n  backgroundOptions: {\n    round: 0,\n    color: \"#fff\"\n  }\n};\n\nexport default defaultOptions;\n", "import { ErrorCorrectionLevel } from \"../types\";\n\ninterface ErrorCorrectionLevels {\n  [key: string]: ErrorCorrectionLevel;\n}\n\nexport default {\n  L: \"L\",\n  M: \"M\",\n  Q: \"Q\",\n  H: \"H\"\n} as ErrorCorrectionLevels;\n", "import { RequiredOptions } from \"../core/QROptions\";\nimport { Gradient } from \"../types\";\n\nfunction sanitizeGradient(gradient: Gradient): Gradient {\n  const newGradient = { ...gradient };\n\n  if (!newGradient.colorStops || !newGradient.colorStops.length) {\n    throw \"Field 'colorStops' is required in gradient\";\n  }\n\n  if (newGradient.rotation) {\n    newGradient.rotation = Number(newGradient.rotation);\n  } else {\n    newGradient.rotation = 0;\n  }\n\n  newGradient.colorStops = newGradient.colorStops.map((colorStop: { offset: number; color: string }) => ({\n    ...colorStop,\n    offset: Number(colorStop.offset)\n  }));\n\n  return newGradient;\n}\n\nexport default function sanitizeOptions(options: RequiredOptions): RequiredOptions {\n  const newOptions = { ...options };\n\n  newOptions.width = Number(newOptions.width);\n  newOptions.height = Number(newOptions.height);\n  newOptions.margin = Number(newOptions.margin);\n  newOptions.imageOptions = {\n    ...newOptions.imageOptions,\n    hideBackgroundDots: Boolean(newOptions.imageOptions.hideBackgroundDots),\n    imageSize: Number(newOptions.imageOptions.imageSize),\n    margin: Number(newOptions.imageOptions.margin)\n  };\n\n  if (newOptions.margin > Math.min(newOptions.width, newOptions.height)) {\n    newOptions.margin = Math.min(newOptions.width, newOptions.height);\n  }\n\n  newOptions.dotsOptions = {\n    ...newOptions.dotsOptions\n  };\n  if (newOptions.dotsOptions.gradient) {\n    newOptions.dotsOptions.gradient = sanitizeGradient(newOptions.dotsOptions.gradient);\n  }\n\n  if (newOptions.cornersSquareOptions) {\n    newOptions.cornersSquareOptions = {\n      ...newOptions.cornersSquareOptions\n    };\n    if (newOptions.cornersSquareOptions.gradient) {\n      newOptions.cornersSquareOptions.gradient = sanitizeGradient(newOptions.cornersSquareOptions.gradient);\n    }\n  }\n\n  if (newOptions.cornersDotOptions) {\n    newOptions.cornersDotOptions = {\n      ...newOptions.cornersDotOptions\n    };\n    if (newOptions.cornersDotOptions.gradient) {\n      newOptions.cornersDotOptions.gradient = sanitizeGradient(newOptions.cornersDotOptions.gradient);\n    }\n  }\n\n  if (newOptions.backgroundOptions) {\n    newOptions.backgroundOptions = {\n      ...newOptions.backgroundOptions\n    };\n    if (newOptions.backgroundOptions.gradient) {\n      newOptions.backgroundOptions.gradient = sanitizeGradient(newOptions.backgroundOptions.gradient);\n    }\n  }\n\n  return newOptions;\n}\n", "import QRCodeStyling from \"./core/QRCodeStyling\";\nimport dotTypes from \"./constants/dotTypes\";\nimport cornerDotTypes from \"./constants/cornerDotTypes\";\nimport cornerSquareTypes from \"./constants/cornerSquareTypes\";\nimport errorCorrectionLevels from \"./constants/errorCorrectionLevels\";\nimport errorCorrectionPercents from \"./constants/errorCorrectionPercents\";\nimport modes from \"./constants/modes\";\nimport qrTypes from \"./constants/qrTypes\";\nimport drawTypes from \"./constants/drawTypes\";\nimport shapeTypes from \"./constants/shapeTypes\";\nimport gradientTypes from \"./constants/gradientTypes\";\n\nexport * from \"./types\";\n\nexport {\n  dotTypes,\n  cornerDotTypes,\n  cornerSquareTypes,\n  errorCorrectionLevels,\n  errorCorrectionPercents,\n  modes,\n  qrTypes,\n  drawTypes,\n  shapeTypes,\n  gradientTypes\n};\n\nexport default QRCodeStyling;\n", "import getMode from \"../tools/getMode\";\nimport mergeDeep from \"../tools/merge\";\nimport downloadURI from \"../tools/downloadURI\";\nimport QRSVG from \"./QRSVG\";\nimport drawTypes from \"../constants/drawTypes\";\n\nimport defaultOptions, { RequiredOptions } from \"./QROptions\";\nimport sanitizeOptions from \"../tools/sanitizeOptions\";\nimport { FileExtension, QRCode, Options, DownloadOptions, ExtensionFunction } from \"../types\";\nimport qrcode from \"qrcode-generator\";\n\nexport default class QRCodeStyling {\n  _options: RequiredOptions;\n  _container?: HTMLElement;\n  _canvas?: HTMLCanvasElement;\n  _svg?: SVGElement;\n  _qr?: QRCode;\n  _extension?: ExtensionFunction;\n  _canvasDrawingPromise?: Promise<void>;\n  _svgDrawingPromise?: Promise<void>;\n\n  constructor(options?: Partial<Options>) {\n    this._options = options ? sanitizeOptions(mergeDeep(defaultOptions, options) as RequiredOptions) : defaultOptions;\n    this.update();\n  }\n\n  static _clearContainer(container?: HTMLElement): void {\n    if (container) {\n      container.innerHTML = \"\";\n    }\n  }\n\n  _setupSvg(): void {\n    if (!this._qr) {\n      return;\n    }\n    const qrSVG = new QRSVG(this._options);\n\n    this._svg = qrSVG.getElement();\n    this._svgDrawingPromise = qrSVG.drawQR(this._qr).then(() => {\n      if (!this._svg) return;\n      this._extension?.(qrSVG.getElement(), this._options);\n    });\n  }\n\n  _setupCanvas(): void {\n    if (!this._qr) {\n      return;\n    }\n\n    this._canvas = document.createElement(\"canvas\");\n    this._canvas.width = this._options.width;\n    this._canvas.height = this._options.height;\n\n    this._setupSvg();\n    this._canvasDrawingPromise = this._svgDrawingPromise?.then(() => {\n      if (!this._svg) return;\n\n      const svg = this._svg;\n      const xml = new XMLSerializer().serializeToString(svg);\n      const svg64 = btoa(xml);\n      const image64 = \"data:image/svg+xml;base64,\" + svg64;\n      const image = new Image();\n\n      return new Promise((resolve) => {\n        image.onload = (): void => {\n          this._canvas?.getContext(\"2d\")?.drawImage(image, 0, 0);\n          resolve();\n        };\n\n        image.src = image64;\n      });\n    });\n  }\n\n  async _getElement(extension: FileExtension = \"png\"): Promise<SVGElement | HTMLCanvasElement | undefined> {\n    if (!this._qr) throw \"QR code is empty\";\n\n    if (extension.toLowerCase() === \"svg\") {\n      if (!this._svg || !this._svgDrawingPromise) {\n        this._setupSvg();\n      }\n      await this._svgDrawingPromise;\n      return this._svg;\n    } else {\n      if (!this._canvas || !this._canvasDrawingPromise) {\n        this._setupCanvas();\n      }\n      await this._canvasDrawingPromise;\n      return this._canvas;\n    }\n  }\n\n  update(options?: Partial<Options>): void {\n    QRCodeStyling._clearContainer(this._container);\n    this._options = options ? sanitizeOptions(mergeDeep(this._options, options) as RequiredOptions) : this._options;\n\n    if (!this._options.data) {\n      return;\n    }\n\n    this._qr = qrcode(this._options.qrOptions.typeNumber, this._options.qrOptions.errorCorrectionLevel);\n    this._qr.addData(this._options.data, this._options.qrOptions.mode || getMode(this._options.data));\n    this._qr.make();\n\n    if (this._options.type === drawTypes.canvas) {\n      this._setupCanvas();\n    } else {\n      this._setupSvg();\n    }\n\n    this.append(this._container);\n  }\n\n  append(container?: HTMLElement): void {\n    if (!container) {\n      return;\n    }\n\n    if (typeof container.appendChild !== \"function\") {\n      throw \"Container should be a single DOM node\";\n    }\n\n    if (this._options.type === drawTypes.canvas) {\n      if (this._canvas) {\n        container.appendChild(this._canvas);\n      }\n    } else {\n      if (this._svg) {\n        container.appendChild(this._svg);\n      }\n    }\n\n    this._container = container;\n  }\n\n  applyExtension(extension: ExtensionFunction): void {\n    if (!extension) {\n      throw \"Extension function should be defined.\";\n    }\n\n    this._extension = extension;\n    this.update();\n  }\n\n  deleteExtension(): void {\n    this._extension = undefined;\n    this.update();\n  }\n\n  async getRawData(extension: FileExtension = \"png\"): Promise<Blob | null> {\n    if (!this._qr) throw \"QR code is empty\";\n    const element = await this._getElement(extension);\n\n    if (!element) {\n      return null;\n    }\n\n    if (extension.toLowerCase() === \"svg\") {\n      const serializer = new XMLSerializer();\n      const source = serializer.serializeToString(element);\n\n      return new Blob(['<?xml version=\"1.0\" standalone=\"no\"?>\\r\\n' + source], { type: \"image/svg+xml\" });\n    } else {\n      return new Promise((resolve) => (element as HTMLCanvasElement).toBlob(resolve, `image/${extension}`, 1));\n    }\n  }\n\n  async download(downloadOptions?: Partial<DownloadOptions> | string): Promise<void> {\n    if (!this._qr) throw \"QR code is empty\";\n    let extension = \"png\" as FileExtension;\n    let name = \"qr\";\n\n    //TODO remove deprecated code in the v2\n    if (typeof downloadOptions === \"string\") {\n      extension = downloadOptions as FileExtension;\n      console.warn(\n        \"Extension is deprecated as argument for 'download' method, please pass object { name: '...', extension: '...' } as argument\"\n      );\n    } else if (typeof downloadOptions === \"object\" && downloadOptions !== null) {\n      if (downloadOptions.name) {\n        name = downloadOptions.name;\n      }\n      if (downloadOptions.extension) {\n        extension = downloadOptions.extension;\n      }\n    }\n\n    const element = await this._getElement(extension);\n\n    if (!element) {\n      return;\n    }\n\n    if (extension.toLowerCase() === \"svg\") {\n      const serializer = new XMLSerializer();\n      let source = serializer.serializeToString(element);\n\n      source = '<?xml version=\"1.0\" standalone=\"no\"?>\\r\\n' + source;\n      const url = \"data:image/svg+xml;charset=utf-8,\" + encodeURIComponent(source);\n      downloadURI(url, `${name}.svg`);\n    } else {\n      const url = (element as HTMLCanvasElement).toDataURL(`image/${extension}`);\n      downloadURI(url, `${name}.${extension}`);\n    }\n  }\n}\n", "import modes from \"../constants/modes\";\nimport { Mode } from \"../types\";\n\nexport default function getMode(data: string): Mode {\n  switch (true) {\n    case /^[0-9]*$/.test(data):\n      return modes.numeric;\n    case /^[0-9A-Z $%*+\\-./:]*$/.test(data):\n      return modes.alphanumeric;\n    default:\n      return modes.byte;\n  }\n}\n", "import { Mode } from \"../types\";\n\ninterface Modes {\n  [key: string]: Mode;\n}\n\nexport default {\n  numeric: \"Numeric\",\n  alphanumeric: \"Alphanumeric\",\n  byte: \"Byte\",\n  kanji: \"Kanji\"\n} as Modes;\n", "// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tif(__webpack_module_cache__[moduleId]) {\n\t\treturn __webpack_module_cache__[moduleId].exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n", "// module exports must be returned from runtime so entry inlining is disabled\n// startup\n// Load entry module and return exports\nreturn __webpack_require__(676);\n", "// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => module['default'] :\n\t\t() => module;\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};", "// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};", "__webpack_require__.o = (obj, prop) => Object.prototype.hasOwnProperty.call(obj, prop)", "export default require(\"./node_modules/qr-code-styling/lib/qr-code-styling.js\");"],
  "mappings": "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",
  "names": []
}
