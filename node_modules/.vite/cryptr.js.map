{
  "version": 3,
  "sources": ["../cryptr/index.js", "dep:cryptr"],
  "sourcesContent": ["const crypto = require('crypto');\n\nconst algorithm = 'aes-256-gcm';\nconst ivLength = 16;\nconst saltLength = 64;\nconst tagLength = 16;\nconst tagPosition = saltLength + ivLength;\nconst encryptedPosition = tagPosition + tagLength;\n\nfunction Cryptr(secret) {\n    if (!secret || typeof secret !== 'string') {\n        throw new Error('Cryptr: secret must be a non-0-length string');\n    }\n\n    function getKey(salt) {\n        return crypto.pbkdf2Sync(secret, salt, 100000, 32, 'sha512');\n    }\n\n    this.encrypt = function encrypt(value) {\n        if (value == null) {\n            throw new Error('value must not be null or undefined');\n        }\n\n        const iv = crypto.randomBytes(ivLength);\n        const salt = crypto.randomBytes(saltLength);\n\n        const key = getKey(salt);\n\n        const cipher = crypto.createCipheriv(algorithm, key, iv);\n        const encrypted = Buffer.concat([cipher.update(String(value), 'utf8'), cipher.final()]);\n\n        const tag = cipher.getAuthTag();\n\n        return Buffer.concat([salt, iv, tag, encrypted]).toString('hex');\n    };\n\n    this.decrypt = function decrypt(value) {\n        if (value == null) {\n            throw new Error('value must not be null or undefined');\n        }\n\n        const stringValue = Buffer.from(String(value), 'hex');\n\n        const salt = stringValue.slice(0, saltLength);\n        const iv = stringValue.slice(saltLength, tagPosition);\n        const tag = stringValue.slice(tagPosition, encryptedPosition);\n        const encrypted = stringValue.slice(encryptedPosition);\n\n        const key = getKey(salt);\n\n        const decipher = crypto.createDecipheriv(algorithm, key, iv);\n\n        decipher.setAuthTag(tag);\n\n        return decipher.update(encrypted) + decipher.final('utf8');\n    };\n}\n\nmodule.exports = Cryptr;\n", "export default require(\"./node_modules/cryptr/index.js\");"],
  "mappings": ";;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA,QAAM,SAAS;AAEf,QAAM,YAAY;AAClB,QAAM,WAAW;AACjB,QAAM,aAAa;AACnB,QAAM,YAAY;AAClB,QAAM,cAAc,aAAa;AACjC,QAAM,oBAAoB,cAAc;AAExC,oBAAgB,QAAQ;AACpB,UAAI,CAAC,UAAU,OAAO,WAAW,UAAU;AACvC,cAAM,IAAI,MAAM;AAAA;AAGpB,sBAAgB,MAAM;AAClB,eAAO,OAAO,WAAW,QAAQ,MAAM,KAAQ,IAAI;AAAA;AAGvD,WAAK,UAAU,iBAAiB,OAAO;AACnC,YAAI,SAAS,MAAM;AACf,gBAAM,IAAI,MAAM;AAAA;AAGpB,cAAM,KAAK,OAAO,YAAY;AAC9B,cAAM,OAAO,OAAO,YAAY;AAEhC,cAAM,MAAM,OAAO;AAEnB,cAAM,SAAS,OAAO,eAAe,WAAW,KAAK;AACrD,cAAM,YAAY,OAAO,OAAO,CAAC,OAAO,OAAO,OAAO,QAAQ,SAAS,OAAO;AAE9E,cAAM,MAAM,OAAO;AAEnB,eAAO,OAAO,OAAO,CAAC,MAAM,IAAI,KAAK,YAAY,SAAS;AAAA;AAG9D,WAAK,UAAU,iBAAiB,OAAO;AACnC,YAAI,SAAS,MAAM;AACf,gBAAM,IAAI,MAAM;AAAA;AAGpB,cAAM,cAAc,OAAO,KAAK,OAAO,QAAQ;AAE/C,cAAM,OAAO,YAAY,MAAM,GAAG;AAClC,cAAM,KAAK,YAAY,MAAM,YAAY;AACzC,cAAM,MAAM,YAAY,MAAM,aAAa;AAC3C,cAAM,YAAY,YAAY,MAAM;AAEpC,cAAM,MAAM,OAAO;AAEnB,cAAM,WAAW,OAAO,iBAAiB,WAAW,KAAK;AAEzD,iBAAS,WAAW;AAEpB,eAAO,SAAS,OAAO,aAAa,SAAS,MAAM;AAAA;AAAA;AAI3D,WAAO,UAAU;AAAA;AAAA;;;AC1DjB;AAAA;AAAA,IAAO,iBAAQ;",
  "names": []
}
