{
  "version": 3,
  "sources": ["../@esbuild-plugins/node-globals-polyfill/_virtual-process-polyfill_.js", "../@esbuild-plugins/node-globals-polyfill/Buffer.js", "../@esbuild-plugins/node-globals-polyfill/_buffer.js"],
  "sourcesContent": ["// shim for using process in browser\n// based off https://github.com/defunctzombie/node-process/blob/master/browser.js\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined')\n}\nfunction defaultClearTimeout() {\n    throw new Error('clearTimeout has not been defined')\n}\nvar cachedSetTimeout = defaultSetTimout\nvar cachedClearTimeout = defaultClearTimeout\nif (typeof global.setTimeout === 'function') {\n    cachedSetTimeout = setTimeout\n}\nif (typeof global.clearTimeout === 'function') {\n    cachedClearTimeout = clearTimeout\n}\n\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0)\n    }\n    // if setTimeout wasn't available but was latter defined\n    if (\n        (cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) &&\n        setTimeout\n    ) {\n        cachedSetTimeout = setTimeout\n        return setTimeout(fun, 0)\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0)\n    } catch (e) {\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0)\n        } catch (e) {\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0)\n        }\n    }\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker)\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if (\n        (cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) &&\n        clearTimeout\n    ) {\n        cachedClearTimeout = clearTimeout\n        return clearTimeout(marker)\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker)\n    } catch (e) {\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker)\n        } catch (e) {\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker)\n        }\n    }\n}\nvar queue = []\nvar draining = false\nvar currentQueue\nvar queueIndex = -1\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return\n    }\n    draining = false\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue)\n    } else {\n        queueIndex = -1\n    }\n    if (queue.length) {\n        drainQueue()\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return\n    }\n    var timeout = runTimeout(cleanUpNextTick)\n    draining = true\n\n    var len = queue.length\n    while (len) {\n        currentQueue = queue\n        queue = []\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run()\n            }\n        }\n        queueIndex = -1\n        len = queue.length\n    }\n    currentQueue = null\n    draining = false\n    runClearTimeout(timeout)\n}\nfunction nextTick(fun) {\n    var args = new Array(arguments.length - 1)\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i]\n        }\n    }\n    queue.push(new Item(fun, args))\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue)\n    }\n}\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun\n    this.array = array\n}\nItem.prototype.run = function() {\n    this.fun.apply(null, this.array)\n}\nvar title = 'browser'\nvar platform = 'browser'\nvar browser = true\nvar env = {}\nvar argv = []\nvar version = '' // empty string to avoid regexp issues\nvar versions = {}\nvar release = {}\nvar config = {}\n\nfunction noop() {}\n\nvar on = noop\nvar addListener = noop\nvar once = noop\nvar off = noop\nvar removeListener = noop\nvar removeAllListeners = noop\nvar emit = noop\n\nfunction binding(name) {\n    throw new Error('process.binding is not supported')\n}\n\nfunction cwd() {\n    return '/'\n}\nfunction chdir(dir) {\n    throw new Error('process.chdir is not supported')\n}\nfunction umask() {\n    return 0\n}\n\n// from https://github.com/kumavis/browser-process-hrtime/blob/master/index.js\nvar performance = global.performance || {}\nvar performanceNow =\n    performance.now ||\n    performance.mozNow ||\n    performance.msNow ||\n    performance.oNow ||\n    performance.webkitNow ||\n    function() {\n        return new Date().getTime()\n    }\n\n// generate timestamp or delta\n// see http://nodejs.org/api/process.html#process_process_hrtime\nfunction hrtime(previousTimestamp) {\n    var clocktime = performanceNow.call(performance) * 1e-3\n    var seconds = Math.floor(clocktime)\n    var nanoseconds = Math.floor((clocktime % 1) * 1e9)\n    if (previousTimestamp) {\n        seconds = seconds - previousTimestamp[0]\n        nanoseconds = nanoseconds - previousTimestamp[1]\n        if (nanoseconds < 0) {\n            seconds--\n            nanoseconds += 1e9\n        }\n    }\n    return [seconds, nanoseconds]\n}\n\nvar startTime = new Date()\nfunction uptime() {\n    var currentTime = new Date()\n    var dif = currentTime - startTime\n    return dif / 1000\n}\n\nexport var process = {\n    nextTick: nextTick,\n    title: title,\n    browser: browser,\n    env: env,\n    argv: argv,\n    version: version,\n    versions: versions,\n    on: on,\n    addListener: addListener,\n    once: once,\n    off: off,\n    removeListener: removeListener,\n    removeAllListeners: removeAllListeners,\n    emit: emit,\n    binding: binding,\n    cwd: cwd,\n    chdir: chdir,\n    umask: umask,\n    hrtime: hrtime,\n    platform: platform,\n    release: release,\n    config: config,\n    uptime: uptime,\n}\n\n// replace process.env.VAR with define\n\nconst defines = {\n\n}\nObject.keys(defines).forEach((key) => {\n    const segs = key.split('.')\n    let target = process\n    for (let i = 0; i < segs.length; i++) {\n        const seg = segs[i]\n        if (i === segs.length - 1) {\n            target[seg] = defines[key]\n        } else {\n            target = target[seg] || (target[seg] = {})\n        }\n    }\n})\n", "// taken from https://github.com/calvinmetcalf/buffer-es6\n\n/*!\n * The buffer module from node.js, for the browser.\n *\n * @author   Feross Aboukhadijeh <feross@feross.org> <http://feross.org>\n * @license  MIT\n */\n/* eslint-disable no-proto */\n\nvar lookup = []\nvar revLookup = []\nvar Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array\nvar inited = false\nfunction init() {\n    inited = true\n    var code =\n        'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'\n    for (var i = 0, len = code.length; i < len; ++i) {\n        lookup[i] = code[i]\n        revLookup[code.charCodeAt(i)] = i\n    }\n\n    revLookup['-'.charCodeAt(0)] = 62\n    revLookup['_'.charCodeAt(0)] = 63\n}\n\nfunction base64toByteArray(b64) {\n    if (!inited) {\n        init()\n    }\n    var i, j, l, tmp, placeHolders, arr\n    var len = b64.length\n\n    if (len % 4 > 0) {\n        throw new Error('Invalid string. Length must be a multiple of 4')\n    }\n\n    // the number of equal signs (place holders)\n    // if there are two placeholders, than the two characters before it\n    // represent one byte\n    // if there is only one, then the three characters before it represent 2 bytes\n    // this is just a cheap hack to not do indexOf twice\n    placeHolders = b64[len - 2] === '=' ? 2 : b64[len - 1] === '=' ? 1 : 0\n\n    // base64 is 4/3 + up to two characters of the original data\n    arr = new Arr((len * 3) / 4 - placeHolders)\n\n    // if there are placeholders, only get up to the last complete 4 chars\n    l = placeHolders > 0 ? len - 4 : len\n\n    var L = 0\n\n    for (i = 0, j = 0; i < l; i += 4, j += 3) {\n        tmp =\n            (revLookup[b64.charCodeAt(i)] << 18) |\n            (revLookup[b64.charCodeAt(i + 1)] << 12) |\n            (revLookup[b64.charCodeAt(i + 2)] << 6) |\n            revLookup[b64.charCodeAt(i + 3)]\n        arr[L++] = (tmp >> 16) & 0xff\n        arr[L++] = (tmp >> 8) & 0xff\n        arr[L++] = tmp & 0xff\n    }\n\n    if (placeHolders === 2) {\n        tmp =\n            (revLookup[b64.charCodeAt(i)] << 2) |\n            (revLookup[b64.charCodeAt(i + 1)] >> 4)\n        arr[L++] = tmp & 0xff\n    } else if (placeHolders === 1) {\n        tmp =\n            (revLookup[b64.charCodeAt(i)] << 10) |\n            (revLookup[b64.charCodeAt(i + 1)] << 4) |\n            (revLookup[b64.charCodeAt(i + 2)] >> 2)\n        arr[L++] = (tmp >> 8) & 0xff\n        arr[L++] = tmp & 0xff\n    }\n\n    return arr\n}\n\nfunction tripletToBase64(num) {\n    return (\n        lookup[(num >> 18) & 0x3f] +\n        lookup[(num >> 12) & 0x3f] +\n        lookup[(num >> 6) & 0x3f] +\n        lookup[num & 0x3f]\n    )\n}\n\nfunction encodeChunk(uint8, start, end) {\n    var tmp\n    var output = []\n    for (var i = start; i < end; i += 3) {\n        tmp = (uint8[i] << 16) + (uint8[i + 1] << 8) + uint8[i + 2]\n        output.push(tripletToBase64(tmp))\n    }\n    return output.join('')\n}\n\nfunction base64fromByteArray(uint8) {\n    if (!inited) {\n        init()\n    }\n    var tmp\n    var len = uint8.length\n    var extraBytes = len % 3 // if we have 1 byte left, pad 2 bytes\n    var output = ''\n    var parts = []\n    var maxChunkLength = 16383 // must be multiple of 3\n\n    // go through the array every three bytes, we'll deal with trailing stuff later\n    for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {\n        parts.push(\n            encodeChunk(\n                uint8,\n                i,\n                i + maxChunkLength > len2 ? len2 : i + maxChunkLength,\n            ),\n        )\n    }\n\n    // pad the end with zeros, but make sure to not forget the extra bytes\n    if (extraBytes === 1) {\n        tmp = uint8[len - 1]\n        output += lookup[tmp >> 2]\n        output += lookup[(tmp << 4) & 0x3f]\n        output += '=='\n    } else if (extraBytes === 2) {\n        tmp = (uint8[len - 2] << 8) + uint8[len - 1]\n        output += lookup[tmp >> 10]\n        output += lookup[(tmp >> 4) & 0x3f]\n        output += lookup[(tmp << 2) & 0x3f]\n        output += '='\n    }\n\n    parts.push(output)\n\n    return parts.join('')\n}\n\nvar INSPECT_MAX_BYTES = 50\n\n/**\n * If `Buffer.TYPED_ARRAY_SUPPORT`:\n *   === true    Use Uint8Array implementation (fastest)\n *   === false   Use Object implementation (most compatible, even IE6)\n *\n * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,\n * Opera 11.6+, iOS 4.2+.\n *\n * Due to various browser bugs, sometimes the Object implementation will be used even\n * when the browser supports typed arrays.\n *\n * Note:\n *\n *   - Firefox 4-29 lacks support for adding new properties to `Uint8Array` instances,\n *     See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438.\n *\n *   - Chrome 9-10 is missing the `TypedArray.prototype.subarray` function.\n *\n *   - IE10 has a broken `TypedArray.prototype.subarray` function which returns arrays of\n *     incorrect length in some situations.\n\n * We detect these buggy browsers and set `Buffer.TYPED_ARRAY_SUPPORT` to `false` so they\n * get the Object implementation, which is slower but behaves correctly.\n */\nBuffer.TYPED_ARRAY_SUPPORT =\n    global.TYPED_ARRAY_SUPPORT !== undefined ? global.TYPED_ARRAY_SUPPORT : true\n\nfunction kMaxLength() {\n    return Buffer.TYPED_ARRAY_SUPPORT ? 0x7fffffff : 0x3fffffff\n}\n\nfunction createBuffer(that, length) {\n    if (kMaxLength() < length) {\n        throw new RangeError('Invalid typed array length')\n    }\n    if (Buffer.TYPED_ARRAY_SUPPORT) {\n        // Return an augmented `Uint8Array` instance, for best performance\n        that = new Uint8Array(length)\n        that.__proto__ = Buffer.prototype\n    } else {\n        // Fallback: Return an object instance of the Buffer class\n        if (that === null) {\n            that = new Buffer(length)\n        }\n        that.length = length\n    }\n\n    return that\n}\n\n/**\n * The Buffer constructor returns instances of `Uint8Array` that have their\n * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of\n * `Uint8Array`, so the returned instances will have all the node `Buffer` methods\n * and the `Uint8Array` methods. Square bracket notation works as expected -- it\n * returns a single octet.\n *\n * The `Uint8Array` prototype remains unmodified.\n */\n\nexport function Buffer(arg, encodingOrOffset, length) {\n    if (!Buffer.TYPED_ARRAY_SUPPORT && !(this instanceof Buffer)) {\n        return new Buffer(arg, encodingOrOffset, length)\n    }\n\n    // Common case.\n    if (typeof arg === 'number') {\n        if (typeof encodingOrOffset === 'string') {\n            throw new Error(\n                'If encoding is specified then the first argument must be a string',\n            )\n        }\n        return allocUnsafe(this, arg)\n    }\n    return from(this, arg, encodingOrOffset, length)\n}\n\nBuffer.poolSize = 8192 // not used by this implementation\n\n// TODO: Legacy, not needed anymore. Remove in next major version.\nBuffer._augment = function(arr) {\n    arr.__proto__ = Buffer.prototype\n    return arr\n}\n\nfunction from(that, value, encodingOrOffset, length) {\n    if (typeof value === 'number') {\n        throw new TypeError('\"value\" argument must not be a number')\n    }\n\n    if (typeof ArrayBuffer !== 'undefined' && value instanceof ArrayBuffer) {\n        return fromArrayBuffer(that, value, encodingOrOffset, length)\n    }\n\n    if (typeof value === 'string') {\n        return fromString(that, value, encodingOrOffset)\n    }\n\n    return fromObject(that, value)\n}\n\n/**\n * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError\n * if value is a number.\n * Buffer.from(str[, encoding])\n * Buffer.from(array)\n * Buffer.from(buffer)\n * Buffer.from(arrayBuffer[, byteOffset[, length]])\n **/\nBuffer.from = function(value, encodingOrOffset, length) {\n    return from(null, value, encodingOrOffset, length)\n}\n\nBuffer.kMaxLength = kMaxLength()\n\nif (Buffer.TYPED_ARRAY_SUPPORT) {\n    Buffer.prototype.__proto__ = Uint8Array.prototype\n    Buffer.__proto__ = Uint8Array\n    if (\n        typeof Symbol !== 'undefined' &&\n        Symbol.species &&\n        Buffer[Symbol.species] === Buffer\n    ) {\n        // Fix subarray() in ES2016. See: https://github.com/feross/buffer/pull/97\n        // Object.defineProperty(Buffer, Symbol.species, {\n        //   value: null,\n        //   configurable: true\n        // })\n    }\n}\n\nfunction assertSize(size) {\n    if (typeof size !== 'number') {\n        throw new TypeError('\"size\" argument must be a number')\n    } else if (size < 0) {\n        throw new RangeError('\"size\" argument must not be negative')\n    }\n}\n\nfunction alloc(that, size, fill, encoding) {\n    assertSize(size)\n    if (size <= 0) {\n        return createBuffer(that, size)\n    }\n    if (fill !== undefined) {\n        // Only pay attention to encoding if it's a string. This\n        // prevents accidentally sending in a number that would\n        // be interpretted as a start offset.\n        return typeof encoding === 'string'\n            ? createBuffer(that, size).fill(fill, encoding)\n            : createBuffer(that, size).fill(fill)\n    }\n    return createBuffer(that, size)\n}\n\n/**\n * Creates a new filled Buffer instance.\n * alloc(size[, fill[, encoding]])\n **/\nBuffer.alloc = function(size, fill, encoding) {\n    return alloc(null, size, fill, encoding)\n}\n\nfunction allocUnsafe(that, size) {\n    assertSize(size)\n    that = createBuffer(that, size < 0 ? 0 : checked(size) | 0)\n    if (!Buffer.TYPED_ARRAY_SUPPORT) {\n        for (var i = 0; i < size; ++i) {\n            that[i] = 0\n        }\n    }\n    return that\n}\n\n/**\n * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.\n * */\nBuffer.allocUnsafe = function(size) {\n    return allocUnsafe(null, size)\n}\n/**\n * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.\n */\nBuffer.allocUnsafeSlow = function(size) {\n    return allocUnsafe(null, size)\n}\n\nfunction fromString(that, string, encoding) {\n    if (typeof encoding !== 'string' || encoding === '') {\n        encoding = 'utf8'\n    }\n\n    if (!Buffer.isEncoding(encoding)) {\n        throw new TypeError('\"encoding\" must be a valid string encoding')\n    }\n\n    var length = byteLength(string, encoding) | 0\n    that = createBuffer(that, length)\n\n    var actual = that.write(string, encoding)\n\n    if (actual !== length) {\n        // Writing a hex string, for example, that contains invalid characters will\n        // cause everything after the first invalid character to be ignored. (e.g.\n        // 'abxxcd' will be treated as 'ab')\n        that = that.slice(0, actual)\n    }\n\n    return that\n}\n\nfunction fromArrayLike(that, array) {\n    var length = array.length < 0 ? 0 : checked(array.length) | 0\n    that = createBuffer(that, length)\n    for (var i = 0; i < length; i += 1) {\n        that[i] = array[i] & 255\n    }\n    return that\n}\n\nfunction fromArrayBuffer(that, array, byteOffset, length) {\n    array.byteLength // this throws if `array` is not a valid ArrayBuffer\n\n    if (byteOffset < 0 || array.byteLength < byteOffset) {\n        throw new RangeError(\"'offset' is out of bounds\")\n    }\n\n    if (array.byteLength < byteOffset + (length || 0)) {\n        throw new RangeError(\"'length' is out of bounds\")\n    }\n\n    if (byteOffset === undefined && length === undefined) {\n        array = new Uint8Array(array)\n    } else if (length === undefined) {\n        array = new Uint8Array(array, byteOffset)\n    } else {\n        array = new Uint8Array(array, byteOffset, length)\n    }\n\n    if (Buffer.TYPED_ARRAY_SUPPORT) {\n        // Return an augmented `Uint8Array` instance, for best performance\n        that = array\n        that.__proto__ = Buffer.prototype\n    } else {\n        // Fallback: Return an object instance of the Buffer class\n        that = fromArrayLike(that, array)\n    }\n    return that\n}\n\nfunction fromObject(that, obj) {\n    if (internalIsBuffer(obj)) {\n        var len = checked(obj.length) | 0\n        that = createBuffer(that, len)\n\n        if (that.length === 0) {\n            return that\n        }\n\n        obj.copy(that, 0, 0, len)\n        return that\n    }\n\n    if (obj) {\n        if (\n            (typeof ArrayBuffer !== 'undefined' &&\n                obj.buffer instanceof ArrayBuffer) ||\n            'length' in obj\n        ) {\n            if (typeof obj.length !== 'number' || isnan(obj.length)) {\n                return createBuffer(that, 0)\n            }\n            return fromArrayLike(that, obj)\n        }\n\n        if (obj.type === 'Buffer' && Array.isArray(obj.data)) {\n            return fromArrayLike(that, obj.data)\n        }\n    }\n\n    throw new TypeError(\n        'First argument must be a string, Buffer, ArrayBuffer, Array, or array-like object.',\n    )\n}\n\nfunction checked(length) {\n    // Note: cannot use `length < kMaxLength()` here because that fails when\n    // length is NaN (which is otherwise coerced to zero.)\n    if (length >= kMaxLength()) {\n        throw new RangeError(\n            'Attempt to allocate Buffer larger than maximum ' +\n                'size: 0x' +\n                kMaxLength().toString(16) +\n                ' bytes',\n        )\n    }\n    return length | 0\n}\n\nexport function SlowBuffer(length) {\n    if (+length != length) {\n        // eslint-disable-line eqeqeq\n        length = 0\n    }\n    return Buffer.alloc(+length)\n}\nBuffer.isBuffer = isBuffer\nfunction internalIsBuffer(b) {\n    return !!(b != null && b._isBuffer)\n}\n\nBuffer.compare = function compare(a, b) {\n    if (!internalIsBuffer(a) || !internalIsBuffer(b)) {\n        throw new TypeError('Arguments must be Buffers')\n    }\n\n    if (a === b) return 0\n\n    var x = a.length\n    var y = b.length\n\n    for (var i = 0, len = Math.min(x, y); i < len; ++i) {\n        if (a[i] !== b[i]) {\n            x = a[i]\n            y = b[i]\n            break\n        }\n    }\n\n    if (x < y) return -1\n    if (y < x) return 1\n    return 0\n}\n\nBuffer.isEncoding = function isEncoding(encoding) {\n    switch (String(encoding).toLowerCase()) {\n        case 'hex':\n        case 'utf8':\n        case 'utf-8':\n        case 'ascii':\n        case 'latin1':\n        case 'binary':\n        case 'base64':\n        case 'ucs2':\n        case 'ucs-2':\n        case 'utf16le':\n        case 'utf-16le':\n            return true\n        default:\n            return false\n    }\n}\n\nBuffer.concat = function concat(list, length) {\n    if (!Array.isArray(list)) {\n        throw new TypeError('\"list\" argument must be an Array of Buffers')\n    }\n\n    if (list.length === 0) {\n        return Buffer.alloc(0)\n    }\n\n    var i\n    if (length === undefined) {\n        length = 0\n        for (i = 0; i < list.length; ++i) {\n            length += list[i].length\n        }\n    }\n\n    var buffer = Buffer.allocUnsafe(length)\n    var pos = 0\n    for (i = 0; i < list.length; ++i) {\n        var buf = list[i]\n        if (!internalIsBuffer(buf)) {\n            throw new TypeError('\"list\" argument must be an Array of Buffers')\n        }\n        buf.copy(buffer, pos)\n        pos += buf.length\n    }\n    return buffer\n}\n\nfunction byteLength(string, encoding) {\n    if (internalIsBuffer(string)) {\n        return string.length\n    }\n    if (\n        typeof ArrayBuffer !== 'undefined' &&\n        typeof ArrayBuffer.isView === 'function' &&\n        (ArrayBuffer.isView(string) || string instanceof ArrayBuffer)\n    ) {\n        return string.byteLength\n    }\n    if (typeof string !== 'string') {\n        string = '' + string\n    }\n\n    var len = string.length\n    if (len === 0) return 0\n\n    // Use a for loop to avoid recursion\n    var loweredCase = false\n    for (;;) {\n        switch (encoding) {\n            case 'ascii':\n            case 'latin1':\n            case 'binary':\n                return len\n            case 'utf8':\n            case 'utf-8':\n            case undefined:\n                return utf8ToBytes(string).length\n            case 'ucs2':\n            case 'ucs-2':\n            case 'utf16le':\n            case 'utf-16le':\n                return len * 2\n            case 'hex':\n                return len >>> 1\n            case 'base64':\n                return base64ToBytes(string).length\n            default:\n                if (loweredCase) return utf8ToBytes(string).length // assume utf8\n                encoding = ('' + encoding).toLowerCase()\n                loweredCase = true\n        }\n    }\n}\nBuffer.byteLength = byteLength\n\nfunction slowToString(encoding, start, end) {\n    var loweredCase = false\n\n    // No need to verify that \"this.length <= MAX_UINT32\" since it's a read-only\n    // property of a typed array.\n\n    // This behaves neither like String nor Uint8Array in that we set start/end\n    // to their upper/lower bounds if the value passed is out of range.\n    // undefined is handled specially as per ECMA-262 6th Edition,\n    // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.\n    if (start === undefined || start < 0) {\n        start = 0\n    }\n    // Return early if start > this.length. Done here to prevent potential uint32\n    // coercion fail below.\n    if (start > this.length) {\n        return ''\n    }\n\n    if (end === undefined || end > this.length) {\n        end = this.length\n    }\n\n    if (end <= 0) {\n        return ''\n    }\n\n    // Force coersion to uint32. This will also coerce falsey/NaN values to 0.\n    end >>>= 0\n    start >>>= 0\n\n    if (end <= start) {\n        return ''\n    }\n\n    if (!encoding) encoding = 'utf8'\n\n    while (true) {\n        switch (encoding) {\n            case 'hex':\n                return hexSlice(this, start, end)\n\n            case 'utf8':\n            case 'utf-8':\n                return utf8Slice(this, start, end)\n\n            case 'ascii':\n                return asciiSlice(this, start, end)\n\n            case 'latin1':\n            case 'binary':\n                return latin1Slice(this, start, end)\n\n            case 'base64':\n                return base64Slice(this, start, end)\n\n            case 'ucs2':\n            case 'ucs-2':\n            case 'utf16le':\n            case 'utf-16le':\n                return utf16leSlice(this, start, end)\n\n            default:\n                if (loweredCase)\n                    throw new TypeError('Unknown encoding: ' + encoding)\n                encoding = (encoding + '').toLowerCase()\n                loweredCase = true\n        }\n    }\n}\n\n// The property is used by `Buffer.isBuffer` and `is-buffer` (in Safari 5-7) to detect\n// Buffer instances.\nBuffer.prototype._isBuffer = true\n\nfunction swap(b, n, m) {\n    var i = b[n]\n    b[n] = b[m]\n    b[m] = i\n}\n\nBuffer.prototype.swap16 = function swap16() {\n    var len = this.length\n    if (len % 2 !== 0) {\n        throw new RangeError('Buffer size must be a multiple of 16-bits')\n    }\n    for (var i = 0; i < len; i += 2) {\n        swap(this, i, i + 1)\n    }\n    return this\n}\n\nBuffer.prototype.swap32 = function swap32() {\n    var len = this.length\n    if (len % 4 !== 0) {\n        throw new RangeError('Buffer size must be a multiple of 32-bits')\n    }\n    for (var i = 0; i < len; i += 4) {\n        swap(this, i, i + 3)\n        swap(this, i + 1, i + 2)\n    }\n    return this\n}\n\nBuffer.prototype.swap64 = function swap64() {\n    var len = this.length\n    if (len % 8 !== 0) {\n        throw new RangeError('Buffer size must be a multiple of 64-bits')\n    }\n    for (var i = 0; i < len; i += 8) {\n        swap(this, i, i + 7)\n        swap(this, i + 1, i + 6)\n        swap(this, i + 2, i + 5)\n        swap(this, i + 3, i + 4)\n    }\n    return this\n}\n\nBuffer.prototype.toString = function toString() {\n    var length = this.length | 0\n    if (length === 0) return ''\n    if (arguments.length === 0) return utf8Slice(this, 0, length)\n    return slowToString.apply(this, arguments)\n}\n\nBuffer.prototype.equals = function equals(b) {\n    if (!internalIsBuffer(b)) throw new TypeError('Argument must be a Buffer')\n    if (this === b) return true\n    return Buffer.compare(this, b) === 0\n}\n\n\nBuffer.prototype.compare = function compare(\n    target,\n    start,\n    end,\n    thisStart,\n    thisEnd,\n) {\n    if (!internalIsBuffer(target)) {\n        throw new TypeError('Argument must be a Buffer')\n    }\n\n    if (start === undefined) {\n        start = 0\n    }\n    if (end === undefined) {\n        end = target ? target.length : 0\n    }\n    if (thisStart === undefined) {\n        thisStart = 0\n    }\n    if (thisEnd === undefined) {\n        thisEnd = this.length\n    }\n\n    if (\n        start < 0 ||\n        end > target.length ||\n        thisStart < 0 ||\n        thisEnd > this.length\n    ) {\n        throw new RangeError('out of range index')\n    }\n\n    if (thisStart >= thisEnd && start >= end) {\n        return 0\n    }\n    if (thisStart >= thisEnd) {\n        return -1\n    }\n    if (start >= end) {\n        return 1\n    }\n\n    start >>>= 0\n    end >>>= 0\n    thisStart >>>= 0\n    thisEnd >>>= 0\n\n    if (this === target) return 0\n\n    var x = thisEnd - thisStart\n    var y = end - start\n    var len = Math.min(x, y)\n\n    var thisCopy = this.slice(thisStart, thisEnd)\n    var targetCopy = target.slice(start, end)\n\n    for (var i = 0; i < len; ++i) {\n        if (thisCopy[i] !== targetCopy[i]) {\n            x = thisCopy[i]\n            y = targetCopy[i]\n            break\n        }\n    }\n\n    if (x < y) return -1\n    if (y < x) return 1\n    return 0\n}\n\n// Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,\n// OR the last index of `val` in `buffer` at offset <= `byteOffset`.\n//\n// Arguments:\n// - buffer - a Buffer to search\n// - val - a string, Buffer, or number\n// - byteOffset - an index into `buffer`; will be clamped to an int32\n// - encoding - an optional encoding, relevant is val is a string\n// - dir - true for indexOf, false for lastIndexOf\nfunction bidirectionalIndexOf(buffer, val, byteOffset, encoding, dir) {\n    // Empty buffer means no match\n    if (buffer.length === 0) return -1\n\n    // Normalize byteOffset\n    if (typeof byteOffset === 'string') {\n        encoding = byteOffset\n        byteOffset = 0\n    } else if (byteOffset > 0x7fffffff) {\n        byteOffset = 0x7fffffff\n    } else if (byteOffset < -0x80000000) {\n        byteOffset = -0x80000000\n    }\n    byteOffset = +byteOffset // Coerce to Number.\n    if (isNaN(byteOffset)) {\n        // byteOffset: it it's undefined, null, NaN, \"foo\", etc, search whole buffer\n        byteOffset = dir ? 0 : buffer.length - 1\n    }\n\n    // Normalize byteOffset: negative offsets start from the end of the buffer\n    if (byteOffset < 0) byteOffset = buffer.length + byteOffset\n    if (byteOffset >= buffer.length) {\n        if (dir) return -1\n        else byteOffset = buffer.length - 1\n    } else if (byteOffset < 0) {\n        if (dir) byteOffset = 0\n        else return -1\n    }\n\n    // Normalize val\n    if (typeof val === 'string') {\n        val = Buffer.from(val, encoding)\n    }\n\n    // Finally, search either indexOf (if dir is true) or lastIndexOf\n    if (internalIsBuffer(val)) {\n        // Special case: looking for empty string/buffer always fails\n        if (val.length === 0) {\n            return -1\n        }\n        return arrayIndexOf(buffer, val, byteOffset, encoding, dir)\n    } else if (typeof val === 'number') {\n        val = val & 0xff // Search for a byte value [0-255]\n        if (\n            Buffer.TYPED_ARRAY_SUPPORT &&\n            typeof Uint8Array.prototype.indexOf === 'function'\n        ) {\n            if (dir) {\n                return Uint8Array.prototype.indexOf.call(\n                    buffer,\n                    val,\n                    byteOffset,\n                )\n            } else {\n                return Uint8Array.prototype.lastIndexOf.call(\n                    buffer,\n                    val,\n                    byteOffset,\n                )\n            }\n        }\n        return arrayIndexOf(buffer, [val], byteOffset, encoding, dir)\n    }\n\n    throw new TypeError('val must be string, number or Buffer')\n}\n\nfunction arrayIndexOf(arr, val, byteOffset, encoding, dir) {\n    var indexSize = 1\n    var arrLength = arr.length\n    var valLength = val.length\n\n    if (encoding !== undefined) {\n        encoding = String(encoding).toLowerCase()\n        if (\n            encoding === 'ucs2' ||\n            encoding === 'ucs-2' ||\n            encoding === 'utf16le' ||\n            encoding === 'utf-16le'\n        ) {\n            if (arr.length < 2 || val.length < 2) {\n                return -1\n            }\n            indexSize = 2\n            arrLength /= 2\n            valLength /= 2\n            byteOffset /= 2\n        }\n    }\n\n    function read(buf, i) {\n        if (indexSize === 1) {\n            return buf[i]\n        } else {\n            return buf.readUInt16BE(i * indexSize)\n        }\n    }\n\n    var i\n    if (dir) {\n        var foundIndex = -1\n        for (i = byteOffset; i < arrLength; i++) {\n            if (\n                read(arr, i) ===\n                read(val, foundIndex === -1 ? 0 : i - foundIndex)\n            ) {\n                if (foundIndex === -1) foundIndex = i\n                if (i - foundIndex + 1 === valLength)\n                    return foundIndex * indexSize\n            } else {\n                if (foundIndex !== -1) i -= i - foundIndex\n                foundIndex = -1\n            }\n        }\n    } else {\n        if (byteOffset + valLength > arrLength)\n            byteOffset = arrLength - valLength\n        for (i = byteOffset; i >= 0; i--) {\n            var found = true\n            for (var j = 0; j < valLength; j++) {\n                if (read(arr, i + j) !== read(val, j)) {\n                    found = false\n                    break\n                }\n            }\n            if (found) return i\n        }\n    }\n\n    return -1\n}\n\nBuffer.prototype.includes = function includes(val, byteOffset, encoding) {\n    return this.indexOf(val, byteOffset, encoding) !== -1\n}\n\nBuffer.prototype.indexOf = function indexOf(val, byteOffset, encoding) {\n    return bidirectionalIndexOf(this, val, byteOffset, encoding, true)\n}\n\nBuffer.prototype.lastIndexOf = function lastIndexOf(val, byteOffset, encoding) {\n    return bidirectionalIndexOf(this, val, byteOffset, encoding, false)\n}\n\nfunction hexWrite(buf, string, offset, length) {\n    offset = Number(offset) || 0\n    var remaining = buf.length - offset\n    if (!length) {\n        length = remaining\n    } else {\n        length = Number(length)\n        if (length > remaining) {\n            length = remaining\n        }\n    }\n\n    // must be an even number of digits\n    var strLen = string.length\n    if (strLen % 2 !== 0) throw new TypeError('Invalid hex string')\n\n    if (length > strLen / 2) {\n        length = strLen / 2\n    }\n    for (var i = 0; i < length; ++i) {\n        var parsed = parseInt(string.substr(i * 2, 2), 16)\n        if (isNaN(parsed)) return i\n        buf[offset + i] = parsed\n    }\n    return i\n}\n\nfunction utf8Write(buf, string, offset, length) {\n    return blitBuffer(\n        utf8ToBytes(string, buf.length - offset),\n        buf,\n        offset,\n        length,\n    )\n}\n\nfunction asciiWrite(buf, string, offset, length) {\n    return blitBuffer(asciiToBytes(string), buf, offset, length)\n}\n\nfunction latin1Write(buf, string, offset, length) {\n    return asciiWrite(buf, string, offset, length)\n}\n\nfunction base64Write(buf, string, offset, length) {\n    return blitBuffer(base64ToBytes(string), buf, offset, length)\n}\n\nfunction ucs2Write(buf, string, offset, length) {\n    return blitBuffer(\n        utf16leToBytes(string, buf.length - offset),\n        buf,\n        offset,\n        length,\n    )\n}\n\nBuffer.prototype.write = function write(string, offset, length, encoding) {\n    // Buffer#write(string)\n    if (offset === undefined) {\n        encoding = 'utf8'\n        length = this.length\n        offset = 0\n        // Buffer#write(string, encoding)\n    } else if (length === undefined && typeof offset === 'string') {\n        encoding = offset\n        length = this.length\n        offset = 0\n        // Buffer#write(string, offset[, length][, encoding])\n    } else if (isFinite(offset)) {\n        offset = offset | 0\n        if (isFinite(length)) {\n            length = length | 0\n            if (encoding === undefined) encoding = 'utf8'\n        } else {\n            encoding = length\n            length = undefined\n        }\n        // legacy write(string, encoding, offset, length) - remove in v0.13\n    } else {\n        throw new Error(\n            'Buffer.write(string, encoding, offset[, length]) is no longer supported',\n        )\n    }\n\n    var remaining = this.length - offset\n    if (length === undefined || length > remaining) length = remaining\n\n    if (\n        (string.length > 0 && (length < 0 || offset < 0)) ||\n        offset > this.length\n    ) {\n        throw new RangeError('Attempt to write outside buffer bounds')\n    }\n\n    if (!encoding) encoding = 'utf8'\n\n    var loweredCase = false\n    for (;;) {\n        switch (encoding) {\n            case 'hex':\n                return hexWrite(this, string, offset, length)\n\n            case 'utf8':\n            case 'utf-8':\n                return utf8Write(this, string, offset, length)\n\n            case 'ascii':\n                return asciiWrite(this, string, offset, length)\n\n            case 'latin1':\n            case 'binary':\n                return latin1Write(this, string, offset, length)\n\n            case 'base64':\n                // Warning: maxLength not taken into account in base64Write\n                return base64Write(this, string, offset, length)\n\n            case 'ucs2':\n            case 'ucs-2':\n            case 'utf16le':\n            case 'utf-16le':\n                return ucs2Write(this, string, offset, length)\n\n            default:\n                if (loweredCase)\n                    throw new TypeError('Unknown encoding: ' + encoding)\n                encoding = ('' + encoding).toLowerCase()\n                loweredCase = true\n        }\n    }\n}\n\nBuffer.prototype.toJSON = function toJSON() {\n    return {\n        type: 'Buffer',\n        data: Array.prototype.slice.call(this._arr || this, 0),\n    }\n}\n\nfunction base64Slice(buf, start, end) {\n    if (start === 0 && end === buf.length) {\n        return base64fromByteArray(buf)\n    } else {\n        return base64fromByteArray(buf.slice(start, end))\n    }\n}\n\nfunction utf8Slice(buf, start, end) {\n    end = Math.min(buf.length, end)\n    var res = []\n\n    var i = start\n    while (i < end) {\n        var firstByte = buf[i]\n        var codePoint = null\n        var bytesPerSequence =\n            firstByte > 0xef\n                ? 4\n                : firstByte > 0xdf\n                ? 3\n                : firstByte > 0xbf\n                ? 2\n                : 1\n\n        if (i + bytesPerSequence <= end) {\n            var secondByte, thirdByte, fourthByte, tempCodePoint\n\n            switch (bytesPerSequence) {\n                case 1:\n                    if (firstByte < 0x80) {\n                        codePoint = firstByte\n                    }\n                    break\n                case 2:\n                    secondByte = buf[i + 1]\n                    if ((secondByte & 0xc0) === 0x80) {\n                        tempCodePoint =\n                            ((firstByte & 0x1f) << 0x6) | (secondByte & 0x3f)\n                        if (tempCodePoint > 0x7f) {\n                            codePoint = tempCodePoint\n                        }\n                    }\n                    break\n                case 3:\n                    secondByte = buf[i + 1]\n                    thirdByte = buf[i + 2]\n                    if (\n                        (secondByte & 0xc0) === 0x80 &&\n                        (thirdByte & 0xc0) === 0x80\n                    ) {\n                        tempCodePoint =\n                            ((firstByte & 0xf) << 0xc) |\n                            ((secondByte & 0x3f) << 0x6) |\n                            (thirdByte & 0x3f)\n                        if (\n                            tempCodePoint > 0x7ff &&\n                            (tempCodePoint < 0xd800 || tempCodePoint > 0xdfff)\n                        ) {\n                            codePoint = tempCodePoint\n                        }\n                    }\n                    break\n                case 4:\n                    secondByte = buf[i + 1]\n                    thirdByte = buf[i + 2]\n                    fourthByte = buf[i + 3]\n                    if (\n                        (secondByte & 0xc0) === 0x80 &&\n                        (thirdByte & 0xc0) === 0x80 &&\n                        (fourthByte & 0xc0) === 0x80\n                    ) {\n                        tempCodePoint =\n                            ((firstByte & 0xf) << 0x12) |\n                            ((secondByte & 0x3f) << 0xc) |\n                            ((thirdByte & 0x3f) << 0x6) |\n                            (fourthByte & 0x3f)\n                        if (\n                            tempCodePoint > 0xffff &&\n                            tempCodePoint < 0x110000\n                        ) {\n                            codePoint = tempCodePoint\n                        }\n                    }\n            }\n        }\n\n        if (codePoint === null) {\n            // we did not generate a valid codePoint so insert a\n            // replacement char (U+FFFD) and advance only 1 byte\n            codePoint = 0xfffd\n            bytesPerSequence = 1\n        } else if (codePoint > 0xffff) {\n            // encode to utf16 (surrogate pair dance)\n            codePoint -= 0x10000\n            res.push(((codePoint >>> 10) & 0x3ff) | 0xd800)\n            codePoint = 0xdc00 | (codePoint & 0x3ff)\n        }\n\n        res.push(codePoint)\n        i += bytesPerSequence\n    }\n\n    return decodeCodePointsArray(res)\n}\n\n// Based on http://stackoverflow.com/a/22747272/680742, the browser with\n// the lowest limit is Chrome, with 0x10000 args.\n// We go 1 magnitude less, for safety\nvar MAX_ARGUMENTS_LENGTH = 0x1000\n\nfunction decodeCodePointsArray(codePoints) {\n    var len = codePoints.length\n    if (len <= MAX_ARGUMENTS_LENGTH) {\n        return String.fromCharCode.apply(String, codePoints) // avoid extra slice()\n    }\n\n    // Decode in chunks to avoid \"call stack size exceeded\".\n    var res = ''\n    var i = 0\n    while (i < len) {\n        res += String.fromCharCode.apply(\n            String,\n            codePoints.slice(i, (i += MAX_ARGUMENTS_LENGTH)),\n        )\n    }\n    return res\n}\n\nfunction asciiSlice(buf, start, end) {\n    var ret = ''\n    end = Math.min(buf.length, end)\n\n    for (var i = start; i < end; ++i) {\n        ret += String.fromCharCode(buf[i] & 0x7f)\n    }\n    return ret\n}\n\nfunction latin1Slice(buf, start, end) {\n    var ret = ''\n    end = Math.min(buf.length, end)\n\n    for (var i = start; i < end; ++i) {\n        ret += String.fromCharCode(buf[i])\n    }\n    return ret\n}\n\nfunction hexSlice(buf, start, end) {\n    var len = buf.length\n\n    if (!start || start < 0) start = 0\n    if (!end || end < 0 || end > len) end = len\n\n    var out = ''\n    for (var i = start; i < end; ++i) {\n        out += toHex(buf[i])\n    }\n    return out\n}\n\nfunction utf16leSlice(buf, start, end) {\n    var bytes = buf.slice(start, end)\n    var res = ''\n    for (var i = 0; i < bytes.length; i += 2) {\n        res += String.fromCharCode(bytes[i] + bytes[i + 1] * 256)\n    }\n    return res\n}\n\nBuffer.prototype.slice = function slice(start, end) {\n    var len = this.length\n    start = ~~start\n    end = end === undefined ? len : ~~end\n\n    if (start < 0) {\n        start += len\n        if (start < 0) start = 0\n    } else if (start > len) {\n        start = len\n    }\n\n    if (end < 0) {\n        end += len\n        if (end < 0) end = 0\n    } else if (end > len) {\n        end = len\n    }\n\n    if (end < start) end = start\n\n    var newBuf\n    if (Buffer.TYPED_ARRAY_SUPPORT) {\n        newBuf = this.subarray(start, end)\n        newBuf.__proto__ = Buffer.prototype\n    } else {\n        var sliceLen = end - start\n        newBuf = new Buffer(sliceLen, undefined)\n        for (var i = 0; i < sliceLen; ++i) {\n            newBuf[i] = this[i + start]\n        }\n    }\n\n    return newBuf\n}\n\n/*\n * Need to make sure that buffer isn't trying to write out of bounds.\n */\nfunction checkOffset(offset, ext, length) {\n    if (offset % 1 !== 0 || offset < 0)\n        throw new RangeError('offset is not uint')\n    if (offset + ext > length)\n        throw new RangeError('Trying to access beyond buffer length')\n}\n\nBuffer.prototype.readUIntLE = function readUIntLE(\n    offset,\n    byteLength,\n    noAssert,\n) {\n    offset = offset | 0\n    byteLength = byteLength | 0\n    if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n    var val = this[offset]\n    var mul = 1\n    var i = 0\n    while (++i < byteLength && (mul *= 0x100)) {\n        val += this[offset + i] * mul\n    }\n\n    return val\n}\n\nBuffer.prototype.readUIntBE = function readUIntBE(\n    offset,\n    byteLength,\n    noAssert,\n) {\n    offset = offset | 0\n    byteLength = byteLength | 0\n    if (!noAssert) {\n        checkOffset(offset, byteLength, this.length)\n    }\n\n    var val = this[offset + --byteLength]\n    var mul = 1\n    while (byteLength > 0 && (mul *= 0x100)) {\n        val += this[offset + --byteLength] * mul\n    }\n\n    return val\n}\n\nBuffer.prototype.readUInt8 = function readUInt8(offset, noAssert) {\n    if (!noAssert) checkOffset(offset, 1, this.length)\n    return this[offset]\n}\n\nBuffer.prototype.readUInt16LE = function readUInt16LE(offset, noAssert) {\n    if (!noAssert) checkOffset(offset, 2, this.length)\n    return this[offset] | (this[offset + 1] << 8)\n}\n\nBuffer.prototype.readUInt16BE = function readUInt16BE(offset, noAssert) {\n    if (!noAssert) checkOffset(offset, 2, this.length)\n    return (this[offset] << 8) | this[offset + 1]\n}\n\nBuffer.prototype.readUInt32LE = function readUInt32LE(offset, noAssert) {\n    if (!noAssert) checkOffset(offset, 4, this.length)\n\n    return (\n        (this[offset] | (this[offset + 1] << 8) | (this[offset + 2] << 16)) +\n        this[offset + 3] * 0x1000000\n    )\n}\n\nBuffer.prototype.readUInt32BE = function readUInt32BE(offset, noAssert) {\n    if (!noAssert) checkOffset(offset, 4, this.length)\n\n    return (\n        this[offset] * 0x1000000 +\n        ((this[offset + 1] << 16) | (this[offset + 2] << 8) | this[offset + 3])\n    )\n}\n\nBuffer.prototype.readIntLE = function readIntLE(offset, byteLength, noAssert) {\n    offset = offset | 0\n    byteLength = byteLength | 0\n    if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n    var val = this[offset]\n    var mul = 1\n    var i = 0\n    while (++i < byteLength && (mul *= 0x100)) {\n        val += this[offset + i] * mul\n    }\n    mul *= 0x80\n\n    if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n    return val\n}\n\nBuffer.prototype.readIntBE = function readIntBE(offset, byteLength, noAssert) {\n    offset = offset | 0\n    byteLength = byteLength | 0\n    if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n    var i = byteLength\n    var mul = 1\n    var val = this[offset + --i]\n    while (i > 0 && (mul *= 0x100)) {\n        val += this[offset + --i] * mul\n    }\n    mul *= 0x80\n\n    if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n    return val\n}\n\nBuffer.prototype.readInt8 = function readInt8(offset, noAssert) {\n    if (!noAssert) checkOffset(offset, 1, this.length)\n    if (!(this[offset] & 0x80)) return this[offset]\n    return (0xff - this[offset] + 1) * -1\n}\n\nBuffer.prototype.readInt16LE = function readInt16LE(offset, noAssert) {\n    if (!noAssert) checkOffset(offset, 2, this.length)\n    var val = this[offset] | (this[offset + 1] << 8)\n    return val & 0x8000 ? val | 0xffff0000 : val\n}\n\nBuffer.prototype.readInt16BE = function readInt16BE(offset, noAssert) {\n    if (!noAssert) checkOffset(offset, 2, this.length)\n    var val = this[offset + 1] | (this[offset] << 8)\n    return val & 0x8000 ? val | 0xffff0000 : val\n}\n\nBuffer.prototype.readInt32LE = function readInt32LE(offset, noAssert) {\n    if (!noAssert) checkOffset(offset, 4, this.length)\n\n    return (\n        this[offset] |\n        (this[offset + 1] << 8) |\n        (this[offset + 2] << 16) |\n        (this[offset + 3] << 24)\n    )\n}\n\nBuffer.prototype.readInt32BE = function readInt32BE(offset, noAssert) {\n    if (!noAssert) checkOffset(offset, 4, this.length)\n\n    return (\n        (this[offset] << 24) |\n        (this[offset + 1] << 16) |\n        (this[offset + 2] << 8) |\n        this[offset + 3]\n    )\n}\n\nBuffer.prototype.readFloatLE = function readFloatLE(offset, noAssert) {\n    if (!noAssert) checkOffset(offset, 4, this.length)\n    return ieee754read(this, offset, true, 23, 4)\n}\n\nBuffer.prototype.readFloatBE = function readFloatBE(offset, noAssert) {\n    if (!noAssert) checkOffset(offset, 4, this.length)\n    return ieee754read(this, offset, false, 23, 4)\n}\n\nBuffer.prototype.readDoubleLE = function readDoubleLE(offset, noAssert) {\n    if (!noAssert) checkOffset(offset, 8, this.length)\n    return ieee754read(this, offset, true, 52, 8)\n}\n\nBuffer.prototype.readDoubleBE = function readDoubleBE(offset, noAssert) {\n    if (!noAssert) checkOffset(offset, 8, this.length)\n    return ieee754read(this, offset, false, 52, 8)\n}\n\nfunction checkInt(buf, value, offset, ext, max, min) {\n    if (!internalIsBuffer(buf))\n        throw new TypeError('\"buffer\" argument must be a Buffer instance')\n    if (value > max || value < min)\n        throw new RangeError('\"value\" argument is out of bounds')\n    if (offset + ext > buf.length) throw new RangeError('Index out of range')\n}\n\nBuffer.prototype.writeUIntLE = function writeUIntLE(\n    value,\n    offset,\n    byteLength,\n    noAssert,\n) {\n    value = +value\n    offset = offset | 0\n    byteLength = byteLength | 0\n    if (!noAssert) {\n        var maxBytes = Math.pow(2, 8 * byteLength) - 1\n        checkInt(this, value, offset, byteLength, maxBytes, 0)\n    }\n\n    var mul = 1\n    var i = 0\n    this[offset] = value & 0xff\n    while (++i < byteLength && (mul *= 0x100)) {\n        this[offset + i] = (value / mul) & 0xff\n    }\n\n    return offset + byteLength\n}\n\nBuffer.prototype.writeUIntBE = function writeUIntBE(\n    value,\n    offset,\n    byteLength,\n    noAssert,\n) {\n    value = +value\n    offset = offset | 0\n    byteLength = byteLength | 0\n    if (!noAssert) {\n        var maxBytes = Math.pow(2, 8 * byteLength) - 1\n        checkInt(this, value, offset, byteLength, maxBytes, 0)\n    }\n\n    var i = byteLength - 1\n    var mul = 1\n    this[offset + i] = value & 0xff\n    while (--i >= 0 && (mul *= 0x100)) {\n        this[offset + i] = (value / mul) & 0xff\n    }\n\n    return offset + byteLength\n}\n\nBuffer.prototype.writeUInt8 = function writeUInt8(value, offset, noAssert) {\n    value = +value\n    offset = offset | 0\n    if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0)\n    if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)\n    this[offset] = value & 0xff\n    return offset + 1\n}\n\nfunction objectWriteUInt16(buf, value, offset, littleEndian) {\n    if (value < 0) value = 0xffff + value + 1\n    for (var i = 0, j = Math.min(buf.length - offset, 2); i < j; ++i) {\n        buf[offset + i] =\n            (value & (0xff << (8 * (littleEndian ? i : 1 - i)))) >>>\n            ((littleEndian ? i : 1 - i) * 8)\n    }\n}\n\nBuffer.prototype.writeUInt16LE = function writeUInt16LE(\n    value,\n    offset,\n    noAssert,\n) {\n    value = +value\n    offset = offset | 0\n    if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n    if (Buffer.TYPED_ARRAY_SUPPORT) {\n        this[offset] = value & 0xff\n        this[offset + 1] = value >>> 8\n    } else {\n        objectWriteUInt16(this, value, offset, true)\n    }\n    return offset + 2\n}\n\nBuffer.prototype.writeUInt16BE = function writeUInt16BE(\n    value,\n    offset,\n    noAssert,\n) {\n    value = +value\n    offset = offset | 0\n    if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n    if (Buffer.TYPED_ARRAY_SUPPORT) {\n        this[offset] = value >>> 8\n        this[offset + 1] = value & 0xff\n    } else {\n        objectWriteUInt16(this, value, offset, false)\n    }\n    return offset + 2\n}\n\nfunction objectWriteUInt32(buf, value, offset, littleEndian) {\n    if (value < 0) value = 0xffffffff + value + 1\n    for (var i = 0, j = Math.min(buf.length - offset, 4); i < j; ++i) {\n        buf[offset + i] = (value >>> ((littleEndian ? i : 3 - i) * 8)) & 0xff\n    }\n}\n\nBuffer.prototype.writeUInt32LE = function writeUInt32LE(\n    value,\n    offset,\n    noAssert,\n) {\n    value = +value\n    offset = offset | 0\n    if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n    if (Buffer.TYPED_ARRAY_SUPPORT) {\n        this[offset + 3] = value >>> 24\n        this[offset + 2] = value >>> 16\n        this[offset + 1] = value >>> 8\n        this[offset] = value & 0xff\n    } else {\n        objectWriteUInt32(this, value, offset, true)\n    }\n    return offset + 4\n}\n\nBuffer.prototype.writeUInt32BE = function writeUInt32BE(\n    value,\n    offset,\n    noAssert,\n) {\n    value = +value\n    offset = offset | 0\n    if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n    if (Buffer.TYPED_ARRAY_SUPPORT) {\n        this[offset] = value >>> 24\n        this[offset + 1] = value >>> 16\n        this[offset + 2] = value >>> 8\n        this[offset + 3] = value & 0xff\n    } else {\n        objectWriteUInt32(this, value, offset, false)\n    }\n    return offset + 4\n}\n\nBuffer.prototype.writeIntLE = function writeIntLE(\n    value,\n    offset,\n    byteLength,\n    noAssert,\n) {\n    value = +value\n    offset = offset | 0\n    if (!noAssert) {\n        var limit = Math.pow(2, 8 * byteLength - 1)\n\n        checkInt(this, value, offset, byteLength, limit - 1, -limit)\n    }\n\n    var i = 0\n    var mul = 1\n    var sub = 0\n    this[offset] = value & 0xff\n    while (++i < byteLength && (mul *= 0x100)) {\n        if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {\n            sub = 1\n        }\n        this[offset + i] = (((value / mul) >> 0) - sub) & 0xff\n    }\n\n    return offset + byteLength\n}\n\nBuffer.prototype.writeIntBE = function writeIntBE(\n    value,\n    offset,\n    byteLength,\n    noAssert,\n) {\n    value = +value\n    offset = offset | 0\n    if (!noAssert) {\n        var limit = Math.pow(2, 8 * byteLength - 1)\n\n        checkInt(this, value, offset, byteLength, limit - 1, -limit)\n    }\n\n    var i = byteLength - 1\n    var mul = 1\n    var sub = 0\n    this[offset + i] = value & 0xff\n    while (--i >= 0 && (mul *= 0x100)) {\n        if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {\n            sub = 1\n        }\n        this[offset + i] = (((value / mul) >> 0) - sub) & 0xff\n    }\n\n    return offset + byteLength\n}\n\nBuffer.prototype.writeInt8 = function writeInt8(value, offset, noAssert) {\n    value = +value\n    offset = offset | 0\n    if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80)\n    if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)\n    if (value < 0) value = 0xff + value + 1\n    this[offset] = value & 0xff\n    return offset + 1\n}\n\nBuffer.prototype.writeInt16LE = function writeInt16LE(value, offset, noAssert) {\n    value = +value\n    offset = offset | 0\n    if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n    if (Buffer.TYPED_ARRAY_SUPPORT) {\n        this[offset] = value & 0xff\n        this[offset + 1] = value >>> 8\n    } else {\n        objectWriteUInt16(this, value, offset, true)\n    }\n    return offset + 2\n}\n\nBuffer.prototype.writeInt16BE = function writeInt16BE(value, offset, noAssert) {\n    value = +value\n    offset = offset | 0\n    if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n    if (Buffer.TYPED_ARRAY_SUPPORT) {\n        this[offset] = value >>> 8\n        this[offset + 1] = value & 0xff\n    } else {\n        objectWriteUInt16(this, value, offset, false)\n    }\n    return offset + 2\n}\n\nBuffer.prototype.writeInt32LE = function writeInt32LE(value, offset, noAssert) {\n    value = +value\n    offset = offset | 0\n    if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n    if (Buffer.TYPED_ARRAY_SUPPORT) {\n        this[offset] = value & 0xff\n        this[offset + 1] = value >>> 8\n        this[offset + 2] = value >>> 16\n        this[offset + 3] = value >>> 24\n    } else {\n        objectWriteUInt32(this, value, offset, true)\n    }\n    return offset + 4\n}\n\nBuffer.prototype.writeInt32BE = function writeInt32BE(value, offset, noAssert) {\n    value = +value\n    offset = offset | 0\n    if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n    if (value < 0) value = 0xffffffff + value + 1\n    if (Buffer.TYPED_ARRAY_SUPPORT) {\n        this[offset] = value >>> 24\n        this[offset + 1] = value >>> 16\n        this[offset + 2] = value >>> 8\n        this[offset + 3] = value & 0xff\n    } else {\n        objectWriteUInt32(this, value, offset, false)\n    }\n    return offset + 4\n}\n\nfunction checkIEEE754(buf, value, offset, ext, max, min) {\n    if (offset + ext > buf.length) throw new RangeError('Index out of range')\n    if (offset < 0) throw new RangeError('Index out of range')\n}\n\nfunction writeFloat(buf, value, offset, littleEndian, noAssert) {\n    if (!noAssert) {\n        checkIEEE754(\n            buf,\n            value,\n            offset,\n            4,\n            3.4028234663852886e38,\n            -3.4028234663852886e38,\n        )\n    }\n    ieee754write(buf, value, offset, littleEndian, 23, 4)\n    return offset + 4\n}\n\nBuffer.prototype.writeFloatLE = function writeFloatLE(value, offset, noAssert) {\n    return writeFloat(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeFloatBE = function writeFloatBE(value, offset, noAssert) {\n    return writeFloat(this, value, offset, false, noAssert)\n}\n\nfunction writeDouble(buf, value, offset, littleEndian, noAssert) {\n    if (!noAssert) {\n        checkIEEE754(\n            buf,\n            value,\n            offset,\n            8,\n            1.7976931348623157e308,\n            -1.7976931348623157e308,\n        )\n    }\n    ieee754write(buf, value, offset, littleEndian, 52, 8)\n    return offset + 8\n}\n\nBuffer.prototype.writeDoubleLE = function writeDoubleLE(\n    value,\n    offset,\n    noAssert,\n) {\n    return writeDouble(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeDoubleBE = function writeDoubleBE(\n    value,\n    offset,\n    noAssert,\n) {\n    return writeDouble(this, value, offset, false, noAssert)\n}\n\n// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)\nBuffer.prototype.copy = function copy(target, targetStart, start, end) {\n    if (!start) start = 0\n    if (!end && end !== 0) end = this.length\n    if (targetStart >= target.length) targetStart = target.length\n    if (!targetStart) targetStart = 0\n    if (end > 0 && end < start) end = start\n\n    // Copy 0 bytes; we're done\n    if (end === start) return 0\n    if (target.length === 0 || this.length === 0) return 0\n\n    // Fatal error conditions\n    if (targetStart < 0) {\n        throw new RangeError('targetStart out of bounds')\n    }\n    if (start < 0 || start >= this.length)\n        throw new RangeError('sourceStart out of bounds')\n    if (end < 0) throw new RangeError('sourceEnd out of bounds')\n\n    // Are we oob?\n    if (end > this.length) end = this.length\n    if (target.length - targetStart < end - start) {\n        end = target.length - targetStart + start\n    }\n\n    var len = end - start\n    var i\n\n    if (this === target && start < targetStart && targetStart < end) {\n        // descending copy from end\n        for (i = len - 1; i >= 0; --i) {\n            target[i + targetStart] = this[i + start]\n        }\n    } else if (len < 1000 || !Buffer.TYPED_ARRAY_SUPPORT) {\n        // ascending copy from start\n        for (i = 0; i < len; ++i) {\n            target[i + targetStart] = this[i + start]\n        }\n    } else {\n        Uint8Array.prototype.set.call(\n            target,\n            this.subarray(start, start + len),\n            targetStart,\n        )\n    }\n\n    return len\n}\n\n// Usage:\n//    buffer.fill(number[, offset[, end]])\n//    buffer.fill(buffer[, offset[, end]])\n//    buffer.fill(string[, offset[, end]][, encoding])\nBuffer.prototype.fill = function fill(val, start, end, encoding) {\n    // Handle string cases:\n    if (typeof val === 'string') {\n        if (typeof start === 'string') {\n            encoding = start\n            start = 0\n            end = this.length\n        } else if (typeof end === 'string') {\n            encoding = end\n            end = this.length\n        }\n        if (val.length === 1) {\n            var code = val.charCodeAt(0)\n            if (code < 256) {\n                val = code\n            }\n        }\n        if (encoding !== undefined && typeof encoding !== 'string') {\n            throw new TypeError('encoding must be a string')\n        }\n        if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {\n            throw new TypeError('Unknown encoding: ' + encoding)\n        }\n    } else if (typeof val === 'number') {\n        val = val & 255\n    }\n\n    // Invalid ranges are not set to a default, so can range check early.\n    if (start < 0 || this.length < start || this.length < end) {\n        throw new RangeError('Out of range index')\n    }\n\n    if (end <= start) {\n        return this\n    }\n\n    start = start >>> 0\n    end = end === undefined ? this.length : end >>> 0\n\n    if (!val) val = 0\n\n    var i\n    if (typeof val === 'number') {\n        for (i = start; i < end; ++i) {\n            this[i] = val\n        }\n    } else {\n        var bytes = internalIsBuffer(val)\n            ? val\n            : utf8ToBytes(new Buffer(val, encoding).toString())\n        var len = bytes.length\n        for (i = 0; i < end - start; ++i) {\n            this[i + start] = bytes[i % len]\n        }\n    }\n\n    return this\n}\n\n// HELPER FUNCTIONS\n// ================\n\nvar INVALID_BASE64_RE = /[^+\\/0-9A-Za-z-_]/g\n\nfunction base64clean(str) {\n    // Node strips out invalid characters like \\n and \\t from the string, base64-js does not\n    str = stringtrim(str).replace(INVALID_BASE64_RE, '')\n    // Node converts strings with length < 2 to ''\n    if (str.length < 2) return ''\n    // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not\n    while (str.length % 4 !== 0) {\n        str = str + '='\n    }\n    return str\n}\n\nfunction stringtrim(str) {\n    if (str.trim) return str.trim()\n    return str.replace(/^\\s+|\\s+$/g, '')\n}\n\nfunction toHex(n) {\n    if (n < 16) return '0' + n.toString(16)\n    return n.toString(16)\n}\n\nfunction utf8ToBytes(string, units) {\n    units = units || Infinity\n    var codePoint\n    var length = string.length\n    var leadSurrogate = null\n    var bytes = []\n\n    for (var i = 0; i < length; ++i) {\n        codePoint = string.charCodeAt(i)\n\n        // is surrogate component\n        if (codePoint > 0xd7ff && codePoint < 0xe000) {\n            // last char was a lead\n            if (!leadSurrogate) {\n                // no lead yet\n                if (codePoint > 0xdbff) {\n                    // unexpected trail\n                    if ((units -= 3) > -1) bytes.push(0xef, 0xbf, 0xbd)\n                    continue\n                } else if (i + 1 === length) {\n                    // unpaired lead\n                    if ((units -= 3) > -1) bytes.push(0xef, 0xbf, 0xbd)\n                    continue\n                }\n\n                // valid lead\n                leadSurrogate = codePoint\n\n                continue\n            }\n\n            // 2 leads in a row\n            if (codePoint < 0xdc00) {\n                if ((units -= 3) > -1) bytes.push(0xef, 0xbf, 0xbd)\n                leadSurrogate = codePoint\n                continue\n            }\n\n            // valid surrogate pair\n            codePoint =\n                (((leadSurrogate - 0xd800) << 10) | (codePoint - 0xdc00)) +\n                0x10000\n        } else if (leadSurrogate) {\n            // valid bmp char, but last char was a lead\n            if ((units -= 3) > -1) bytes.push(0xef, 0xbf, 0xbd)\n        }\n\n        leadSurrogate = null\n\n        // encode utf8\n        if (codePoint < 0x80) {\n            if ((units -= 1) < 0) break\n            bytes.push(codePoint)\n        } else if (codePoint < 0x800) {\n            if ((units -= 2) < 0) break\n            bytes.push((codePoint >> 0x6) | 0xc0, (codePoint & 0x3f) | 0x80)\n        } else if (codePoint < 0x10000) {\n            if ((units -= 3) < 0) break\n            bytes.push(\n                (codePoint >> 0xc) | 0xe0,\n                ((codePoint >> 0x6) & 0x3f) | 0x80,\n                (codePoint & 0x3f) | 0x80,\n            )\n        } else if (codePoint < 0x110000) {\n            if ((units -= 4) < 0) break\n            bytes.push(\n                (codePoint >> 0x12) | 0xf0,\n                ((codePoint >> 0xc) & 0x3f) | 0x80,\n                ((codePoint >> 0x6) & 0x3f) | 0x80,\n                (codePoint & 0x3f) | 0x80,\n            )\n        } else {\n            throw new Error('Invalid code point')\n        }\n    }\n\n    return bytes\n}\n\nfunction asciiToBytes(str) {\n    var byteArray = []\n    for (var i = 0; i < str.length; ++i) {\n        // Node's code seems to be doing this and not & 0x7F..\n        byteArray.push(str.charCodeAt(i) & 0xff)\n    }\n    return byteArray\n}\n\nfunction utf16leToBytes(str, units) {\n    var c, hi, lo\n    var byteArray = []\n    for (var i = 0; i < str.length; ++i) {\n        if ((units -= 2) < 0) break\n\n        c = str.charCodeAt(i)\n        hi = c >> 8\n        lo = c % 256\n        byteArray.push(lo)\n        byteArray.push(hi)\n    }\n\n    return byteArray\n}\n\nfunction base64ToBytes(str) {\n    return base64toByteArray(base64clean(str))\n}\n\nfunction blitBuffer(src, dst, offset, length) {\n    for (var i = 0; i < length; ++i) {\n        if (i + offset >= dst.length || i >= src.length) break\n        dst[i + offset] = src[i]\n    }\n    return i\n}\n\nfunction isnan(val) {\n    return val !== val // eslint-disable-line no-self-compare\n}\n\n// the following is from is-buffer, also by Feross Aboukhadijeh and with same lisence\n// The _isBuffer check is for Safari 5-7 support, because it's missing\n// Object.prototype.constructor. Remove this eventually\nfunction isBuffer(obj) {\n    return (\n        obj != null &&\n        (!!obj._isBuffer || isFastBuffer(obj) || isSlowBuffer(obj))\n    )\n}\n\nfunction isFastBuffer(obj) {\n    return (\n        !!obj.constructor &&\n        typeof obj.constructor.isBuffer === 'function' &&\n        obj.constructor.isBuffer(obj)\n    )\n}\n\n// For Node v0.10 support. Remove this eventually.\nfunction isSlowBuffer(obj) {\n    return (\n        typeof obj.readFloatLE === 'function' &&\n        typeof obj.slice === 'function' &&\n        isFastBuffer(obj.slice(0, 0))\n    )\n}\n\nfunction ieee754read(buffer, offset, isLE, mLen, nBytes) {\n    var e, m\n    var eLen = nBytes * 8 - mLen - 1\n    var eMax = (1 << eLen) - 1\n    var eBias = eMax >> 1\n    var nBits = -7\n    var i = isLE ? nBytes - 1 : 0\n    var d = isLE ? -1 : 1\n    var s = buffer[offset + i]\n\n    i += d\n\n    e = s & ((1 << -nBits) - 1)\n    s >>= -nBits\n    nBits += eLen\n    for (; nBits > 0; e = e * 256 + buffer[offset + i], i += d, nBits -= 8) {}\n\n    m = e & ((1 << -nBits) - 1)\n    e >>= -nBits\n    nBits += mLen\n    for (; nBits > 0; m = m * 256 + buffer[offset + i], i += d, nBits -= 8) {}\n\n    if (e === 0) {\n        e = 1 - eBias\n    } else if (e === eMax) {\n        return m ? NaN : (s ? -1 : 1) * Infinity\n    } else {\n        m = m + Math.pow(2, mLen)\n        e = e - eBias\n    }\n    return (s ? -1 : 1) * m * Math.pow(2, e - mLen)\n}\n\nfunction ieee754write(buffer, value, offset, isLE, mLen, nBytes) {\n    var e, m, c\n    var eLen = nBytes * 8 - mLen - 1\n    var eMax = (1 << eLen) - 1\n    var eBias = eMax >> 1\n    var rt = mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0\n    var i = isLE ? 0 : nBytes - 1\n    var d = isLE ? 1 : -1\n    var s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0\n\n    value = Math.abs(value)\n\n    if (isNaN(value) || value === Infinity) {\n        m = isNaN(value) ? 1 : 0\n        e = eMax\n    } else {\n        e = Math.floor(Math.log(value) / Math.LN2)\n        if (value * (c = Math.pow(2, -e)) < 1) {\n            e--\n            c *= 2\n        }\n        if (e + eBias >= 1) {\n            value += rt / c\n        } else {\n            value += rt * Math.pow(2, 1 - eBias)\n        }\n        if (value * c >= 2) {\n            e++\n            c /= 2\n        }\n\n        if (e + eBias >= eMax) {\n            m = 0\n            e = eMax\n        } else if (e + eBias >= 1) {\n            m = (value * c - 1) * Math.pow(2, mLen)\n            e = e + eBias\n        } else {\n            m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen)\n            e = 0\n        }\n    }\n\n    for (\n        ;\n        mLen >= 8;\n        buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8\n    ) {}\n\n    e = (e << mLen) | m\n    eLen += mLen\n    for (\n        ;\n        eLen > 0;\n        buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8\n    ) {}\n\n    buffer[offset + i - d] |= s * 128\n}\n", "export { Buffer } from '_node-buffer-polyfill_.js'\n"],
  "mappings": "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",
  "names": []
}
